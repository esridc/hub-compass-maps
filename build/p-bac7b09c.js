const t={convertToGEGeometry:i,exportPoint:o,exportPolygon:h,exportPolyline:c,exportMultipoint:u,exportExtent:v};function i(t,i){return null==i?null:t.convertJSONToGeometry(i)}class s{constructor(t,i,s){this.x=t,this.y=i,this.spatialReference=s,this.z=void 0,this.m=void 0}}function o(t,i,o){const n=new s(t.getPointX(i),t.getPointY(i),o),h=t.hasZ(i),r=t.hasM(i);return h&&(n.z=t.getPointZ(i)),r&&(n.m=t.getPointM(i)),n}class n{constructor(t,i,s,o){this.rings=t,this.spatialReference=i,this.hasZ=void 0,this.hasM=void 0,s&&(this.hasZ=s),o&&(this.hasM=o)}}function h(t,i,s){return new n(t.exportPaths(i),s,t.hasZ(i),t.hasM(i))}class r{constructor(t,i,s,o){this.paths=t,this.spatialReference=i,this.hasZ=void 0,this.hasM=void 0,s&&(this.hasZ=s),o&&(this.hasM=o)}}function c(t,i,s){return new r(t.exportPaths(i),s,t.hasZ(i),t.hasM(i))}class e{constructor(t,i,s,o){this.points=t,this.spatialReference=i,this.hasZ=void 0,this.hasM=void 0,s&&(this.hasZ=s),o&&(this.hasM=o)}}function u(t,i,s){return new e(t.exportPoints(i),s,t.hasZ(i),t.hasM(i))}class l{constructor(t,i,s,o,n){this.xmin=t,this.ymin=i,this.xmax=s,this.ymax=o,this.spatialReference=n,this.zmin=void 0,this.zmax=void 0,this.mmin=void 0,this.mmax=void 0}}function v(t,i,s){const o=t.hasZ(i),n=t.hasM(i),h=new l(t.getXMin(i),t.getYMin(i),t.getXMax(i),t.getYMax(i),s);if(o){const s=t.getZExtent(i);h.zmin=s.vmin,h.zmax=s.vmax}if(n){const s=t.getMExtent(i);h.mmin=s.vmin,h.mmax=s.vmax}return h}export{t};
//# sourceMappingURL=p-bac7b09c.js.map