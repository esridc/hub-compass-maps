import{r as a,p as s,kQ as t,q as r,_ as o,a8 as e,hu as n,U as i,hv as u}from"./p-aad64c9f.js";import"./p-2af77f97.js";let c=class extends o{constructor(a){super(a),this.namedTraceConfigurations=[]}};a([s({type:[t],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],c.prototype,"namedTraceConfigurations",void 0),c=a([r("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],c);const f=c;async function p(a,s,t){const r=e(a),o=s.toJSON();s.globalIds&&s.globalIds.length>0&&(o.globalIds=JSON.stringify(s.globalIds)),s.creators&&s.creators.length>0&&(o.creators=JSON.stringify(s.creators)),s.tags&&s.tags.length>0&&(o.tags=JSON.stringify(s.tags)),s.names&&s.names.length>0&&(o.names=JSON.stringify(s.names));const c={...o,f:"json"},p=n({...r.query,...c}),d=u(p,{...t,method:"post"}),g=`${r.path}/traceConfigurations/query`,{data:m}=await i(g,d);return f.fromJSON(m)}export{p as queryNamedTraceConfigurations};
//# sourceMappingURL=p-e1e7f772.js.map