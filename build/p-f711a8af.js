import{dK as t,gy as i,ai as s,aY as e,cH as r,ah as o,an as p,ao as h,ap as a}from"./p-028496e2.js";import{m as n,c,O as m,f as l,j as u,g as f,a as j}from"./p-970b4eda.js";import{t as d}from"./p-95e79972.js";import{m as b,u as g}from"./p-a29a1b7a.js";import{t as w}from"./p-b3bc59ae.js";import{$ as y}from"./p-eccdd480.js";import"./p-3b51db5e.js";import"./p-d1d0c06b.js";import"./p-b362a32c.js";import"./p-8567e6fe.js";import"./p-711ed159.js";import"./p-262e0e67.js";import"./p-44dc1c97.js";import"./p-eaa7279e.js";import"./p-91f3f02f.js";import"./p-30a1f911.js";import"./p-6f5e77a7.js";import"./p-7b65c278.js";import"./p-94b15954.js";import"./p-6b5df147.js";import"./p-3811f238.js";import"./p-8e631d44.js";import"./p-a925664a.js";import"./p-851e644d.js";import"./p-5c282fdd.js";import"./p-5a65512b.js";import"./p-89242a33.js";import"./p-7580bdba.js";import"./p-a62b18ce.js";import"./p-af8cc455.js";import"./p-b0afd947.js";import"./p-0b0f20ea.js";import"./p-10e5b6ea.js";import"./p-3b8b0ae8.js";import"./p-854d8fad.js";import"./p-1f0b604e.js";import"./p-347800d3.js";import"./p-6339641f.js";import"./p-325c6878.js";import"./p-18b49978.js";import"./p-ecde740d.js";import"./p-3a28ec18.js";import"./p-4f73c6ea.js";import"./p-f87a9f21.js";const _=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],v={graphic:null,property:null,oldValue:null,newValue:null};function I(t){return t instanceof n||t instanceof c||t instanceof m||t instanceof l||t instanceof u||t instanceof f||t instanceof j}function V(i){return t.isCollection(i)&&i.length&&I(i.at(0))}function C(t){return Array.isArray(t)&&t.length>0&&I(t[0])}let F=class extends(b(g)){constructor(){super(...arguments),this._graphics=new t,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new i({getCollections:()=>null==this.layer||this.destroyed?[]:[null!=this.layer.routeInfo?new t([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this._updatingHandles.addOnCollectionChange((()=>this._routeItems),(t=>this._routeItemsChanged(t)),s)}destroy(){this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),this._get("_routeItems")?.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeaturesAtLocation(t,i){return this._graphicsView.hitTest(t).filter((({popupTemplate:t})=>!!t))}highlight(t){let i;i=I(t)?[this._getNetworkFeatureUid(t)]:C(t)?t.map((t=>this._getNetworkFeatureUid(t))):V(t)?t.map((t=>this._getNetworkFeatureUid(t))).toArray():[t.uid];const s=i.filter(e);return s.length?(this._addHighlight(s),r((()=>this._removeHighlight(s)))):r()}async hitTest(t,i){if(this.suspended)return null;const s=this._graphicsView.hitTest(t).filter(e).map((t=>this._networkGraphicMap.get(t)));if(!s.length)return null;const{layer:r}=this;return s.reverse().map((i=>({type:"route",layer:r,mapPoint:t,networkFeature:i})))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const t=this._highlightIds.get(i);this._highlightIds.set(i,t+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),s=new w(t.featuresTilingScheme);this._graphicsView=new y({container:s,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(s),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return _.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const t=this._highlightIds.get(i)-1;0===t?this._highlightIds.delete(i):this._highlightIds.set(i,t)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map((t=>{const i=this._networkFeatureMap.get(t);return this._networkFeatureMap.delete(t),this._networkGraphicMap.delete(i),i})));for(const i of t.removed)this.removeHandles(i)}if(t.added.length){this._graphics.addMany(t.added.map((t=>{const i=this._createGraphic(t);return null==i.symbol?null:(this._networkFeatureMap.set(t,i),this._networkGraphicMap.set(i,t),i)})).filter(e));for(const i of t.added)this.addHandles([o((()=>i.geometry),((t,s)=>{this._updateGraphic(i,"geometry",t,s)})),o((()=>i.symbol),((t,s)=>{this._updateGraphic(i,"symbol",t,s)}))],i);this._graphics.sort(((t,i)=>this._getDrawOrder(t)-this._getDrawOrder(i)))}}_updateGraphic(t,i,s,e){if(!this._networkFeatureMap.has(t)){const i=this._createGraphic(t);return this._networkFeatureMap.set(t,i),this._networkGraphicMap.set(i,t),void this._graphics.add(i)}const r=this._networkFeatureMap.get(t);r[i]=s,v.graphic=r,v.property=i,v.oldValue=e,v.newValue=s,this._graphicsView.graphicUpdateHandler(v)}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),i=d("highlight");this._graphicsView.setHighlight(t.map((t=>({objectId:t,highlightFlags:i}))))}};p([h()],F.prototype,"_graphics",void 0),p([h()],F.prototype,"_routeItems",null),F=p([a("esri.views.2d.layers.RouteLayerView2D")],F);const G=F;export default G;
//# sourceMappingURL=p-f711a8af.js.map