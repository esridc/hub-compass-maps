import{P as e,$ as a}from"./p-645faad3.js";import{l as r,a as t,f as i,u as s}from"./p-aad64c9f.js";import"./p-f3c2956c.js";import"./p-7523d580.js";import"./p-cc72a972.js";import"./p-2af77f97.js";const m="Image Service",n="imagery-layer-save",o="imagery-layer-save-as",c="imagery-tile-layer-save",l="imagery-tile-layer-save-as";function y(e){if("imagery"===e.type)return{isValid:!0};const{raster:a}=e,r="Function"===a?.datasetFormat?a.primaryRasters?.rasters[0]:a;return{isValid:"RasterTileServer"===r?.datasetFormat&&("Raster"===r.tileType||"Map"===r.tileType),errorMessage:"imagery tile layer should be created from a tiled image service."}}function p(e){const a=e.layerJSON;return Promise.resolve(a&&Object.keys(a).length?a:null)}async function f(e,a){const{parsedUrl:m,title:n,fullExtent:o}=e;a.url=m.path,a.title||=n;try{a.extent=await r(o)}catch{a.extent=void 0}t(a,i.METADATA),s(a,i.TILED_IMAGERY,"imagery-tile"===e.type)}async function u(a,r){const t="imagery"===a.type?n:c;return e({layer:a,itemType:m,validateLayer:y,createItemData:p,errorNamePrefix:t},r)}async function d(e,r,t){const i="imagery"===e.type?o:l;return a({layer:e,itemType:m,validateLayer:y,createItemData:p,errorNamePrefix:i,newItem:r,setItemProperties:f},t)}export{u as save,d as saveAs};
//# sourceMappingURL=p-600722d2.js.map