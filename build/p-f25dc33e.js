import{an as e,ao as t,ap as o,dG as s,b5 as i,dF as n,jN as r,g as l,c3 as u,fg as d,jO as a,jP as p}from"./p-3013819f.js";var c;let h=c=class extends s{constructor(){super(...arguments),this.field=null,this.minValue=0,this.maxValue=255}clone(){return new c({field:this.field,minValue:this.minValue,maxValue:this.maxValue})}};e([t({type:String,json:{write:!0}})],h.prototype,"field",void 0),e([t({type:Number,nonNullable:!0,json:{write:!0}})],h.prototype,"minValue",void 0),e([t({type:Number,nonNullable:!0,json:{write:!0}})],h.prototype,"maxValue",void 0),h=c=e([o("esri.renderers.support.pointCloud.ColorModulation")],h);const y=h;const v=new i({pointCloudFixedSizeAlgorithm:"fixed-size",pointCloudSplatAlgorithm:"splat"});let w=class extends s{};e([t({type:v.apiValues,readOnly:!0,nonNullable:!0,json:{type:v.jsonValues,read:!1,write:v.write}})],w.prototype,"type",void 0),w=e([o("esri.renderers.support.pointCloud.PointSizeAlgorithm")],w);const m=w;var f;let j=f=class extends m{constructor(){super(...arguments),this.type="fixed-size",this.size=0,this.useRealWorldSymbolSizes=null}clone(){return new f({size:this.size,useRealWorldSymbolSizes:this.useRealWorldSymbolSizes})}};e([n({pointCloudFixedSizeAlgorithm:"fixed-size"})],j.prototype,"type",void 0),e([t({type:Number,nonNullable:!0,json:{write:!0}})],j.prototype,"size",void 0),e([t({type:Boolean,json:{write:!0}})],j.prototype,"useRealWorldSymbolSizes",void 0),j=f=e([o("esri.renderers.support.pointCloud.PointSizeFixedSizeAlgorithm")],j);const b=j;var g;let C=g=class extends m{constructor(){super(...arguments),this.type="splat",this.scaleFactor=1}clone(){return new g({scaleFactor:this.scaleFactor})}};e([n({pointCloudSplatAlgorithm:"splat"})],C.prototype,"type",void 0),e([t({type:Number,value:1,nonNullable:!0,json:{write:!0}})],C.prototype,"scaleFactor",void 0),C=g=e([o("esri.renderers.support.pointCloud.PointSizeSplatAlgorithm")],C);const S=C;const x={key:"type",base:m,typeMap:{"fixed-size":b,splat:S}};const V=r()({pointCloudClassBreaksRenderer:"point-cloud-class-breaks",pointCloudRGBRenderer:"point-cloud-rgb",pointCloudStretchRenderer:"point-cloud-stretch",pointCloudUniqueValueRenderer:"point-cloud-unique-value"});let z=class extends s{constructor(e){super(e),this.type=void 0,this.pointSizeAlgorithm=null,this.colorModulation=null,this.pointsPerInch=10}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}cloneProperties(){return{pointSizeAlgorithm:l(this.pointSizeAlgorithm),colorModulation:l(this.colorModulation),pointsPerInch:l(this.pointsPerInch)}}};e([t({type:V.apiValues,readOnly:!0,nonNullable:!0,json:{type:V.jsonValues,read:!1,write:V.write}})],z.prototype,"type",void 0),e([t({types:x,json:{write:!0}})],z.prototype,"pointSizeAlgorithm",void 0),e([t({type:y,json:{write:!0}})],z.prototype,"colorModulation",void 0),e([t({json:{write:!0},nonNullable:!0,type:Number})],z.prototype,"pointsPerInch",void 0),z=e([o("esri.renderers.PointCloudRenderer")],z),function(e){e.fieldTransformTypeKebabDict=new i({none:"none",lowFourBit:"low-four-bit",highFourBit:"high-four-bit",absoluteValue:"absolute-value",moduloTen:"modulo-ten"})}(z||(z={}));const N=z;var R;let T=R=class extends s{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new R({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:l(this.color)})}};e([t({type:String,json:{write:!0}})],T.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],T.prototype,"label",void 0),e([t({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue"}}})],T.prototype,"minValue",void 0),e([t({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue"}}})],T.prototype,"maxValue",void 0),e([t({type:u,json:{type:[d],write:!0}})],T.prototype,"color",void 0),T=R=e([o("esri.renderers.support.pointCloud.ColorClassBreakInfo")],T);const P=T;var k;let B=k=class extends N{constructor(e){super(e),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new k({...this.cloneProperties(),field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:l(this.colorClassBreakInfos),legendOptions:l(this.legendOptions)})}};e([n({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],B.prototype,"type",void 0),e([t({json:{write:!0},type:String})],B.prototype,"field",void 0),e([t({type:a,json:{write:!0}})],B.prototype,"legendOptions",void 0),e([t({type:N.fieldTransformTypeKebabDict.apiValues,json:{type:N.fieldTransformTypeKebabDict.jsonValues,read:N.fieldTransformTypeKebabDict.read,write:N.fieldTransformTypeKebabDict.write}})],B.prototype,"fieldTransformType",void 0),e([t({type:[P],json:{write:!0}})],B.prototype,"colorClassBreakInfos",void 0),B=k=e([o("esri.renderers.PointCloudClassBreaksRenderer")],B);const q=B;var A;let O=A=class extends N{constructor(e){super(e),this.type="point-cloud-stretch",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.stops=null}clone(){return new A({...this.cloneProperties(),field:l(this.field),fieldTransformType:l(this.fieldTransformType),stops:l(this.stops),legendOptions:l(this.legendOptions)})}};e([n({pointCloudStretchRenderer:"point-cloud-stretch"})],O.prototype,"type",void 0),e([t({json:{write:!0},type:String})],O.prototype,"field",void 0),e([t({type:a,json:{write:!0}})],O.prototype,"legendOptions",void 0),e([t({type:N.fieldTransformTypeKebabDict.apiValues,json:{type:N.fieldTransformTypeKebabDict.jsonValues,read:N.fieldTransformTypeKebabDict.read,write:N.fieldTransformTypeKebabDict.write}})],O.prototype,"fieldTransformType",void 0),e([t({type:[p],json:{write:!0}})],O.prototype,"stops",void 0),O=A=e([o("esri.renderers.PointCloudStretchRenderer")],O);const F=O;var I;let M=I=class extends s{constructor(){super(...arguments),this.description=null,this.label=null,this.values=null,this.color=null}clone(){return new I({description:this.description,label:this.label,values:l(this.values),color:l(this.color)})}};e([t({type:String,json:{write:!0}})],M.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],M.prototype,"label",void 0),e([t({type:[String],json:{write:!0}})],M.prototype,"values",void 0),e([t({type:u,json:{type:[d],write:!0}})],M.prototype,"color",void 0),M=I=e([o("esri.renderers.support.pointCloud.ColorUniqueValueInfo")],M);const U=M;var G;let W=G=class extends N{constructor(e){super(e),this.type="point-cloud-unique-value",this.field=null,this.fieldTransformType=null,this.colorUniqueValueInfos=null,this.legendOptions=null}clone(){return new G({...this.cloneProperties(),field:l(this.field),fieldTransformType:l(this.fieldTransformType),colorUniqueValueInfos:l(this.colorUniqueValueInfos),legendOptions:l(this.legendOptions)})}};e([n({pointCloudUniqueValueRenderer:"point-cloud-unique-value"})],W.prototype,"type",void 0),e([t({json:{write:!0},type:String})],W.prototype,"field",void 0),e([t({type:N.fieldTransformTypeKebabDict.apiValues,json:{type:N.fieldTransformTypeKebabDict.jsonValues,read:N.fieldTransformTypeKebabDict.read,write:N.fieldTransformTypeKebabDict.write}})],W.prototype,"fieldTransformType",void 0),e([t({type:[U],json:{write:!0}})],W.prototype,"colorUniqueValueInfos",void 0),e([t({type:a,json:{write:!0}})],W.prototype,"legendOptions",void 0),W=G=e([o("esri.renderers.PointCloudUniqueValueRenderer")],W);const D=W;export{D as a,F as b,N as c,q as d};
//# sourceMappingURL=p-f25dc33e.js.map