import{a9 as t,T as s,iU as i,mw as e}from"./p-aad64c9f.js";import{p as n,r}from"./p-875cbb57.js";import{t as o}from"./p-4e60756f.js";import"./p-2af77f97.js";import"./p-da522976.js";import"./p-aff89b86.js";import"./p-d492d39b.js";import"./p-21ce5524.js";class h{constructor(t,s,i){this.uid=t,this.geometry=s,this.attributes=i,this.visible=!0,this.objectId=null,this.centroid=null}}class a{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}}function l(t,s,i,e){if(s?.size&&null!=i&&t)for(const n in t){if(!s.has(n))continue;const r=t[n];"string"==typeof r&&r.length>i&&(e(n),t[n]="")}}function u(t,s){return s}function c(t,s,i,e){switch(i){case 0:return d(t,s+e,0);case 1:return"lowerLeft"===t.originPosition?d(t,s+e,1):m(t,s+e,1)}}function p(t,s,i,e){return 2===i?d(t,s,2):c(t,s,i,e)}function f(t,s,i,e){return 2===i?d(t,s,3):c(t,s,i,e)}function y(t,s,i,e){return 3===i?d(t,s,3):p(t,s,i,e)}function d({translate:t,scale:s},i,e){return t[e]+i*s[e]}function m({translate:t,scale:s},i,e){return t[e]-i*s[e]}class b{constructor(t){this._options=t,this.geometryTypes=["point","multipoint","polyline","polygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=u,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{},this._missingAttributes=[]}get missingAttributes(){return this._missingAttributes}createFeatureResult(){return new a}finishFeatureResult(s){if(this._options.applyTransform&&(s.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!s.hasZ)return;const i=t(s.geometryType,this._options.sourceSpatialReference,s.spatialReference);if(null!=i)for(const t of s.features)i(t.geometry)}createSpatialReference(){return new s}addField(t,s){t.fields.push(i.fromJSON(s));const e=t.fields.map((t=>t.name));this._attributesConstructor=function(){for(const t of e)this[t]=null}}addFeature(t,s){const i=this._options.maxStringAttributeLength,e=this._options.maxStringAttributeFields;l(s.attributes,e,i,(i=>{const e=s.attributes[t.objectIdFieldName];null!=e&&this._missingAttributes.push({objectId:e,attribute:i})})),t.features.push(s)}addQueryGeometry(t,s){const{queryGeometry:i,queryGeometryType:e}=s,o=n(i.clone(),i,!1,!1,this._transform),h=r(o,e,!1,!1);let a=null;switch(e){case"esriGeometryPoint":a="point";break;case"esriGeometryPolygon":a="polygon";break;case"esriGeometryPolyline":a="polyline";break;case"esriGeometryMultipoint":a="multipoint"}h.type=a,t.queryGeometryType=e,t.queryGeometry=h}prepareFeatures(t){switch(this._transform=t.transform??null,this._options.applyTransform&&t.transform&&(this._applyTransform=this._deriveApplyTransform(t)),this._vertexDimension=2,t.hasZ&&this._vertexDimension++,t.hasM&&this._vertexDimension++,t.geometryType){case"point":this.addCoordinate=(t,s,i)=>this.addCoordinatePoint(t,s,i),this.createGeometry=t=>this.createPointGeometry(t);break;case"polygon":this.addCoordinate=(t,s,i)=>this._addCoordinatePolygon(t,s,i),this.createGeometry=t=>this._createPolygonGeometry(t);break;case"polyline":this.addCoordinate=(t,s,i)=>this._addCoordinatePolyline(t,s,i),this.createGeometry=t=>this._createPolylineGeometry(t);break;case"multipoint":this.addCoordinate=(t,s,i)=>this._addCoordinateMultipoint(t,s,i),this.createGeometry=t=>this._createMultipointGeometry(t);break}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,new h(e(),null,new this._attributesConstructor)}allocateCoordinates(){const t=this._lengths.reduce(((t,s)=>t+s),0);this._coordinateBuffer=new Float64Array(t*this._vertexDimension),this._coordinateBufferPtr=0}addLength(t,s){0===this._lengths.length&&(this._toAddInCurrentPath=s),this._lengths.push(s)}createPointGeometry(t){const s={type:"point",x:0,y:0,spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM};return s.hasZ&&(s.z=0),s.hasM&&(s.m=0),s}addCoordinatePoint(t,s,i){const e=this._transform?this._applyTransform(this._transform,s,i,0):s;if(null!=e)switch(i){case 0:t.x=e;break;case 1:t.y=e;break;case 2:t.hasZ?t.z=e:t.m=e;break;case 3:t.m=e}}_transformPathLikeValue(t,s){let i=0;return s<=1&&(i=this._previousCoordinate[s],this._previousCoordinate[s]+=t),this._transform?this._applyTransform(this._transform,t,s,i):t}_addCoordinatePolyline(t,s,i){this._dehydratedAddPointsCoordinate(t.paths,s,i)}_addCoordinatePolygon(t,s,i){this._dehydratedAddPointsCoordinate(t.rings,s,i)}_addCoordinateMultipoint(t,s,i){0===i&&t.points.push([]);const e=this._transformPathLikeValue(s,i);t.points[t.points.length-1].push(e)}_createPolygonGeometry(t){return{type:"polygon",rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createPolylineGeometry(t){return{type:"polyline",paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createMultipointGeometry(t){return{type:"multipoint",points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_dehydratedAddPointsCoordinate(t,s,i){0===i&&0==this._toAddInCurrentPath--&&(t.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);const e=this._transformPathLikeValue(s,i),n=t[t.length-1],r=this._coordinateBuffer;if(r){if(0===i){const t=this._coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT;n.push(new Float64Array(r.buffer,t,this._vertexDimension))}r[this._coordinateBufferPtr++]=e}}_deriveApplyTransform(t){const{hasZ:s,hasM:i}=t;return s&&i?y:s?p:i?f:c}}class w{_parseFeatureQuery(t){const s=new b(t.options),i=o(t.buffer,s),e={...i,spatialReference:i.spatialReference?.toJSON(),fields:i.fields?i.fields.map((t=>t.toJSON())):void 0,missingAttributes:s.missingAttributes};return Promise.resolve(e)}}function g(){return new w}export default g;
//# sourceMappingURL=p-16d618e1.js.map