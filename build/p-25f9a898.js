import{b as t}from"./p-682c165c.js";import{n as s,s as i}from"./p-439fba24.js";import{d2 as h,dO as e,dP as n,fM as r,dr as o,du as l,fN as a,c7 as u,c6 as c,c5 as f,d3 as d,c9 as p,x as _,d8 as g,de as m,ch as b,ci as v,da as w,cn as E,ao as A,dV as S,c4 as R,cg as B,cm as T,fO as C,fp as x,c8 as F,fP as O,ck as M,fQ as y,fR as D,fS as P,N as G,cl as I}from"./p-aad64c9f.js";import{t as U,B as k,a as N,Q as X}from"./p-790e1969.js";import{o as L}from"./p-dddb66c6.js";import{E as j}from"./p-2ea4a2b9.js";import{E as V}from"./p-1c4b55c0.js";import{a as H,f as W,t as $}from"./p-08681176.js";import{r as z}from"./p-de84037a.js";import{o as q}from"./p-44881b12.js";import{t as Q}from"./p-7ce0ff48.js";const K=t=>{let s="";s+=t[0].toUpperCase();for(let i=1;i<t.length;i++){const h=t[i];h===h.toUpperCase()?(s+="_",s+=h):s+=h.toUpperCase()}return s},Y=t=>{const i={};for(const s in t){i[K(s)]=t[s]}return s(i)},Z=(s,i,h,e)=>{const n=s+s.slice(Math.max(0,s.lastIndexOf("/"))),r=i+i.slice(Math.max(0,i.lastIndexOf("/"))),o=Y(e);return{attributes:h,shaders:{vertexShader:o+t(`${n}.vert`),fragmentShader:o+t(`${r}.frag`)}}};class J{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:h.ONE,dstRGB:h.ZERO,srcAlpha:h.ONE,dstAlpha:h.ZERO},this.blendEquation={mode:e.ADD,modeAlpha:e.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=n.BACK,this.frontFace=r.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=o.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:n.FRONT_AND_BACK,func:o.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:n.FRONT_AND_BACK,fail:l.KEEP,zFail:l.KEEP,zPass:l.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.transformFeedbackBuffer=null,this.uniformBufferBindingPoints=new Array,this.transformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.drawBuffers={defaultFramebuffer:[a.BACK],fbos:new WeakMap},this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}}class tt{constructor(){for(this._current=new Array,this._allocations=null;this._current.length<u.COUNT;)this._current.push(0)}increment(t,s,i=1){this._current[t]+=i,this._allocations?.add(s)}decrement(t,s,i=1){this._current[t]-=i,this._allocations?.remove(s)}get current(){return this._current}get total(){return this.current.reduce(((t,s,i)=>t+(i<u.UNCOUNTED?s:0)),0)}get resourceInformation(){let t="";if(this.total>0){t+="Live objects:\n";for(let s=0;s<u.COUNT;++s){const i=this._current[s];i>0&&(t+=`${u[s]}: ${i}\n`)}}return t+=this._allocations?.resetLog(),t}}class st{constructor(t,s,i){const h=s.textureFilterAnisotropic,e=i.maxAnisotropy??1/0;this.versionString=t.getParameter(t.VERSION),this.maxVertexTextureImageUnits=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxVertexAttributes=t.getParameter(t.MAX_VERTEX_ATTRIBS),this.maxMaxAnisotropy=h?Math.min(t.getParameter(h.MAX_TEXTURE_MAX_ANISOTROPY),e):1,this.maxTextureImageUnits=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this.maxRenderbufferSize=t.getParameter(t.MAX_RENDERBUFFER_SIZE),this.maxViewportDims=t.getParameter(t.MAX_VIEWPORT_DIMS),this.maxUniformBufferBindings=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS),this.maxVertexUniformBlocks=t.getParameter(t.MAX_VERTEX_UNIFORM_BLOCKS),this.maxFragmentUniformBlocks=t.getParameter(t.MAX_FRAGMENT_UNIFORM_BLOCKS),this.maxUniformBlockSize=t.getParameter(t.MAX_UNIFORM_BLOCK_SIZE),this.uniformBufferOffsetAlignment=t.getParameter(t.UNIFORM_BUFFER_OFFSET_ALIGNMENT),this.maxArrayTextureLayers=t.getParameter(t.MAX_ARRAY_TEXTURE_LAYERS),this.maxSamples=t.getParameter(t.MAX_SAMPLES),this.maxDrawBuffers=t.getParameter(t.MAX_DRAW_BUFFERS)}}class it{constructor(t){this._rctx=t,this._indexBuffer=this._createIndexbuffer(),this._program=this._createHelperProgram()}static getShaderSources(){return{vertex:"#version 300 es\n    precision highp float;\n\n    void main(void) {\n      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);\n    }",fragment:"#version 300 es\n    precision highp float;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }"}}_createHelperProgram(){const t=it.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}_createIndexbuffer(){return j.createIndex(this._rctx,c.STATIC_DRAW,new Uint32Array([0]))}run(){this._program.compiled&&this._indexBuffer&&(this._rctx.bindVAO(null),this._rctx.useProgram(this._program),this._rctx.bindBuffer(this._indexBuffer,f.ELEMENT_ARRAY_BUFFER),this._rctx.drawElements(d.POINTS,1,p.UNSIGNED_INT,0))}dispose(){this._program.dispose(),this._indexBuffer.dispose()}get test(){}}class ht extends H{constructor(t){super(),this._rctx=t,this._helperProgram=null,_("mac")&&_("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){super.dispose(),this._helperProgram?.dispose(),this._helperProgram=null}_test(t){const s=this._rctx,i=s.getBoundFramebufferObject(),{x:h,y:e,width:n,height:r}=s.getViewport();s.resetState();const o=new w(1);o.wrapMode=g.CLAMP_TO_EDGE,o.samplingMode=m.NEAREST;const l=new V(s,o),a=j.createIndex(this._rctx,c.STATIC_DRAW,new Uint8Array([0]));s.bindFramebuffer(l),s.setViewport(0,0,1,1),s.useProgram(this._helperProgram),s.bindBuffer(a,f.ELEMENT_ARRAY_BUFFER),s.drawElements(d.POINTS,1,p.UNSIGNED_BYTE,0),s.useProgram(t),s.bindVAO(null),s.drawArrays(d.TRIANGLES,0,258);const u=new Uint8Array(4);return l.readPixels(0,0,1,1,b.RGBA,v.UNSIGNED_BYTE,u),s.setViewport(h,e,n,r),s.bindFramebuffer(i),l.dispose(),a.dispose(),255===u[0]}_prepareProgram(){const t=85,s=`#version 300 es\n    precision highp float;\n\n    out float triangleId;\n\n    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));\n\n    void main(void) {\n      triangleId = floor(float(gl_VertexID)/3.0);\n\n      vec3 position = triangleVertices[gl_VertexID % 3];\n      float offset = triangleId / ${L.float(t)};\n      position.z = 0.5 - offset;\n\n      gl_Position = vec4(position, 1.0);\n    }\n    `,i=`#version 300 es\n    precision highp float;\n\n    in float triangleId;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = triangleId == ${L.float(t)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);\n    }\n    `;return this._rctx.programCache.acquire(s,i,new Map([]))}_prepareHelperProgram(){const t=it.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}}class et extends H{constructor(t){super(),this._rctx=t,this._program=nt(this._rctx,!1),this._obfuscated=nt(this._rctx,!0)}dispose(){super.dispose(),this._obfuscated=E(this._obfuscated)}_test(t){if(_("force-double-precision-obfuscation"))return!0;if(null==this._obfuscated)return!1;const s=this._rctx,i=s.getBoundFramebufferObject(),{x:h,y:e,width:n,height:r}=s.getViewport(),o=this._runProgram(t),l=this._runProgram(this._obfuscated);return s.setViewport(h,e,n,r),s.bindFramebuffer(i),0!==o&&(0===l||o/l>5)}_runProgram(t){const s=this._rctx;s.resetState();const i=new w(1);i.wrapMode=g.CLAMP_TO_EDGE,i.samplingMode=m.NEAREST;const h=new V(s,i),e=j.createVertex(s,c.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),n=new q(s,new Map([["position",0]]),new Map([["geometry",[new Q("position",2,p.UNSIGNED_SHORT,0,4)]]]),new Map([["geometry",e]])),r=A(5633261.287538229,2626832.878767164,1434988.0495278358),o=A(5633271.46742708,2626873.6381334523,1434963.231608387),l=new Float32Array(6);U(r,l,3);const a=new Float32Array(6);U(o,a,3),s.useProgram(t),t.setUniform3f("u_highA",l[0],l[2],l[4]),t.setUniform3f("u_lowA",l[1],l[3],l[5]),t.setUniform3f("u_highB",a[0],a[2],a[4]),t.setUniform3f("u_lowB",a[1],a[3],a[5]),s.bindFramebuffer(h),s.setViewport(0,0,1,1),s.bindVAO(n),s.drawArrays(d.TRIANGLE_STRIP,0,4);const u=new Uint8Array(4);h.readPixels(0,0,1,1,b.RGBA,v.UNSIGNED_BYTE,u),n.dispose(),h.dispose();const f=(r[2]-o[2])/25,_=z(u);return Math.abs(f-_)}}function nt(t,s){const i=`\n\n  precision highp float;\n\n  attribute vec2 position;\n\n  uniform vec3 u_highA;\n  uniform vec3 u_lowA;\n  uniform vec3 u_highB;\n  uniform vec3 u_lowB;\n\n  varying vec4 v_color;\n\n  ${s?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}\n\n  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION\n\n  vec3 dpPlusFrc(vec3 a, vec3 b) {\n    return mix(a, a + b, vec3(notEqual(b, vec3(0))));\n  }\n\n  vec3 dpMinusFrc(vec3 a, vec3 b) {\n    return mix(vec3(0), a - b, vec3(notEqual(a, b)));\n  }\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = dpPlusFrc(hiA, hiB);\n    vec3 e = dpMinusFrc(t1, hiA);\n    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\n    return t1 + t2;\n  }\n\n  #else\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = hiA + hiB;\n    vec3 e = t1 - hiA;\n    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\n    return t1 + t2;\n  }\n\n  #endif\n\n  const float MAX_RGBA_FLOAT =\n    255.0 / 256.0 +\n    255.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 / 256.0;\n\n  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\n\n  vec4 float2rgba(const float value) {\n    // Make sure value is in the domain we can represent\n    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\n\n    // Decompose value in 32bit fixed point parts represented as\n    // uint8 rgba components. Decomposition uses the fractional part after multiplying\n    // by a power of 256 (this removes the bits that are represented in the previous\n    // component) and then converts the fractional part to 8bits.\n    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\n\n    // Convert uint8 values (from 0 to 255) to floating point representation for\n    // the shader\n    const float toU8AsFloat = 1.0 / 255.0;\n\n    return fixedPointU8 * toU8AsFloat;\n  }\n\n  void main() {\n    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);\n\n    v_color = float2rgba(val.z / 25.0);\n\n    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);\n  }\n  `,h="\n  precision highp float;\n\n  varying vec4 v_color;\n\n  void main() {\n    gl_FragColor = v_color;\n  }\n  ";return t.programCache.acquire(i,h,new Map([["position",0]]))}class rt extends H{constructor(t){if(super(),this._rctx=t,!t.gl)return;if(!(t.capabilities.colorBufferFloat?.textureFloat&&t.capabilities.colorBufferFloat?.floatBlend))return;const s="\n    precision highp float;\n    attribute vec2 a_pos;\n\n    void main() {\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ",i="\n     precision highp float;\n\n     void main() {\n      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);\n     }\n    ";this._program=t.programCache.acquire(s,i,new Map([["a_pos",0]]))}_test(t){const s=this._rctx,i=new w(1);i.wrapMode=g.CLAMP_TO_EDGE,i.dataType=v.FLOAT,i.internalFormat=S.RGBA32F,i.samplingMode=m.NEAREST;const h=new V(s,i),e=j.createVertex(s,c.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),n=new q(s,new Map([["a_pos",0]]),new Map([["geometry",[new Q("a_pos",2,p.UNSIGNED_SHORT,0,4)]]]),new Map([["geometry",e]]));s.gl.getError(),s.useProgram(t);const r=s.getBoundFramebufferObject(),{x:o,y:l,width:a,height:u}=s.getViewport();s.bindFramebuffer(h),s.setViewport(0,0,1,1),s.bindVAO(n),s.drawArrays(d.TRIANGLE_STRIP,0,4);const f=k({blending:N});s.setPipelineState(f),s.drawArrays(d.TRIANGLE_STRIP,0,4);const _=s.gl.getError();return s.setViewport(o,l,a,u),s.bindFramebuffer(r),n.dispose(),h.dispose(),_!==s.gl.INVALID_OPERATION||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}}class ot{constructor(t){this.rctx=t,this.floatBufferBlend=new rt(t),this.svgPremultipliesAlpha=new W(t),this.doublePrecisionRequiresObfuscation=new et(t),this.drawArraysRequiresIndicesTypeReset=new ht(t)}dispose(){this.doublePrecisionRequiresObfuscation.dispose(),this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}}function lt(t,s){if(s.compressedTextureETC)return null;const i=t.getExtension("WEBGL_compressed_texture_etc");return i?{COMPRESSED_R11_EAC:i.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:i.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:i.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:i.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:i.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:i.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:i.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:i.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}function at(t,s){if(s.compressedTextureS3TC)return null;const i=t.getExtension("WEBGL_compressed_texture_s3tc");return i?{COMPRESSED_RGB_S3TC_DXT1:i.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:i.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:i.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:i.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}function ut(t,s){if(s.textureFilterAnisotropic)return null;const i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return i?{MAX_TEXTURE_MAX_ANISOTROPY:i.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:i.TEXTURE_MAX_ANISOTROPY_EXT}:null}function ct(t,s){const i=!s.colorBufferHalfFloat&&t.getExtension("EXT_color_buffer_half_float")||!s.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),h=!s.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),e=!s.floatBlend&&!s.colorBufferFloat&&t.getExtension("EXT_float_blend");return i||h||e?{textureFloat:!!h,textureHalfFloat:!!i,floatBlend:!!e,R16F:t.R16F,RG16F:t.RG16F,RGBA16F:t.RGBA16F,R32F:t.R32F,RG32F:t.RG32F,RGBA32F:t.RGBA32F,R11F_G11F_B10F:t.R11F_G11F_B10F,RGB16F:t.RGB16F}:null}function ft(t,s,i,h,e){if(h)return!0;if(s[i])return!1;for(const s of e)if(t.getExtension(s))return!0;return!1}function dt(t,s){if(s.textureNorm16)return null;const i=t.getExtension("EXT_texture_norm16");return i?{R16:i.R16_EXT,RG16:i.RG16_EXT,RGB16:i.RGB16_EXT,RGBA16:i.RGBA16_EXT,R16_SNORM:i.R16_SNORM_EXT,RG16_SNORM:i.RG16_SNORM_EXT,RGB16_SNORM:i.RGB16_SNORM_EXT,RGBA16_SNORM:i.RGBA16_SNORM_EXT}:null}function pt(t,s){const i=s.loseContext&&t.getExtension("WEBGL_lose_context");return i?{loseRenderingContext:()=>i.loseContext()}:null}class _t{constructor(t,s){this._gl=t,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._colorBufferFloat=null,this._loseContext=null,this._textureNorm16=null,this._textureFloatLinear=null,this._disabledExtensions=s.disabledExtensions||{},this._debugWebGLExtensions=s.debugWebGLExtensions||{}}get compressedTextureETC(){return this._compressedTextureETC??=lt(this._gl,this._disabledExtensions),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC??=at(this._gl,this._disabledExtensions),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic??=ut(this._gl,this._disabledExtensions),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery??=$(this._gl,this._disabledExtensions),this._disjointTimerQuery}get colorBufferFloat(){return this._colorBufferFloat??=ct(this._gl,this._disabledExtensions),this._colorBufferFloat}get loseContext(){return this._loseContext??=pt(this._gl,this._debugWebGLExtensions),this._loseContext}get textureNorm16(){return this._textureNorm16??=dt(this._gl,this._disabledExtensions),this._textureNorm16}get textureFloatLinear(){return this._textureFloatLinear??=ft(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"]),this._textureFloatLinear}enable(t){return this[t]}}let gt=class{constructor(t,s){this.gl=t,this.instanceCounter=new tt,this.programCache=new i(this),this._transformFeedbackRequestInfo=null,this._state=new J,this._numOfDrawCalls=0,this._numOfTriangles=0,this._loadExtensions(),this.configure(s)}configure(t){this._capabilities=new _t(this.gl,t),this._parameters=new st(this.gl,this._capabilities,t),R.TEXTURE_UNIT_FOR_UPDATES=this._parameters.maxTextureImageUnits-1;const s=this.gl.getParameter(this.gl.VIEWPORT);this._state=new J,this._state.viewport={x:s[0],y:s[1],width:s[2],height:s[3]},this._stateTracker=new X({setBlending:t=>{if(t){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(t.opRgb,t.opAlpha),this.setBlendFunctionSeparate(t.srcRgb,t.dstRgb,t.srcAlpha,t.dstAlpha);const s=t.color;this.setBlendColor(s.r,s.g,s.b,s.a)}else this.setBlendingEnabled(!1)},setCulling:t=>{t?(this.setFaceCullingEnabled(!0),this.setCullFace(t.face),this.setFrontFace(t.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:t=>{t?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(t.factor,t.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:t=>{t?(this.setDepthTestEnabled(!0),this.setDepthFunction(t.func)):this.setDepthTestEnabled(!1)},setStencilTest:t=>{if(t){this.setStencilTestEnabled(!0);const s=t.function;this.setStencilFunction(s.func,s.ref,s.mask);const i=t.operation;this.setStencilOp(i.fail,i.zFail,i.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:t=>{t?(this.setDepthWriteEnabled(!0),this.setDepthRange(t.zNear,t.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:t=>{t?this.setColorMask(t.r,t.g,t.b,t.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:t=>{t?this.setStencilWriteMask(t.mask):this.setStencilWriteMask(0)},setDrawBuffers:t=>{if(t)this.setDrawBuffers(t.buffers);else{const{drawFramebuffer:t}=this._state;null===t?this.setDrawBuffers([a.BACK]):0===t.colorAttachments.length?this.setDrawBuffers([a.NONE]):this.setDrawBuffers([B.COLOR_ATTACHMENT0])}}}),this.enforceState(),E(this._driverTest),this._driverTest=new ot(this)}dispose(){E(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(f.ARRAY_BUFFER),this.unbindBuffer(f.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(f.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(f.PIXEL_PACK_BUFFER),this.unbindBuffer(f.PIXEL_UNPACK_BUFFER),this.unbindBuffer(f.COPY_READ_BUFFER),this.unbindBuffer(f.COPY_WRITE_BUFFER),this._state.textureUnitMap.length=0,T()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(t){this._stateTracker.setPipeline(t)}setBlendingEnabled(t){this._state.blend!==t&&(!0===t?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=t,this._stateTracker.invalidateBlending())}externalProgramUpdate(){this._state.program?.stop(),this._state.program=null}externalTextureUnitUpdate(t,s){for(let s=0;s<t.length;++s)this._state.textureUnitMap[t[s]]=null;s>=0&&(this._state.activeTexture=s)}externalVertexArrayObjectUpdate(){this.gl.bindVertexArray(null),this._state.vertexArrayObject=null,this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(t,s,i,h){t===this._state.blendColor.r&&s===this._state.blendColor.g&&i===this._state.blendColor.b&&h===this._state.blendColor.a||(this.gl.blendColor(t,s,i,h),this._state.blendColor.r=t,this._state.blendColor.g=s,this._state.blendColor.b=i,this._state.blendColor.a=h,this._stateTracker.invalidateBlending())}setBlendFunction(t,s){t===this._state.blendFunction.srcRGB&&s===this._state.blendFunction.dstRGB||(this.gl.blendFunc(t,s),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=t,this._state.blendFunction.dstRGB=s,this._state.blendFunction.dstAlpha=s,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(t,s,i,h){this._state.blendFunction.srcRGB===t&&this._state.blendFunction.srcAlpha===i&&this._state.blendFunction.dstRGB===s&&this._state.blendFunction.dstAlpha===h||(this.gl.blendFuncSeparate(t,s,i,h),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=i,this._state.blendFunction.dstRGB=s,this._state.blendFunction.dstAlpha=h,this._stateTracker.invalidateBlending())}setBlendEquation(t){this._state.blendEquation.mode!==t&&(this.gl.blendEquation(t),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(t,s){this._state.blendEquation.mode===t&&this._state.blendEquation.modeAlpha===s||(this.gl.blendEquationSeparate(t,s),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=s,this._stateTracker.invalidateBlending())}setColorMask(t,s,i,h){this._state.colorMask.r===t&&this._state.colorMask.g===s&&this._state.colorMask.b===i&&this._state.colorMask.a===h||(this.gl.colorMask(t,s,i,h),this._state.colorMask.r=t,this._state.colorMask.g=s,this._state.colorMask.b=i,this._state.colorMask.a=h,this._stateTracker.invalidateColorWrite())}setClearColor(t,s,i,h){this._state.clearColor.r===t&&this._state.clearColor.g===s&&this._state.clearColor.b===i&&this._state.clearColor.a===h||(this.gl.clearColor(t,s,i,h),this._state.clearColor.r=t,this._state.clearColor.g=s,this._state.clearColor.b=i,this._state.clearColor.a=h)}setFaceCullingEnabled(t){this._state.faceCulling!==t&&(!0===t?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=t,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(t){this._state.polygonOffsetFill!==t&&(!0===t?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=t,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(t,s){this._state.polygonOffset[0]===t&&this._state.polygonOffset[1]===s||(this._state.polygonOffset[0]=t,this._state.polygonOffset[1]=s,this.gl.polygonOffset(t,s),this._stateTracker.invalidatePolygonOffset())}setCullFace(t){this._state.cullFace!==t&&(this.gl.cullFace(t),this._state.cullFace=t,this._stateTracker.invalidateCulling())}setFrontFace(t){this._state.frontFace!==t&&(this.gl.frontFace(t),this._state.frontFace=t,this._stateTracker.invalidateCulling())}setScissorTestEnabled(t){this._state.scissorTest!==t&&(!0===t?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=t)}setScissorRect(t,s,i,h){this._state.scissorRect.x===t&&this._state.scissorRect.y===s&&this._state.scissorRect.width===i&&this._state.scissorRect.height===h||(this.gl.scissor(t,s,i,h),this._state.scissorRect.x=t,this._state.scissorRect.y=s,this._state.scissorRect.width=i,this._state.scissorRect.height=h)}setDepthTestEnabled(t){this._state.depthTest!==t&&(!0===t?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=t,this._stateTracker.invalidateDepthTest())}setClearDepth(t){this._state.clearDepth!==t&&(this.gl.clearDepth(t),this._state.clearDepth=t)}setDepthFunction(t){this._state.depthFunction!==t&&(this.gl.depthFunc(t),this._state.depthFunction=t,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(t){this._state.depthWrite!==t&&(this.gl.depthMask(t),this._state.depthWrite=t,this._stateTracker.invalidateDepthWrite())}setDepthRange(t,s){this._state.depthRange.zNear===t&&this._state.depthRange.zFar===s||(this.gl.depthRange(t,s),this._state.depthRange.zNear=t,this._state.depthRange.zFar=s,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(t){this._state.stencilTest!==t&&(!0===t?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=t,this._stateTracker.invalidateStencilTest())}setClearStencil(t){t!==this._state.clearStencil&&(this.gl.clearStencil(t),this._state.clearStencil=t)}setStencilFunction(t,s,i){this._state.stencilFunction.func===t&&this._state.stencilFunction.ref===s&&this._state.stencilFunction.mask===i||(this.gl.stencilFunc(t,s,i),this._state.stencilFunction.face=n.FRONT_AND_BACK,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=i,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(t,s,i,h){this._state.stencilFunction.face===t&&this._state.stencilFunction.func===s&&this._state.stencilFunction.ref===i&&this._state.stencilFunction.mask===h||(this.gl.stencilFuncSeparate(t,s,i,h),this._state.stencilFunction.face=t,this._state.stencilFunction.func=s,this._state.stencilFunction.ref=i,this._state.stencilFunction.mask=h,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(t){this._state.stencilWriteMask!==t&&(this.gl.stencilMask(t),this._state.stencilWriteMask=t,this._stateTracker.invalidateStencilWrite())}setStencilOp(t,s,i){this._state.stencilOperation.face===n.FRONT_AND_BACK&&this._state.stencilOperation.fail===t&&this._state.stencilOperation.zFail===s&&this._state.stencilOperation.zPass===i||(this.gl.stencilOp(t,s,i),this._state.stencilOperation.face=n.FRONT_AND_BACK,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=i,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(t,s,i,h){this._state.stencilOperation.face===t&&this._state.stencilOperation.fail===s&&this._state.stencilOperation.zFail===i&&this._state.stencilOperation.zPass===h||(this.gl.stencilOpSeparate(t,s,i,h),this._state.stencilOperation.face=t,this._state.stencilOperation.fail=s,this._state.stencilOperation.zFail=i,this._state.stencilOperation.zPass=h,this._stateTracker.invalidateStencilTest())}setActiveTexture(t,s=!1){const i=this._state.activeTexture;return t>=0&&(s||t!==this._state.activeTexture)&&(this.gl.activeTexture(C+t),this._state.activeTexture=t),i}setDrawBuffers(t){const{drawFramebuffer:s}=this._state,i=null===s,h=i?this._state.drawBuffers.defaultFramebuffer:this._state.drawBuffers.fbos.get(s);if(h?.length!==t.length||!h.every(((s,i)=>s===t[i])))if(t.length>this.parameters.maxDrawBuffers)console.error("Setting more active draw buffers than GL.MAX_DRAW_BUFFERS allows.");else{if(i){if(t.length>1)return void console.error("The default framebuffer can only have one active draw buffer.");if(t[0]!==a.BACK&&t[0]!==a.NONE)return void console.error("The default framebuffer can only use the constants GL.BACK or GL.NONE as draw buffers.")}i||!t.includes(a.BACK)?(this.gl.drawBuffers(t),i?this._state.drawBuffers.defaultFramebuffer=t:this._state.drawBuffers.fbos.set(s,t),this._stateTracker.invalidateDrawBuffers()):console.error("A framebuffer object can only use the constants GL.COLOR_ATTACHMENTi or GL.NONE as draw buffers.")}}clear(t,s=255){if(t){if(t&x.COLOR){const t=this._state.drawFramebuffer?.colorAttachments;t&&this.setDrawBuffers(t),this.setColorMask(!0,!0,!0,!0)}t&x.DEPTH&&this.setDepthWriteEnabled(!0),t&x.STENCIL&&this.setStencilWriteMask(s),this.gl.clear(t)}}clearFramebuffer(t,s=!1,i=!1){let h=0;if(t){const s=1e-13,i=Math.max(s,t[3]);this.setClearColor(t[0],t[1],t[2],i),h|=x.COLOR}s&&(h|=x.DEPTH),!1===i?i=0:(!0===i&&(i=255),h|=x.STENCIL),h&&this.clear(h,i)}drawArrays(t,s,i){if(this._transformFeedbackRequestInfo){if(t!==this._transformFeedbackRequestInfo.primitiveType)throw new Error("DrawArrays called during transform feedback, but primitiveType does not match that of the current transform feedback request");if(null==this._state.program?.hasTransformFeedbackVaryings)throw new Error("DrawArrays called during transform feedback, but the shader program was not linked with a transform feedback varying")}if(T()){this._numOfDrawCalls++,this._numOfTriangles+=bt(t,i);const s=this._state.textureUnitMap;for(let t=0;t<s.length;t++){const i=s[t];if(null!=i&&i===this._state.drawFramebuffer?.colorTexture)throw new Error(`Detected readWrite. Texture already bound at index ${t}`)}}this.gl.drawArrays(t,s,i),F(this.gl)}drawArraysInstanced(t,s,i,h){this.gl.drawArraysInstanced(t,s,i,h),F(this.gl)}drawElements(t,s,i,h){if(this._transformFeedbackRequestInfo)throw new Error("Cannot called drawElements during a transform feedback request");if(T()&&(this._numOfDrawCalls++,this._numOfTriangles+=bt(t,s)),this.gl.drawElements(t,s,i,h),T()){const e=O(this);if(e){const n=this.getBoundVAO(),r=n?.indexBuffer,o=n?.vertexBuffers,l={indexBuffer:r,vertexBuffers:o},a={mode:t,count:s,type:i,offset:h},u=r?.size??0,c=h+s,f=u<c?`. Buffer is too small. Attempted to draw index ${c} of ${u}`:"";console.error(`drawElements: ${e}${f}`,{args:a,vao:l})}}}drawElementsInstanced(t,s,i,h,e){this.gl.drawElementsInstanced(t,s,i,h,e),F(this.gl)}logInfo(){T()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){T()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(t,s,i,h){i=Math.max(Math.round(i),1),h=Math.max(Math.round(h),1);const e=this._state.viewport;e.x===t&&e.y===s&&e.width===i&&e.height===h||(e.x=t,e.y=s,e.width=i,e.height=h,this.gl.viewport(t,s,i,h))}setViewport4fv(t){this.setViewport(t[0],t[1],t[2],t[3])}restoreViewport({x:t,y:s,width:i,height:h}){this.setViewport(t,s,i,h)}getViewport(){const t=this._state.viewport;return{x:t.x,y:t.y,width:t.width,height:t.height}}useProgram(t){this._state.program!==t&&(this._state.program?.stop(),this._state.program=t,this.gl.useProgram(t?.glName??null))}bindTexture(t,s,i=!1){(s>=this.parameters.maxTextureImageUnits||s<0)&&console.error("Input texture unit is out of range of available units!");const h=this._state.textureUnitMap[s];return null==t?.glName?(null!=h&&(this.setActiveTexture(s,i),this.gl.bindTexture(h.descriptor.target,null)),this._state.textureUnitMap[s]=null,h):i||h!==t?(this.setActiveTexture(s,i),this.gl.bindTexture(t.descriptor.target,t.glName),t.applyChanges(),this._state.textureUnitMap[s]=t,h):(t.isDirty&&(this.setActiveTexture(s,i),t.applyChanges()),h)}unbindTexture(t){if(null!=t)for(let s=0;s<this.parameters.maxTextureImageUnits;s++)this._state.textureUnitMap[s]===t&&(this.bindTexture(null,s),this._state.textureUnitMap[s]=null)}bindFramebuffer(t,s=!1){if(s||this._state.readFramebuffer!==t||this._state.drawFramebuffer!==t){if(this._stateTracker.invalidateDrawBuffers(),null==t)return this.gl.bindFramebuffer(M.FRAMEBUFFER,null),void(this._state.readFramebuffer=this._state.drawFramebuffer=null);t.initializeAndBind(M.FRAMEBUFFER),this._state.readFramebuffer=t,this._state.drawFramebuffer=t}}bindFramebufferSeparate(t,s,i=!1){const h=s===M.READ_FRAMEBUFFER,e=h?this._state.readFramebuffer:this._state.drawFramebuffer;(i||e!==t)&&(null==t?this.gl.bindFramebuffer(s,null):t.initializeAndBind(s),h?this._state.readFramebuffer=t??null:(this._stateTracker.invalidateDrawBuffers(),this._state.drawFramebuffer=t??null))}blitFramebuffer(t,s,i=0,h=0,e=t.width,n=t.height,r=0,o=0,l=s.width,a=s.height,u=x.COLOR,c=m.NEAREST){this.bindFramebufferSeparate(t,M.READ_FRAMEBUFFER),this.bindFramebufferSeparate(s,M.DRAW_FRAMEBUFFER),this.gl.blitFramebuffer(i,h,e,n,r,o,l,a,u,c)}bindBuffer(t,s){if(t)switch(s??=t.bufferType,s){case f.ARRAY_BUFFER:this._state.vertexBuffer=mt(this.gl,t,s,this._state.vertexBuffer);break;case f.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=mt(this.gl,t,s,this._state.indexBuffer);break;case f.UNIFORM_BUFFER:this._state.uniformBuffer=mt(this.gl,t,s,this._state.uniformBuffer);break;case f.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=mt(this.gl,t,s,this._state.pixelPackBuffer);break;case f.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=mt(this.gl,t,s,this._state.pixelUnpackBuffer);break;case f.COPY_READ_BUFFER:this._state.copyReadBuffer=mt(this.gl,t,s,this._state.copyReadBuffer);break;case f.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=mt(this.gl,t,s,this._state.copyWriteBuffer);break;case f.TRANSFORM_FEEDBACK_BUFFER:this._state.transformFeedbackBuffer=mt(this.gl,t,s,this._state.transformFeedbackBuffer)}}bindRenderbuffer(t){const s=this.gl;t||(s.bindRenderbuffer(s.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==t&&(s.bindRenderbuffer(s.RENDERBUFFER,t.glName),this._state.renderbuffer=t)}_getBufferBinding(t,s){if(s>=this.parameters.maxUniformBufferBindings||s<0)return console.error("Uniform buffer binding point is out of range!"),null;const i=t===f.UNIFORM_BUFFER?this._state.uniformBufferBindingPoints:this._state.transformBufferBindingPoints;let h=i[s];return null==h&&(h={buffer:null,offset:0,size:0},i[s]=h),h}bindBufferBase(t,s,i){const h=this._getBufferBinding(t,s);null!=h&&(h.buffer===i&&0===h.offset&&0===h.size||(this.gl.bindBufferBase(t,s,i?i.glName:null),h.buffer=i,h.offset=0,h.size=0))}bindBufferRange(t,s,i,h,e){const n=this._getBufferBinding(t,s);null!=n&&(n.buffer===i&&n.offset===h&&n.size===e||(h%this._parameters.uniformBufferOffsetAlignment==0?(this.gl.bindBufferRange(t,s,i.glName,h,e),n.buffer=i,n.offset=h,n.size=e):console.error("Uniform buffer binding offset is not a multiple of the context offset alignment")))}bindUBO(t,s,i,h){null!=s?(T()&&(h??s.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),s.initialize(),void 0!==i&&void 0!==h?this.bindBufferRange(f.UNIFORM_BUFFER,t,s.buffer,i,h):this.bindBufferBase(f.UNIFORM_BUFFER,t,s.buffer)):this.bindBufferBase(f.UNIFORM_BUFFER,t,null)}unbindUBO(t){for(let s=0,i=this._state.uniformBufferBindingPoints.length;s<i;s++){const i=this._state.uniformBufferBindingPoints[s];null!=i&&i.buffer===t.buffer&&this.bindBufferBase(f.UNIFORM_BUFFER,s,null)}}unbindBuffer(t){switch(t){case f.ARRAY_BUFFER:this._state.vertexBuffer=mt(this.gl,null,t,this._state.vertexBuffer);break;case f.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=mt(this.gl,null,t,this._state.indexBuffer);break;case f.UNIFORM_BUFFER:this._state.uniformBuffer=mt(this.gl,null,t,this._state.uniformBuffer);break;case f.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=mt(this.gl,null,t,this._state.pixelPackBuffer);break;case f.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=mt(this.gl,null,t,this._state.pixelUnpackBuffer);break;case f.COPY_READ_BUFFER:this._state.copyReadBuffer=mt(this.gl,null,t,this._state.copyReadBuffer);break;case f.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=mt(this.gl,null,t,this._state.copyWriteBuffer)}}bindVAO(t=null){null!=t?this._state.vertexArrayObject!==t&&(t.bind(),this._state.vertexArrayObject=t):this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null)}bindTransformFeedback(t){const{gl:s}=this;s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,t.glName)}beginTransformFeedback(t,s){if(this._transformFeedbackRequestInfo)throw new Error("Already in a transform feedback request");const{gl:i}=this;i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,t.glName),i.beginTransformFeedback(s),this._transformFeedbackRequestInfo={primitiveType:s}}endTransformFeedback(){if(!this._transformFeedbackRequestInfo)throw new Error("Not in a transform feedback request");const{gl:t}=this;t.endTransformFeedback(),t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,null),this._transformFeedbackRequestInfo=null}async clientWaitAsync(t=y(10)){const{gl:s}=this,i=s.fenceSync(D.SYNC_GPU_COMMANDS_COMPLETE,0);if(!i)throw new Error("Client wait failed, could not create sync object");let h;this.instanceCounter.increment(u.Sync,i),s.flush();do{await G(t),h=s.clientWaitSync(i,0,0)}while(h===P.TIMEOUT_EXPIRED);if(this.instanceCounter.decrement(u.Sync,i),s.deleteSync(i),h===P.WAIT_FAILED)throw new Error("Client wait failed")}getBoundFramebufferObject(t=M.FRAMEBUFFER){return t===M.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(f.ARRAY_BUFFER),this.unbindBuffer(f.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(f.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(f.PIXEL_PACK_BUFFER),this.unbindBuffer(f.PIXEL_UNPACK_BUFFER),this.unbindBuffer(f.COPY_READ_BUFFER),this.unbindBuffer(f.COPY_WRITE_BUFFER);for(let t=0;t<this.parameters.maxTextureImageUnits;++t)this.bindTexture(null,t);this.setBlendingEnabled(!1),this.setBlendFunction(h.ONE,h.ZERO),this.setBlendEquation(e.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(n.BACK),this.setFrontFace(r.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(o.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(o.ALWAYS,0,0),this.setStencilOp(l.KEEP,l.KEEP,l.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setDrawBuffers([a.BACK]),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){const{gl:t}=this;t.bindVertexArray(null);for(let s=0;s<this.parameters.maxVertexAttributes;s++)t.disableVertexAttribArray(s);this._state.vertexBuffer?t.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):t.bindBuffer(f.ARRAY_BUFFER,null),this._state.indexBuffer?t.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):t.bindBuffer(f.ELEMENT_ARRAY_BUFFER,null),this._state.uniformBuffer?t.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):t.bindBuffer(f.UNIFORM_BUFFER,null);for(let s=0;s<this._parameters.maxUniformBufferBindings;s++){const i=this._state.uniformBufferBindingPoints[s];if(null!=i){const{buffer:h,offset:e,size:n}=i;null!==h?0===e&&0===n?t.bindBufferBase(f.UNIFORM_BUFFER,s,h.glName):t.bindBufferRange(f.UNIFORM_BUFFER,s,h.glName,e,n):t.bindBufferBase(f.UNIFORM_BUFFER,s,null)}}if(this._state.pixelPackBuffer?t.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):t.bindBuffer(f.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?t.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):t.bindBuffer(f.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?t.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):t.bindBuffer(f.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?t.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):t.bindBuffer(f.COPY_WRITE_BUFFER,null),t.bindFramebuffer(M.READ_FRAMEBUFFER,null),t.readBuffer(t.BACK),this._state.readFramebuffer&&(t.bindFramebuffer(M.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),t.readBuffer(B.COLOR_ATTACHMENT0)),t.bindFramebuffer(M.DRAW_FRAMEBUFFER,this._state.drawFramebuffer?.glName??null),null===this._state.drawFramebuffer){const s=this._state.drawBuffers.defaultFramebuffer;t.drawBuffers(s??[a.BACK])}else{const s=this._state.drawBuffers.fbos.get(this._state.drawFramebuffer);t.drawBuffers(s??[B.COLOR_ATTACHMENT0])}if(this._state.vertexArrayObject){const t=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(t)}t.useProgram(this._state.program?.glName??null),t.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),t.bindRenderbuffer(t.RENDERBUFFER,this._state.renderbuffer?.glName??null),!0===this._state.blend?t.enable(this.gl.BLEND):t.disable(this.gl.BLEND),t.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),t.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),t.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),t.clearDepth(this._state.clearDepth),t.clearStencil(this._state.clearStencil),t.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),t.cullFace(this._state.cullFace),t.depthFunc(this._state.depthFunction),t.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),!0===this._state.depthTest?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),t.depthMask(this._state.depthWrite),t.frontFace(this._state.frontFace),t.lineWidth(1),!0===this._state.faceCulling?t.enable(t.CULL_FACE):t.disable(t.CULL_FACE),t.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),!0===this._state.polygonOffsetFill?t.enable(t.POLYGON_OFFSET_FILL):t.disable(t.POLYGON_OFFSET_FILL),t.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),!0===this._state.scissorTest?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST),t.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),t.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),!0===this._state.stencilTest?t.enable(t.STENCIL_TEST):t.disable(t.STENCIL_TEST),t.stencilMask(this._state.stencilWriteMask);for(let s=0;s<this.parameters.maxTextureImageUnits;s++){t.activeTexture(C+s),t.bindTexture(I.TEXTURE_2D,null),t.bindTexture(I.TEXTURE_CUBE_MAP,null),t.bindTexture(I.TEXTURE_3D,null),t.bindTexture(I.TEXTURE_2D_ARRAY,null);const i=this._state.textureUnitMap[s];null!=i&&t.bindTexture(i.descriptor.target,i.glName)}t.activeTexture(C+this._state.activeTexture);const s=this._state.viewport;t.viewport(s.x,s.y,s.width,s.height),this.resetInfo()}_loadExtensions(){this.gl.getExtension("KHR_parallel_shader_compile")}};function mt(t,s,i,h){return s?h!==s&&t.bindBuffer(i,s.glName):t.bindBuffer(i,null),s}function bt(t,s){switch(t){case d.POINTS:return 2*s;case d.TRIANGLES:return s/3;case d.TRIANGLE_STRIP:case d.TRIANGLE_FAN:return s-2;default:return 0}}export{Z as o,gt as y};
//# sourceMappingURL=p-25f9a898.js.map