import{dc as t,dK as s,aY as i,cH as p,ah as o,ai as r,ec as e,an as h,ap as a}from"./p-3013819f.js";import{t as c}from"./p-7b13247d.js";import{m as n,u as f}from"./p-4e55d8f0.js";import{t as m}from"./p-9cf72458.js";import{$ as j}from"./p-6d5c327b.js";import"./p-3b51db5e.js";import"./p-0d83e514.js";import"./p-b362a32c.js";import"./p-8567e6fe.js";import"./p-c268fbe3.js";import"./p-17c1fa4b.js";import"./p-b6b871c6.js";import"./p-ffa11fc1.js";import"./p-808395fb.js";import"./p-30a1f911.js";import"./p-508fdb0a.js";import"./p-f1aede5a.js";import"./p-94b15954.js";import"./p-a9376829.js";import"./p-3811f238.js";import"./p-e6812c2f.js";import"./p-a925664a.js";import"./p-a897fcf8.js";import"./p-c7810a6f.js";import"./p-201cec5f.js";import"./p-89242a33.js";import"./p-7580bdba.js";import"./p-a62b18ce.js";import"./p-2d8c68ca.js";import"./p-d97e7de8.js";import"./p-595ce045.js";import"./p-10e5b6ea.js";import"./p-3b8b0ae8.js";import"./p-ec95a4fb.js";import"./p-1f0b604e.js";import"./p-347800d3.js";import"./p-72db18d5.js";import"./p-325c6878.js";import"./p-721433ed.js";import"./p-1cf43261.js";import"./p-8b1f6523.js";import"./p-4f73c6ea.js";import"./p-ffb26433.js";const d="sublayers",l="layerView";let b=class extends(n(f)){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){null==this._graphicsViewsFeatureCollectionMap?null==this._graphicsViews?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(t,s){return Array.from(this.graphicsViews(),(s=>{const i=s.hitTest(t);if(null!=this._graphicsViewsFeatureCollectionMap){const t=this._graphicsViewsFeatureCollectionMap.get(s);for(const s of i)!s.popupTemplate&&t.popupTemplate&&(s.popupTemplate=t.popupTemplate),s.sourceLayer=s.layer=this.layer}return i})).flat().map((s=>({type:"graphic",graphic:s,layer:this.layer,mapPoint:t})))}highlight(o){let r;"number"==typeof o?r=[o]:o instanceof t?r=[o.uid]:Array.isArray(o)&&o.length>0?r="number"==typeof o[0]?o:o.map((t=>t&&t.uid)):s.isCollection(o)&&(r=o.map((t=>t&&t.uid)).toArray());const e=r?.filter(i);return e?.length?(this._addHighlight(e),p((()=>this._removeHighlight(e)))):p()}update(t){for(const s of this.graphicsViews())s.processUpdate(t)}attach(){const t=this.view,s=()=>this.requestUpdate(),i=this.layer.featureCollections;if(null!=i&&i.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const p of i){const i=new m(this.view.featuresTilingScheme),e=new j({view:t,graphics:p.source,renderer:p.renderer,requestUpdateCallback:s,container:i});this._graphicsViewsFeatureCollectionMap.set(e,p),this.container.addChild(e.container),this.addHandles([o((()=>p.visible),(t=>e.container.visible=t),r),o((()=>e.updating),(()=>this.notifyChange("updating")),r)],l)}this._updateHighlight()}else null!=this.layer.sublayers&&this.addHandles(e((()=>this.layer.sublayers),"change",(()=>this._createGraphicsViews()),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveStart(){}moveEnd(){}viewChange(){for(const t of this.graphicsViews())t.viewChange()}isUpdating(){for(const t of this.graphicsViews())if(t.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(l);for(const t of this.graphicsViews())t.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),null==this.layer.sublayers)return;const t=[],s=this.view,i=()=>this.requestUpdate();for(const p of this.layer.sublayers){const e=new m(this.view.featuresTilingScheme);e.fadeTransitionEnabled=!0;const h=new j({view:s,graphics:p.graphics,requestUpdateCallback:i,container:e});this.addHandles([p.on("graphic-update",h.graphicUpdateHandler),o((()=>p.visible),(t=>h.container.visible=t),r),o((()=>h.updating),(()=>this.notifyChange("updating")),r)],l),this.container.addChild(h.container),t.push(h)}this._graphicsViews=t,this._updateHighlight()}_addHighlight(t){for(const s of t)if(this._highlightIds.has(s)){const t=this._highlightIds.get(s);this._highlightIds.set(s,t+1)}else this._highlightIds.set(s,1);this._updateHighlight()}_removeHighlight(t){for(const s of t)if(this._highlightIds.has(s)){const t=this._highlightIds.get(s)-1;0===t?this._highlightIds.delete(s):this._highlightIds.set(s,t)}this._updateHighlight()}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),s=c("highlight");for(const i of this.graphicsViews())i.setHighlight(t.map((t=>({objectId:t,highlightFlags:s}))))}};b=h([a("esri.views.2d.layers.MapNotesLayerView2D")],b);const u=b;export default u;
//# sourceMappingURL=p-70710a9d.js.map