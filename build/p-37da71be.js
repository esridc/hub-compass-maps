import{s as e,n as t,a7 as n}from"./p-aad64c9f.js";import{e as r}from"./p-e91c4d32.js";const o=!0,i={identifierOffset:0,identifierLength:10,versionOffset:10,checksumOffset:12,byteCount:16};function c(e,t,n){return{identifier:String.fromCharCode.apply(null,new Uint8Array(e,n+i.identifierOffset,i.identifierLength)),version:t.getUint16(n+i.versionOffset,o),checksum:t.getUint32(n+i.checksumOffset,o)}}const s={sizeLo:0,sizeHi:4,minX:8,minY:16,minZ:24,maxX:32,maxY:40,maxZ:48,errorX:56,errorY:64,errorZ:72,count:80,reserved:84,byteCount:88};function a(e,t){return{sizeLo:e.getUint32(t+s.sizeLo,o),sizeHi:e.getUint32(t+s.sizeHi,o),minX:e.getFloat64(t+s.minX,o),minY:e.getFloat64(t+s.minY,o),minZ:e.getFloat64(t+s.minZ,o),maxX:e.getFloat64(t+s.maxX,o),maxY:e.getFloat64(t+s.maxY,o),maxZ:e.getFloat64(t+s.maxZ,o),errorX:e.getFloat64(t+s.errorX,o),errorY:e.getFloat64(t+s.errorY,o),errorZ:e.getFloat64(t+s.errorZ,o),count:e.getUint32(t+s.count,o),reserved:e.getUint32(t+s.reserved,o)}}function f(t){const n=new DataView(t,0);let r=0;const{identifier:o,version:f}=c(t,n,r);if(r+=i.byteCount,"LEPCC     "!==o)throw new e("lepcc-decode-error","Bad identifier");if(f>1)throw new e("lepcc-decode-error","Unknown version");const d=a(n,r);r+=s.byteCount;if(d.sizeHi*2**32+d.sizeLo!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const l=new Float64Array(3*d.count),w=[],p=[],y=[],h=[];if(r=u(t,r,w),r=u(t,r,p),r=u(t,r,y),r=u(t,r,h),r!==t.byteLength)throw new e("lepcc-decode-error","Bad length");let b=0,m=0;for(let e=0;e<w.length;e++){m+=w[e];let t=0;for(let n=0;n<p[e];n++){t+=y[b];const e=h[b];l[3*b]=Math.min(d.maxX,d.minX+2*d.errorX*t),l[3*b+1]=Math.min(d.maxY,d.minY+2*d.errorY*m),l[3*b+2]=Math.min(d.maxZ,d.minZ+2*d.errorZ*e),b++}}return{errorX:d.errorX,errorY:d.errorY,errorZ:d.errorZ,result:l}}function u(e,t,n){const r=[];t=d(e,t,r);const o=[];for(let i=0;i<r.length;i++){o.length=0,t=d(e,t,o);for(let e=0;e<o.length;e++)n.push(o[e]+r[i])}return t}function d(t,n,r){const i=new DataView(t,n),c=i.getUint8(0),s=31&c,a=!!(32&c),f=(192&c)>>6;let u=0;if(0===f)u=i.getUint32(1,o),n+=5;else if(1===f)u=i.getUint16(1,o),n+=3;else{if(2!==f)throw new e("lepcc-decode-error","Bad count type");u=i.getUint8(1),n+=2}if(a)throw new e("lepcc-decode-error","LUT not implemented");const d=Math.ceil(u*s/8),l=new Uint8Array(t,n,d);let w=0,p=0,y=0;const h=-1>>>32-s;for(let e=0;e<u;e++){for(;p<s;)w|=l[y]<<p,p+=8,y+=1;r[e]=w&h,w>>>=s,p-=s,p+s>32&&(w|=l[y-1]>>8-p)}return n+y}const l={sizeLo:0,sizeHi:4,count:8,colorMapCount:12,lookupMethod:14,compressionMethod:15,byteCount:16};function w(e,t){return{sizeLo:e.getUint32(t+l.sizeLo,o),sizeHi:e.getUint32(t+l.sizeHi,o),count:e.getUint32(t+l.count,o),colorMapCount:e.getUint16(t+l.colorMapCount,o),lookupMethod:e.getUint8(t+l.lookupMethod),compressionMethod:e.getUint8(t+l.compressionMethod)}}function p(t){const n=new DataView(t,0);let r=0;const{identifier:o,version:s}=c(t,n,r);if(r+=i.byteCount,"ClusterRGB"!==o)throw new e("lepcc-decode-error","Bad identifier");if(s>1)throw new e("lepcc-decode-error","Unknown version");const a=w(n,r);r+=l.byteCount;if(a.sizeHi*2**32+a.sizeLo!==t.byteLength)throw new e("lepcc-decode-error","Bad size");if((2===a.lookupMethod||1===a.lookupMethod)&&0===a.compressionMethod){if(3*a.colorMapCount+a.count+r!==t.byteLength||a.colorMapCount>256)throw new e("lepcc-decode-error","Bad count");const n=new Uint8Array(t,r,3*a.colorMapCount),o=new Uint8Array(t,r+3*a.colorMapCount,a.count),i=new Uint8Array(3*a.count);for(let e=0;e<a.count;e++){const t=o[e];i[3*e]=n[3*t],i[3*e+1]=n[3*t+1],i[3*e+2]=n[3*t+2]}return i}if(0===a.lookupMethod&&0===a.compressionMethod){if(3*a.count+r!==t.byteLength||0!==a.colorMapCount)throw new e("lepcc-decode-error","Bad count");return new Uint8Array(t,r).slice()}if(a.lookupMethod<=2&&1===a.compressionMethod){if(r+3!==t.byteLength||1!==a.colorMapCount)throw new e("lepcc-decode-error","Bad count");const o=n.getUint8(r),i=n.getUint8(r+1),c=n.getUint8(r+2),s=new Uint8Array(3*a.count);for(let e=0;e<a.count;e++)s[3*e]=o,s[3*e+1]=i,s[3*e+2]=c;return s}throw new e("lepcc-decode-error","Bad method "+a.lookupMethod+","+a.compressionMethod)}const y={sizeLo:0,sizeHi:4,count:8,scaleFactor:12,bitsPerPoint:14,reserved:15,byteCount:16};function h(e,t){return{sizeLo:e.getUint32(t+y.sizeLo,o),sizeHi:e.getUint32(t+y.sizeHi,o),count:e.getUint32(t+y.count,o),scaleFactor:e.getUint16(t+y.scaleFactor,o),bitsPerPoint:e.getUint8(t+y.bitsPerPoint),reserved:e.getUint8(t+y.reserved)}}function b(t){const n=new DataView(t,0);let r=0;const{identifier:o,version:s}=c(t,n,r);if(r+=i.byteCount,"Intensity "!==o)throw new e("lepcc-decode-error","Bad identifier");if(s>1)throw new e("lepcc-decode-error","Unknown version");const a=h(n,r);r+=y.byteCount;if(a.sizeHi*2**32+a.sizeLo!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const f=new Uint16Array(a.count);if(8===a.bitsPerPoint){if(a.count+r!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const n=new Uint8Array(t,r,a.count);for(let e=0;e<a.count;e++)f[e]=n[e]*a.scaleFactor}else if(16===a.bitsPerPoint){if(2*a.count+r!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const n=new Uint16Array(t,r,a.count);for(let e=0;e<a.count;e++)f[e]=n[e]*a.scaleFactor}else{const n=[];if(d(t,r,n)!==t.byteLength)throw new e("lepcc-decode-error","Bad size");for(let e=0;e<a.count;e++)f[e]=n[e]*a.scaleFactor}return f}const m=()=>t.getLogger("esri.views.3d.layers.i3s.I3SBinaryReader");function U(t,n,r){let o="",i=0;for(;i<r;){const c=t[n+i];if(c<128)o+=String.fromCharCode(c),i++;else if(c>=192&&c<224){if(i+1>=r)throw new e("utf8-decode-error","UTF-8 Decode failed. Two byte character was truncated.");const s=(31&c)<<6|63&t[n+i+1];o+=String.fromCharCode(s),i+=2}else if(c>=224&&c<240){if(i+2>=r)throw new e("utf8-decode-error","UTF-8 Decode failed. Multi byte character was truncated.");const s=(15&c)<<12|(63&t[n+i+1])<<6|63&t[n+i+2];o+=String.fromCharCode(s),i+=3}else{if(!(c>=240&&c<248))throw new e("utf8-decode-error","UTF-8 Decode failed. Invalid multi byte sequence.");{if(i+3>=r)throw new e("utf8-decode-error","UTF-8 Decode failed. Multi byte character was truncated.");const s=(7&c)<<18|(63&t[n+i+1])<<12|(63&t[n+i+2])<<6|63&t[n+i+3];if(s>=65536){const e=55296+(s-65536>>10),t=56320+(1023&s);o+=String.fromCharCode(e,t)}else o+=String.fromCharCode(s);i+=4}}}return o}function g(e,t){const n={byteOffset:0,byteCount:0,fields:Object.create(null)};let r=0;for(let o=0;o<t.length;o++){const i=t[o],c=i.valueType||i.type,s=M[c];n.fields[i.property]=s(e,r),r+=O[c].BYTES_PER_ELEMENT}return n.byteCount=r,n}function I(e,t,n){return A(e,t,n).map((e=>{const t=e?Date.parse(e):null;return null==t||Number.isNaN(t)?null:t}))}function A(t,n,r){const o=[];let i,c,s=0;for(c=0;c<t;c+=1){if(i=n[c],i>0){if(o.push(U(r,s,i-1)),0!==r[s+i-1])throw new e("string-array-error","Invalid string array: missing null termination.")}else o.push(null);s+=i}return o}function v(e,t){return new O[t.valueType](e,t.byteOffset,t.count*t.valuesPerElement)}function z(e,t){return new Uint8Array(e,t.byteOffset,t.byteCount)}function B(t,r,o){const i=null!=r.header?g(t,r.header):{byteOffset:0,byteCount:0,fields:{count:o}},c={header:i,byteOffset:i.byteCount,byteCount:0,entries:Object.create(null)};let s=i.byteCount;for(let t=0;t<r.ordering.length;t++){const o=r.ordering[t],a=n(r[o]);if(a.count=i.fields.count??0,"String"===a.valueType){if(a.byteOffset=s,a.byteCount=i.fields[o+"ByteCount"],"UTF-8"!==a.encoding)throw new e("unsupported-encoding","Unsupported String encoding.",{encoding:a.encoding});if(a.timeEncoding&&"ECMA_ISO8601"!==a.timeEncoding)throw new e("unsupported-time-encoding","Unsupported time encoding.",{timeEncoding:a.timeEncoding})}else{if(!V(a.valueType))throw new e("unsupported-value-type","Unsupported binary valueType",{valueType:a.valueType});{const e=x(a.valueType);s+=s%e!=0?e-s%e:0,a.byteOffset=s,a.byteCount=e*a.valuesPerElement*a.count}}s+=a.byteCount??0,c.entries[o]=a}return c.byteCount=s-c.byteOffset,c}function D(t,n,r){if(n!==t&&m().error(`Invalid ${r} buffer size\n expected: ${t}, actual: ${n})`),n<t)throw new e("buffer-too-small","Binary buffer is too small",{expectedSize:t,actualSize:n})}function C(e,t){const n=g(e,t&&t.header);let r=n.byteCount;const o={isDraco:!1,header:n,byteOffset:n.byteCount,byteCount:0,vertexAttributes:{}},i=n.fields,c=null!=i.vertexCount?i.vertexCount:i.count;for(const e of t.ordering){if(!t.vertexAttributes[e])continue;const n={...t.vertexAttributes[e],byteOffset:r,count:c},i=S[e]||"_"+e;o.vertexAttributes[i]=n,r+=x(n.valueType)*n.valuesPerElement*c}const s=i.faceCount;if(t.faces&&s){o.faces={};for(const e of t.ordering){if(!t.faces[e])continue;const n={...t.faces[e],byteOffset:r,count:s};o.faces[e]=n,r+=x(n.valueType)*n.valuesPerElement*s}}const a=i.featureCount;if(t.featureAttributes&&t.featureAttributeOrder&&a){o.featureAttributes={};for(const e of t.featureAttributeOrder){if(!t.featureAttributes[e])continue;const n={...t.featureAttributes[e],byteOffset:r,count:a};o.featureAttributes[e]=n;r+=("UInt64"===n.valueType?8:x(n.valueType))*n.valuesPerElement*a}}return D(r,e.byteLength,"geometry"),o.byteCount=r-o.byteOffset,o}const S={position:r.POSITION,normal:r.NORMAL,color:r.COLOR,uv0:r.UV0,region:r.UVREGION};function F(t,n,r){if("lepcc-rgb"===t.encoding)return p(n);if("lepcc-intensity"===t.encoding)return b(n);if(null!=t.encoding&&""!==t.encoding)throw new e("unknown-attribute-storage-info-encoding","Unknown Attribute Storage Info Encoding");t["attributeByteCounts "]&&!t.attributeByteCounts&&(m().warn("Warning: Trailing space in 'attributeByteCounts '."),t.attributeByteCounts=t["attributeByteCounts "]),"ObjectIds"===t.ordering[0]&&t.hasOwnProperty("objectIds")&&(m().warn("Warning: Case error in objectIds"),t.ordering[0]="objectIds");const o=B(n,t,r);D(o.byteOffset+o.byteCount,n.byteLength,"attribute");const i=o.entries.attributeValues||o.entries.objectIds;if(i){if("String"===i.valueType){const e=o.entries.attributeByteCounts,t=v(n,e),r=z(n,i);return i.timeEncoding?I(e.count,t,r):A(e.count,t,r)}return v(n,i)}throw new e("bad-attribute-storage-info","Bad attributeStorageInfo specification.")}const O={Float32:Float32Array,Float64:Float64Array,UInt8:Uint8Array,Int8:Int8Array,UInt16:Uint16Array,Int16:Int16Array,UInt32:Uint32Array,Int32:Int32Array},M={Float32:(e,t)=>new DataView(e,0).getFloat32(t,!0),Float64:(e,t)=>new DataView(e,0).getFloat64(t,!0),UInt8:(e,t)=>new DataView(e,0).getUint8(t),Int8:(e,t)=>new DataView(e,0).getInt8(t),UInt16:(e,t)=>new DataView(e,0).getUint16(t,!0),Int16:(e,t)=>new DataView(e,0).getInt16(t,!0),UInt32:(e,t)=>new DataView(e,0).getUint32(t,!0),Int32:(e,t)=>new DataView(e,0).getInt32(t,!0)};function V(e){return O.hasOwnProperty(e)}function x(e){return V(e)?O[e].BYTES_PER_ELEMENT:0}export{F as I,f as c,v as l,C as w};
//# sourceMappingURL=p-37da71be.js.map