{"version":3,"names":["sides","alignments","placements","reduce","acc","side","concat","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","replace","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","map","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition$1","async","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","getElementRects","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","initialPlacement","elements","detectOverflow","state","options","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","arrow$1","arrowDimensions","getDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","arrow","alignmentOffset","centerOffset","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement$1","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","crossAxis","detectOverflowOptions","placements$1","undefined","overflow","currentIndex","autoPlacement","index","currentPlacement","alignmentSides","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","d","slice","sort","a","b","placementsThatFitOnEachSide","every","resetPlacement","flip$1","_middlewareData$arrow","_middlewareData$flip","mainAxis","checkMainAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","isBasePlacement","push","overflowsData","flip","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","some","hide$1","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","_middlewareData$offse","diffCoords","shift$1","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle$1","test","isTableElement","isContainingBlock","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","willChange","contain","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","CSS","supports","getComputedStyle","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","visualViewport","frameElement","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayerSelectors","isTopLayer","selector","matches","e","topLayer","scroll","isOffsetParentAnElement","offsetRect","getClientRects","Array","from","getWindowScrollBarX","getDocumentRect","html","scrollWidth","clientWidth","scrollHeight","clientHeight","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","position","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","ancestor","set","elementClippingAncestors","this","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getRectRelativeToOffsetParent","getTrueOffsetParent","polyfill","getOffsetParentFn","getDimensionsFn","observeMove","onMove","io","timeoutId","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","IntersectionObserver","observe","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","shift","hide","computePosition","Map","mergedOptions","platformWithCache","offsetParentPolyfill","flatTreeParent","style","tagName","setUpFloatingUiForShadowDomPositioning","originalGetOffsetParent","roundByDPR","dpr","devicePixelRatio","positionFloatingUI","component","floatingEl","overlayPositioning","flipDisabled","flipPlacements","offsetDistance","offsetSkidding","arrowEl","type","effectivePlacement","getEffectivePlacement","getMiddleware","ARROW_CSS_TRANSFORM","floatingLayout","Object","assign","visibility","pointerEvents","setAttribute","placementDataAttribute","open","repositionDebounceTimeout","effectivePlacements","defaultMenuPlacement","FloatingCSS","animation","animationActive","defaultMiddleware","filterComputedPlacements","filteredPlacements","console","warn","join","trim","getElementDir","reverse","reposition","delayed","positionFunction","getDebouncedReposition","debounced","componentToDebouncedRepositionMap","debounce","leading","maxWait","cleanupMap","WeakMap","connectFloatingUI","disconnectFloatingUI","runAutoUpdate","delete","cancel","visiblePointerSize","defaultOffsetDistance","ceil","hypot"],"sources":["./node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/floating-ui.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.7.0\n */\nimport { Build } from '@stencil/core/internal/client/index.js';\nimport { a as getElementDir } from './dom.js';\nimport { d as debounce } from './debounce.js';\n\n/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition$1 = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle$1(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle$1(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(floating) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return floating.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element) || isTopLayer(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(data.floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle$1(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\n/* eslint-disable @typescript-eslint/ban-types */\nfunction offsetParent(element) {\n    return offsetParentPolyfill(element);\n}\nfunction flatTreeParent(element) {\n    if (element.assignedSlot) {\n        return element.assignedSlot;\n    }\n    if (element.parentNode instanceof ShadowRoot) {\n        return element.parentNode.host;\n    }\n    return element.parentNode;\n}\nfunction offsetParentPolyfill(element) {\n    // Do an initial walk to check for display:none ancestors.\n    for (let ancestor = element; ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        if (getComputedStyle(ancestor).display === 'none') {\n            return null;\n        }\n    }\n    for (let ancestor = flatTreeParent(element); ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        const style = getComputedStyle(ancestor);\n        // Display:contents nodes aren't in the layout tree so they should be skipped.\n        if (style.display === 'contents') {\n            continue;\n        }\n        if (style.position !== 'static' || style.filter !== 'none') {\n            return ancestor;\n        }\n        if (ancestor.tagName === 'BODY') {\n            return ancestor;\n        }\n    }\n    return null;\n}\n\n(function setUpFloatingUiForShadowDomPositioning() {\n    if (Build.isBrowser) {\n        const originalGetOffsetParent = platform.getOffsetParent;\n        platform.getOffsetParent = (element) => originalGetOffsetParent(element, offsetParent);\n    }\n})();\nfunction roundByDPR(value) {\n    const dpr = window.devicePixelRatio || 1;\n    return Math.round(value * dpr) / dpr;\n}\n/**\n * Positions the floating element relative to the reference element.\n *\n * **Note:** exported for testing purposes only\n *\n * @param root0\n * @param root0.referenceEl\n * @param root0.floatingEl\n * @param root0.overlayPositioning\n * @param root0.placement\n * @param root0.flipDisabled\n * @param root0.flipPlacements\n * @param root0.offsetDistance\n * @param root0.offsetSkidding\n * @param root0.arrowEl\n * @param root0.type\n * @param component\n * @param root0.referenceEl.referenceEl\n * @param root0.referenceEl.floatingEl\n * @param root0.referenceEl.overlayPositioning\n * @param root0.referenceEl.placement\n * @param root0.referenceEl.flipDisabled\n * @param root0.referenceEl.flipPlacements\n * @param root0.referenceEl.offsetDistance\n * @param root0.referenceEl.offsetSkidding\n * @param root0.referenceEl.arrowEl\n * @param root0.referenceEl.type\n * @param component.referenceEl\n * @param component.floatingEl\n * @param component.overlayPositioning\n * @param component.placement\n * @param component.flipDisabled\n * @param component.flipPlacements\n * @param component.offsetDistance\n * @param component.offsetSkidding\n * @param component.arrowEl\n * @param component.type\n */\nconst positionFloatingUI = \n/* we export arrow function to allow us to spy on it during testing */\nasync (component, { referenceEl, floatingEl, overlayPositioning = \"absolute\", placement, flipDisabled, flipPlacements, offsetDistance, offsetSkidding, arrowEl, type, }) => {\n    if (!referenceEl || !floatingEl) {\n        return null;\n    }\n    const { x, y, placement: effectivePlacement, strategy: position, middlewareData, } = await computePosition(referenceEl, floatingEl, {\n        strategy: overlayPositioning,\n        placement: placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\"\n            ? undefined\n            : getEffectivePlacement(floatingEl, placement),\n        middleware: getMiddleware({\n            placement,\n            flipDisabled,\n            flipPlacements,\n            offsetDistance,\n            offsetSkidding,\n            arrowEl,\n            type,\n        }),\n    });\n    if (arrowEl && middlewareData.arrow) {\n        const { x, y } = middlewareData.arrow;\n        const side = effectivePlacement.split(\"-\")[0];\n        const alignment = x != null ? \"left\" : \"top\";\n        const transform = ARROW_CSS_TRANSFORM[side];\n        const reset = { left: \"\", top: \"\", bottom: \"\", right: \"\" };\n        if (\"floatingLayout\" in component) {\n            component.floatingLayout = side === \"left\" || side === \"right\" ? \"horizontal\" : \"vertical\";\n        }\n        Object.assign(arrowEl.style, {\n            ...reset,\n            [alignment]: `${alignment == \"left\" ? x : y}px`,\n            [side]: \"100%\",\n            transform,\n        });\n    }\n    const referenceHidden = middlewareData.hide?.referenceHidden;\n    const visibility = referenceHidden ? \"hidden\" : null;\n    const pointerEvents = visibility ? \"none\" : null;\n    floatingEl.setAttribute(placementDataAttribute, effectivePlacement);\n    const { open } = component;\n    Object.assign(floatingEl.style, {\n        visibility,\n        pointerEvents,\n        position,\n        transform: open ? `translate(${roundByDPR(x)}px,${roundByDPR(y)}px)` : \"\",\n        top: 0,\n        left: 0,\n    });\n};\n/**\n * Exported for testing purposes only\n */\nconst placementDataAttribute = \"data-placement\";\n/**\n * Exported for testing purposes only\n */\nconst repositionDebounceTimeout = 100;\nconst effectivePlacements = [\n    \"top\",\n    \"bottom\",\n    \"right\",\n    \"left\",\n    \"top-start\",\n    \"top-end\",\n    \"bottom-start\",\n    \"bottom-end\",\n    \"right-start\",\n    \"right-end\",\n    \"left-start\",\n    \"left-end\",\n];\nconst defaultMenuPlacement = \"bottom-start\";\nconst FloatingCSS = {\n    animation: \"calcite-floating-ui-anim\",\n    animationActive: \"calcite-floating-ui-anim--active\",\n};\nfunction getMiddleware({ placement, flipDisabled, flipPlacements, offsetDistance, offsetSkidding, arrowEl, type, }) {\n    const defaultMiddleware = [shift(), hide()];\n    if (type === \"menu\") {\n        return [\n            ...defaultMiddleware,\n            flip({\n                fallbackPlacements: flipPlacements || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"],\n            }),\n        ];\n    }\n    if (type === \"popover\" || type === \"tooltip\") {\n        const middleware = [\n            ...defaultMiddleware,\n            offset({\n                mainAxis: typeof offsetDistance === \"number\" ? offsetDistance : 0,\n                crossAxis: typeof offsetSkidding === \"number\" ? offsetSkidding : 0,\n            }),\n        ];\n        if (placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\") {\n            middleware.push(autoPlacement({ alignment: placement === \"auto-start\" ? \"start\" : placement === \"auto-end\" ? \"end\" : null }));\n        }\n        else if (!flipDisabled) {\n            middleware.push(flip(flipPlacements ? { fallbackPlacements: flipPlacements } : {}));\n        }\n        if (arrowEl) {\n            middleware.push(arrow({\n                element: arrowEl,\n            }));\n        }\n        return middleware;\n    }\n    return [];\n}\nfunction filterComputedPlacements(placements, el) {\n    const filteredPlacements = placements.filter((placement) => effectivePlacements.includes(placement));\n    if (filteredPlacements.length !== placements.length) {\n        console.warn(`${el.tagName}: Invalid value found in: flipPlacements. Try any of these: ${effectivePlacements\n            .map((placement) => `\"${placement}\"`)\n            .join(\", \")\n            .trim()}`, { el });\n    }\n    return filteredPlacements;\n}\nfunction getEffectivePlacement(floatingEl, placement) {\n    const placements = [\"left\", \"right\"];\n    if (getElementDir(floatingEl) === \"rtl\") {\n        placements.reverse();\n    }\n    return placement.replace(/leading/gi, placements[0]).replace(/trailing/gi, placements[1]);\n}\n/**\n * Convenience function to manage `reposition` calls for FloatingUIComponents that use `positionFloatingUI.\n *\n * Note: this is not needed for components that use `calcite-popover`.\n *\n * @param component - A floating-ui component.\n * @param options - Reposition parameters.\n * @param options.referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param options.floatingEl - The `floatingElement` containing the floating ui.\n * @param options.overlayPositioning - type of positioning to use for the overlaid content.\n * @param options.placement - Determines where the component will be positioned relative to the `referenceElement`.\n * @param options.flipDisabled - Prevents flipping the component's placement when overlapping its `referenceElement`.\n * @param options.flipPlacements - Defines the available placements that can be used when a flip occurs.\n * @param options.offsetDistance - Offsets the position of the popover away from the `referenceElement`.\n * @param options.offsetSkidding - Offsets the position of the component along the `referenceElement`.\n * @param options.arrowEl - A customizable arrow element.\n * @param options.type - The type of floating UI.\n * @param delayed - Reposition the component after a delay.\n * @returns {Promise<void>}\n */\nasync function reposition(component, options, delayed = false) {\n    if (!component.open) {\n        return;\n    }\n    const positionFunction = delayed ? getDebouncedReposition(component) : positionFloatingUI;\n    return positionFunction(component, options);\n}\nfunction getDebouncedReposition(component) {\n    let debounced = componentToDebouncedRepositionMap.get(component);\n    if (debounced) {\n        return debounced;\n    }\n    debounced = debounce(positionFloatingUI, repositionDebounceTimeout, {\n        leading: true,\n        maxWait: repositionDebounceTimeout,\n    });\n    componentToDebouncedRepositionMap.set(component, debounced);\n    return debounced;\n}\nconst ARROW_CSS_TRANSFORM = {\n    top: \"\",\n    left: \"rotate(-90deg)\",\n    bottom: \"rotate(180deg)\",\n    right: \"rotate(90deg)\",\n};\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nconst cleanupMap = new WeakMap();\nconst componentToDebouncedRepositionMap = new WeakMap();\n/**\n * Helper to set up floating element interactions on connectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nfunction connectFloatingUI(component, referenceEl, floatingEl) {\n    if (!floatingEl || !referenceEl) {\n        return;\n    }\n    disconnectFloatingUI(component, referenceEl, floatingEl);\n    Object.assign(floatingEl.style, {\n        visibility: \"hidden\",\n        pointerEvents: \"none\",\n        // initial positioning based on https://floating-ui.com/docs/computePosition#initial-layout\n        position: component.overlayPositioning,\n    });\n    const runAutoUpdate = Build.isBrowser\n        ? autoUpdate\n        : (_refEl, _floatingEl, updateCallback) => {\n            updateCallback();\n            return () => {\n                /* noop */\n            };\n        };\n    cleanupMap.set(component, runAutoUpdate(referenceEl, floatingEl, () => component.reposition()));\n}\n/**\n * Helper to tear down floating element interactions on disconnectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nfunction disconnectFloatingUI(component, referenceEl, floatingEl) {\n    if (!floatingEl || !referenceEl) {\n        return;\n    }\n    cleanupMap.get(component)?.();\n    cleanupMap.delete(component);\n    componentToDebouncedRepositionMap.get(component)?.cancel();\n    componentToDebouncedRepositionMap.delete(component);\n}\nconst visiblePointerSize = 4;\n/**\n * Default offset the position of the floating element away from the reference element.\n *\n * @default 6\n */\nconst defaultOffsetDistance = Math.ceil(Math.hypot(visiblePointerSize, visiblePointerSize));\n\nexport { FloatingCSS as F, disconnectFloatingUI as a, defaultMenuPlacement as b, connectFloatingUI as c, defaultOffsetDistance as d, filterComputedPlacements as f, reposition as r };\n\n//# sourceMappingURL=floating-ui.js.map"],"mappings":"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"}