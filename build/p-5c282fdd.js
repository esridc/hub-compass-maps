import{e as t,s as r,a as s}from"./p-028496e2.js";import{C as e,U as n}from"./p-8567e6fe.js";import"./p-30a1f911.js";import{m as i,d as o,s as c}from"./p-711ed159.js";import"./p-5a65512b.js";import{t as a}from"./p-89242a33.js";import{i as f}from"./p-851e644d.js";class u{constructor(t,r,s,e,n,i,o){this.instanceId=t,this.textureKey=r,this.indexStart=s,this.indexCount=e,this.vertexStart=n,this.vertexCount=i,this.overlaps=o}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new u(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,r,s,e,n,i,o,c){t.push(r),t.push(s),t.push(e),t.push(n),t.push(i),t.push(o),t.push(c)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(t){const r=t.readInt32(),s=t.readInt32(),e=t.readInt32(),n=t.readInt32(),i=t.readInt32(),o=t.readInt32(),c=t.readInt32();return new u(r,s,e,n,i,o,c)}}u.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT;function l(t,r){if(null!==r){t.push(r.length);for(const s of r)s.serialize(t);return t}t.push(0)}function h(t,r,s){const e=t.readInt32(),n=new Array(e);for(let e=0;e<n.length;e++)n[e]=r.deserialize(t,s);return n}class y{constructor(t,r){this.id=t,this.sortKey=r,this.records=[]}serialize(t){return t.push(this.id),t.writeF32(this.sortKey),l(t,this.records),t}static deserialize(t){const r=t.readInt32(),s=t.readF32(),e=new y(r,s);return e.records=h(t,u)??[],e}}y.byteSizeHint=2*Uint32Array.BYTES_PER_ELEMENT+u.byteSizeHint;function w(r){const s=r.map((({name:t,count:r,type:s})=>`${t}.${r}.${s}`)).join(",");return t(s)}function p(t,r,s,e,n,i,o){if(t.primitiveName===r)for(const r in t)if(r===s){let s=e?.readWithDefault(n,i,t[r]&&o);return"text"===t.type&&(s=s.toString()),void(t[r]=s)}if("type"in t&&null!=t.type)switch(t.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(t.symbolLayers)for(const c of t.symbolLayers)p(c,r,s,e,n,i,o);break;case"CIMHatchFill":t.lineSymbol&&p(t.lineSymbol,r,s,e,n,i,o);break;case"CIMSolidStroke":case"CIMSolidFill":case"CIMVectorMarker":if("CIMVectorMarker"===t.type&&t.markerGraphics)for(const c of t.markerGraphics)p(c,r,s,e,n,i,o),p(c.symbol,r,s,e,n,i,o)}}function A(t){const r=t.width;return null!=t.effects?256:Math.max(1.25*r,8)}function b(t,r){return 65535&t|r<<16}function d(t,r,s,n){const i=s.packPrecisionFactor??1;switch(s.type){case e.BYTE:if(1===s.count)t.setInt8(n+s.offset,r*i);else for(let e=0;e<s.count;e++){const o=e*Int8Array.BYTES_PER_ELEMENT;t.setInt8(n+s.offset+o,r[e]*i)}break;case e.UNSIGNED_BYTE:if(1===s.count)t.setUint8(n+s.offset,r*i);else for(let e=0;e<s.count;e++){const o=e*Uint8Array.BYTES_PER_ELEMENT;t.setUint8(n+s.offset+o,r[e]*i)}break;case e.SHORT:if(1===s.count)t.setInt16(n+s.offset,r*i,!0);else for(let e=0;e<s.count;e++){const o=e*Int16Array.BYTES_PER_ELEMENT;t.setInt16(n+s.offset+o,r[e]*i,!0)}break;case e.UNSIGNED_SHORT:if(1===s.count)t.setUint16(n+s.offset,r*i,!0);else for(let e=0;e<s.count;e++){const o=e*Uint16Array.BYTES_PER_ELEMENT;t.setUint16(n+s.offset+o,r[e]*i,!0)}break;case e.INT:if(1===s.count)t.setInt32(n+s.offset,r*i,!0);else for(let e=0;e<s.count;e++){const o=e*Int32Array.BYTES_PER_ELEMENT;t.setInt32(n+s.offset+o,r[e]*i,!0)}break;case e.UNSIGNED_INT:if(1===s.count)t.setUint32(n+s.offset,r*i,!0);else for(let e=0;e<s.count;e++){const o=e*Uint32Array.BYTES_PER_ELEMENT;t.setUint32(n+s.offset+o,r[e]*i,!0)}break;case e.FLOAT:if(1===s.count)t.setFloat32(n+s.offset,r*i,!0);else for(let e=0;e<s.count;e++){const o=e*Float32Array.BYTES_PER_ELEMENT;t.setFloat32(n+s.offset+o,r[e]*i,!0)}}}function m(t,r,s){switch(r.type){case e.BYTE:{if(1===r.count)return t.getInt8(s+r.offset);const e=[];for(let n=0;n<r.count;n++){const i=n*Int8Array.BYTES_PER_ELEMENT;e.push(t.getInt8(s+r.offset+i))}return e}case e.UNSIGNED_BYTE:{if(1===r.count)return t.getUint8(s+r.offset);const e=[];for(let n=0;n<r.count;n++){const i=n*Uint8Array.BYTES_PER_ELEMENT;e.push(t.getUint8(s+r.offset+i))}return e}case e.SHORT:{if(1===r.count)return t.getInt16(s+r.offset,!0);const e=[];for(let n=0;n<r.count;n++){const i=n*Int16Array.BYTES_PER_ELEMENT;e.push(t.getInt16(s+r.offset+i,!0))}return e}case e.UNSIGNED_SHORT:{if(1===r.count)return t.getUint16(s+r.offset,!0);const e=[];for(let n=0;n<r.count;n++){const i=n*Uint16Array.BYTES_PER_ELEMENT;e.push(t.getUint16(s+r.offset+i,!0))}return e}case e.INT:{if(1===r.count)return t.getInt32(s+r.offset,!0);const e=[];for(let n=0;n<r.count;n++){const i=n*Int32Array.BYTES_PER_ELEMENT;e.push(t.getInt32(s+r.offset+i,!0))}return e}case e.UNSIGNED_INT:{if(1===r.count)return t.getUint32(s+r.offset,!0);const e=[];for(let n=0;n<r.count;n++){const i=n*Uint32Array.BYTES_PER_ELEMENT;e.push(t.getUint32(s+r.offset+i,!0))}return e}case e.FLOAT:{if(1===r.count)return t.getFloat32(s+r.offset,!0);const e=[];for(let n=0;n<r.count;n++){const i=n*Float32Array.BYTES_PER_ELEMENT;e.push(t.getFloat32(s+r.offset+i,!0))}return e}}}const I=()=>r.getLogger("esri.views.2d.engine.webgl.Utils");function M(t){switch(t){case n.UNSIGNED_BYTE:return 1;case n.UNSIGNED_SHORT_4_4_4_4:return 2;case n.FLOAT:return 4;default:return void I().error(new s("webgl-utils",`Unable to handle type ${t}`))}}function U(t){switch(t){case n.UNSIGNED_BYTE:return Uint8Array;case n.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case n.FLOAT:return Float32Array;default:return void I().error(new s("webgl-utils",`Unable to handle type ${t}`))}}function k(t){const r={};for(const s in t){const e=t[s];let n=0;r[s]=e.map((t=>{const r=new a(t.name,t.count,t.type,n,0,t.normalized||!1);return n+=t.count*c(t.type),r})),r[s]?.forEach((t=>t.stride=n))}return r}const g=t=>{const r=new Map;for(const s in t)for(const e of t[s])r.set(e.name,e.location);return r},C=t=>{const r={};for(const s in t){const e=t[s];r[s]=e?.length?e[0].stride:0}return r},j=new Map,z=(t,r)=>{if(!j.has(t)){const s=k(r),e={strides:C(s),bufferLayouts:s,attributes:g(r)};j.set(t,e)}return j.get(t)},S=t=>t.includes("data:image/svg+xml");function v(t){const r=[];for(let s=0;s<t.length;s++)r.push(t.charCodeAt(s));return r}function F(t,r,s){const e=new o(r.width,r.height);return e.dataType=r.dataType,r.depth&&(e.depth=r.depth),r.flipped&&(e.flipped=r.flipped),r.hasMipmap&&(e.hasMipmap=r.hasMipmap),e.internalFormat=r.internalFormat,r.isImmutable&&(e.isImmutable=r.isImmutable),r.isOpaque&&(e.isOpaque=r.isOpaque),r.maxAnisotropy&&(e.maxAnisotropy=r.maxAnisotropy),e.pixelFormat=r.pixelFormat,r.preMultiplyAlpha&&(e.preMultiplyAlpha=r.preMultiplyAlpha),r.samplingMode&&(e.samplingMode=r.samplingMode),r.target&&(e.target=r.target),e.uniform=r.uniform,r.unpackAlignment&&(e.unpackAlignment=r.unpackAlignment),r.wrapMode&&(e.wrapMode=r.wrapMode),new i(t,e,s)}function $(t){return"url"in t&&"urlHash"in t?{...t,url:""}:t}class x{constructor(t,r,s,e,n,i,o,c,a=[]){this.entityTexel=t,this.anchorX=r,this.anchorY=s,this.directionX=e,this.directionY=n,this.maxScale=i,this.minScale=o,this.referenceBounds=c,this.bounds=a}serialize(t){t.push(this.entityTexel),t.writeF32(this.anchorX),t.writeF32(this.anchorY),t.writeF32(this.directionX),t.writeF32(this.directionY),t.writeF32(this.maxScale),t.writeF32(this.minScale),null===this.referenceBounds?(t.writeF32(0),t.writeF32(0),t.writeF32(0)):(t.writeF32(this.referenceBounds.size),t.writeF32(this.referenceBounds.offsetX),t.writeF32(this.referenceBounds.offsetY)),l(t,this.bounds)}static deserialize(t){const r=t.readInt32(),s=t.readF32(),e=t.readF32(),n=t.readF32(),i=t.readF32(),o=t.readF32(),c=t.readF32(),a=t.readF32(),u=t.readF32(),l=t.readF32(),y=h(t,f)??[];return new x(r,s,e,n,i,o,c,{size:a,offsetX:u,offsetY:l},y)}}export{$ as M,F as T,h as a,z as b,u as c,U as d,d as e,A as f,M as g,v as j,m as n,p as o,x as r,y as s,w as t,b as w,S as y};
//# sourceMappingURL=p-5c282fdd.js.map