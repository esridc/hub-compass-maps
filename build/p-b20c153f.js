import{hD as e,an as t,ao as l,ap as n,f4 as r,l8 as i,fB as a,m6 as o,h0 as s,h1 as y,hr as u,hs as p,ht as d,fa as c,bt as m,dK as f,eH as h,g as b,i5 as g,m7 as w,eY as S,m8 as O,cB as L,g0 as v,dc as x,a as N,dt as T,co as C,k6 as I,fx as M,fv as j,m9 as J,ch as E,cp as P,g7 as B,g8 as G,f5 as D}from"./p-3013819f.js";import{h as F}from"./p-b4639a86.js";import{n as R}from"./p-b0cbd61d.js";import"./p-3b51db5e.js";function k(e){return"markup"===e.featureCollectionType||e.layers.some((e=>null!=e.layerDefinition.visibilityField||!_(e)))}function _({layerDefinition:e,featureSet:t}){const l=e.geometryType??t.geometryType;return K.find((t=>l===t.geometryTypeJSON&&e.drawingInfo?.renderer?.symbol?.type===t.identifyingSymbol.type))}function z(){return new L({xmin:-180,ymin:-90,xmax:180,ymax:90})}const A=new e({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),$=new e({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0,length:255});let H=class extends F{constructor(e){super(e),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",(e=>{e.item.sourceLayer=this.layer})),this.graphics.on("after-remove",(e=>{e.item.sourceLayer=null}))}get fullExtent(){const e=this.layer?.spatialReference,t=this.fullBounds;return e?null==t?S(z(),e).geometry:v(t,e):null}get fullBounds(){const e=this.layer?.spatialReference;if(!e)return null;const t=g();return this.graphics.forEach((l=>{const n=null!=l.geometry?S(l.geometry,e).geometry:null;null!=n&&w(t,"point"===n.type?n:n.extent,t)})),O(t,J)?null:t}get sublayers(){return this.graphics}};t([l({readOnly:!0})],H.prototype,"fullExtent",null),t([l({readOnly:!0})],H.prototype,"fullBounds",null),t([l({readOnly:!0})],H.prototype,"sublayers",null),t([l()],H.prototype,"layer",void 0),t([l()],H.prototype,"layerId",void 0),t([l({readOnly:!0})],H.prototype,"visibilityMode",void 0),H=t([n("esri.layers.MapNotesLayer.MapNotesSublayer")],H);const K=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:(new r).toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:(new i).toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:(new a).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:(new a).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:(new o).toJSON()}];let Y=class extends(s(y(u(p(d(c)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=m.WGS84,this.sublayers=new f(K.map((e=>new H({id:e.id,layerId:e.layerId,title:e.title,layer:this})))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,l){return{operations:{supportsMapNotesEditing:!k(t)&&"portal-item"!==l?.origin}}}readFeatureCollections(e,t,l){if(!k(t))return null;const n=t.layers.map((e=>{const t=new h;return t.read(e,l),t}));return new f({items:n})}readLegacyfeatureCollectionJSON(e,t){return k(t)?b(t.featureCollection):null}get fullExtent(){const e=this.spatialReference,t=g();if(null!=this.sublayers)this.sublayers.forEach((({fullBounds:e})=>null!=e?w(t,e,t):t),t);else if(this.featureCollectionJSON?.layers.some((e=>e.layerDefinition.extent))){this.featureCollectionJSON.layers.forEach((l=>{const n=S(l.layerDefinition.extent,e).geometry;null!=n&&w(t,n,t)}))}return O(t,J)?S(z(),e).geometry:v(t,e)}readMinScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.minScale)return e.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.maxScale)return e.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?m.fromJSON(t.layers[0].layerDefinition.spatialReference):m.WGS84}readSublayers(e,t,l){if(k(t))return null;const n=[];let r=t.layers.reduce(((e,t)=>Math.max(e,t.layerDefinition.id??-1)),-1)+1;for(const e of t.layers){const{layerDefinition:t,featureSet:l}=e,i=t.id??r++,a=_(e);if(null!=a){const e=new H({id:a.id,title:t.name,layerId:i,layer:this,graphics:l.features.map((({geometry:e,symbol:t,attributes:l,popupInfo:n})=>x.fromJSON({attributes:l,geometry:e,symbol:t,popupTemplate:n})))});n.push(e)}}return new f(n)}writeSublayers(e,t,l,n){const{minScale:r,maxScale:i}=this;if(null==e)return;const a=e.some((e=>e.graphics.length>0));if(!this.capabilities.operations.supportsMapNotesEditing)return void(a&&n?.messages?.push(new N("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer")));const o=[];let s=this.spatialReference.toJSON();e:for(const t of e)for(const e of t.graphics)if(null!=e.geometry){s=e.geometry.spatialReference.toJSON();break e}for(const t of K){const l=e.find((e=>t.id===e.id));this._writeMapNoteSublayer(o,l,t,r,i,s,n)}T("featureCollection.layers",o,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=b(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(null==this.sublayers)return;let e=null;const t=[];for(const l of this.sublayers)for(const n of l.graphics)if(null!=n.geometry){const l=n.geometry;e?E(l.spatialReference,e)||(P(l.spatialReference,e)||B()||await G(),n.geometry=D(l,e)):e=l.spatialReference,t.push(n)}const l=await C(t.map((e=>e.geometry)));t.forEach(((e,t)=>e.geometry=l[t]))}_findSublayer(e){return null==this.sublayers?null:this.sublayers?.find((t=>t.id===e))??null}_writeMapNoteSublayer(e,t,l,n,r,i,a){const o=[];if(null!=t){for(const e of t.graphics)this._writeMapNote(o,e,l.geometryType,a);this._normalizeObjectIds(o,A),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:b(l.identifyingSymbol)}},id:t.layerId,geometryType:l.geometryTypeJSON,minScale:n,maxScale:r,objectIdField:"OBJECTID",fields:[A.toJSON(),$.toJSON()],spatialReference:i},featureSet:{features:o,geometryType:l.geometryTypeJSON}})}}_writeMapNote(e,t,l,n){if(null==t)return;const{geometry:r,symbol:i,popupTemplate:a}=t;if(null==r)return;if(r.type!==l)return void n?.messages?.push(new I("map-notes-layer:invalid-geometry-type",`Geometry "${r.type}" cannot be saved in "${l}" layer`,{graphic:t}));if(null==i)return void n?.messages?.push(new I("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t}));const o={attributes:{...t.attributes},geometry:r.toJSON(),symbol:i.toJSON()};null!=a&&(o.popupInfo=a.toJSON()),e.push(o)}_normalizeObjectIds(e,t){const l=t.name;let n=R(l,e)+1;const r=new Set;for(const t of e){t.attributes||(t.attributes={});const{attributes:e}=t;(null==e[l]||r.has(e[l]))&&(e[l]=n++),r.add(e[l])}}};t([l({readOnly:!0})],Y.prototype,"capabilities",void 0),t([M(["portal-item","web-map"],"capabilities",["layers"])],Y.prototype,"readCapabilities",null),t([l({readOnly:!0})],Y.prototype,"featureCollections",void 0),t([M(["web-map","portal-item"],"featureCollections",["layers"])],Y.prototype,"readFeatureCollections",null),t([l({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],Y.prototype,"featureCollectionJSON",void 0),t([M(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],Y.prototype,"readLegacyfeatureCollectionJSON",null),t([l({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],Y.prototype,"featureCollectionType",void 0),t([l({readOnly:!0})],Y.prototype,"fullExtent",null),t([l({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:null!=this.featureCollectionJSON}}}}}}})],Y.prototype,"legendEnabled",void 0),t([l({type:["show","hide","hide-children"]})],Y.prototype,"listMode",void 0),t([l({type:Number,nonNullable:!0,json:{write:!1}})],Y.prototype,"minScale",void 0),t([M(["web-map","portal-item"],"minScale",["layers"])],Y.prototype,"readMinScale",null),t([l({type:Number,nonNullable:!0,json:{write:!1}})],Y.prototype,"maxScale",void 0),t([M(["web-map","portal-item"],"maxScale",["layers"])],Y.prototype,"readMaxScale",null),t([l({readOnly:!0})],Y.prototype,"multipointLayer",null),t([l({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],Y.prototype,"operationalLayerType",void 0),t([l({readOnly:!0})],Y.prototype,"pointLayer",null),t([l({readOnly:!0})],Y.prototype,"polygonLayer",null),t([l({readOnly:!0})],Y.prototype,"polylineLayer",null),t([l({type:m})],Y.prototype,"spatialReference",void 0),t([M(["web-map","portal-item"],"spatialReference",["layers"])],Y.prototype,"readSpatialReference",null),t([l({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],Y.prototype,"sublayers",void 0),t([M("web-map","sublayers",["layers"])],Y.prototype,"readSublayers",null),t([j("web-map","sublayers")],Y.prototype,"writeSublayers",null),t([l({readOnly:!0})],Y.prototype,"textLayer",null),t([l()],Y.prototype,"title",void 0),t([l({readOnly:!0,json:{read:!1}})],Y.prototype,"type",void 0),Y=t([n("esri.layers.MapNotesLayer")],Y);const q=Y;export default q;
//# sourceMappingURL=p-b20c153f.js.map