import{r as t,a1 as s,cb as e,a6 as i,bf as r,a5 as n,fH as a,b9 as o,gf as h,aO as u,gg as c,an as l,ao as d,ap as p,am as f,c9 as m,di as g,fk as b,cB as x,bj as _,fi as w,fj as y,g1 as v,av as P,X as T,s as S,b8 as R,ah as M,fR as j,a as F,dc as z,f7 as I,ai as C}from"./p-3013819f.js";import{o as U}from"./p-208e4927.js";import{f as V,d as O,a as A}from"./p-02db2d5a.js";import{a as D,m as G,u as L}from"./p-4e55d8f0.js";import{a as k,E as B,r as E}from"./p-0d83e514.js";import{L as W,P as q,U as N,D as H,R as Q,O as X}from"./p-8567e6fe.js";import{c as Y,f as J,m as K,O as Z,h as $,_ as tt,A as st,p as et,T as it,g as rt,l as nt}from"./p-2be11d24.js";import{d as at,m as ot}from"./p-c268fbe3.js";import{a as ht}from"./p-b362a32c.js";import{d as ut,h as ct,r as lt}from"./p-d97e7de8.js";import{x as dt}from"./p-201cec5f.js";import{i as pt}from"./p-2d8c68ca.js";import{u as ft,S as mt}from"./p-dd344c44.js";import{g as gt,a as bt,u as xt,i as _t}from"./p-0dd2cf60.js";import{a as wt,D as yt,s as vt,v as Pt}from"./p-e7f8bbfb.js";import{p as Tt}from"./p-c779faaf.js";import{i as St}from"./p-0482b904.js";import"./p-3b51db5e.js";import"./p-595ce045.js";import"./p-89242a33.js";import"./p-c7810a6f.js";import"./p-30a1f911.js";import"./p-a897fcf8.js";import"./p-7b13247d.js";import"./p-10e5b6ea.js";import"./p-3b8b0ae8.js";import"./p-508fdb0a.js";import"./p-ec95a4fb.js";import"./p-1f0b604e.js";import"./p-347800d3.js";import"./p-94b15954.js";const Rt={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class Mt extends k{constructor(t=null,s=null,e=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=t,this.transformGrid=s,this.interpolation=e}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(t){this._processedTexture!==t&&(this._disposeTextures(!0),this._processedTexture=t)}get rasterTexture(){return this._rasterTexture}set rasterTexture(t){this._rasterTexture!==t&&(this._rasterTexture?.dispose(),this._rasterTexture=t),null==t&&(this.projected=!1)}get processed(){return this._processed}set processed(s){this._processed=s,s||(t(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||Rt}set symbolizerParameters(t){this._symbolizerParameters!==t&&(this._symbolizerParameters=t,this._colormapTextureInvalidated=!0,this.commonUniforms=null)}get source(){return this._source}set source(t){this._source!==t&&(this._source=t,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.commonUniforms=null,this.projected=!1,this.invalidateTexture())}get suspended(){return this._suspended}set suspended(t){this._suspended&&!t&&this.stage&&(this.ready(),this.requestRender()),this._suspended=t}get bandIds(){return this._bandIds}set bandIds(t){this._bandIds=t,this._isBandIdsChanged(t)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(t){this._interpolation=t,this._rasterTexture&&this._rasterTexture.setSamplingMode("bilinear"===this._getTextureSamplingMethod(t||"nearest")?W.LINEAR:W.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(s){this._transformGrid!==s&&(this._transformGrid=s,this._transformGridTexture=t(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(t=!1){const s=t||this.projected;return[s?this.width:this.source?.width||this.width,s?this.height:this.source?.height||this.height]}getRasterCellSize(){const t=this.rawPixelData?.srcPixelSize,{projected:s,resolution:e}=this;return t&&!s?[t.x,t.y]:[e,e]}_createTransforms(){return{displayViewScreenMat3:s()}}setTransform(t){const s=e(this.transforms.displayViewScreenMat3),[h,u]=t.toScreenNoRotation([0,0],[this.x,this.y]),c=this.resolution/this.pixelRatio/t.resolution,l=c*this.width,d=c*this.height,p=Math.PI*this.rotation/180;i(s,s,r(h,u)),i(s,s,r(l/2,d/2)),n(s,s,-p),i(s,s,r(-l/2,-d/2)),a(s,s,r(l,d)),o(this.transforms.displayViewScreenMat3,t.displayViewMat3,s)}getTextures({forProcessing:t=!1,useProcessedTexture:s=!1}={}){const e=s?this._processedTexture??this._rasterTexture:this._rasterTexture,i=[],r=[];return e?(this._transformGridTexture&&!this.projected&&(r.push(this._transformGridTexture),i.push("u_transformGrid")),s?(r.push(e),i.push("u_image"),this._colormapTexture&&(r.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:r}):(r.push(e),i.push("u_image"),this._colormapTexture&&!t&&(r.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:r})):{names:i,textures:r}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:t}){if(!this.stage)return void this._disposeTextures();const s=this._isValidSource(this.source);s&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(t)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(t),this._rasterTexture&&(s?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=Y(t,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:t}=this;0!==t.length&&(this.processedTexture=t.shift(),t.forEach((t=>t?.dispose())),t.length=0)}_createOrDestroyRasterTexture(t){const s=this.source?.extractBands(this.bandIds);if(!this._isValidSource(s))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const e=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(e)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=!!t.capabilities.textureFloat?.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),r=this.isRendereredSource;this._rasterTexture=J(t,s,i,r),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(t){const s=this._rasterTextureBandIds;return!(null==s&&null==t||s&&t&&s.join("")===t.join(""))}_isValidSource(t){return null!=t&&t.pixels?.length>0}_getTextureSamplingMethod(t){const{type:s}=this.symbolizerParameters,e="lut"===s||"hillshade"===s||"stretch"===s&&1===this.symbolizerParameters.bandCount;return!this._supportsBilinearTexture||e||"bilinear"!==t&&"cubic"!==t?"nearest":"bilinear"}_updateColormapTexture(t){const s=this._colormap,e=this.symbolizerParameters.colormap;return e?s?e.length!==s.length||e.some(((t,e)=>t!==s[e]))?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=K(t,e),void(this._colormap=e)):void 0:(this._colormapTexture=K(t,e),void(this._colormap=e)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}_disposeTextures(t=!1){!this._transformGridTexture||t&&!this.projected||(this._transformGridTexture.dispose(),this._transformGridTexture=null),!t&&this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null,this._colormap=null,this._colormapTextureInvalidated=!0),!t&&this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this._processedTexture&&(this._processedTexture.dispose(),this._processedTexture=null)}}function jt(t){return null!=t.source}function Ft(t){const s=[];return t&&(s.push("applyProjection"),1===t.spacing[0]&&s.push("lookupProjection")),s}function zt(t,s,e){const i=!e.capabilities.textureFloat?.textureFloatLinear,r=[];return"cubic"===t?r.push("bicubic"):"bilinear"===t&&(s?(r.push("bilinear"),r.push("nnedge")):i&&r.push("bilinear")),r}const It={vsPath:"raster/common",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ct(t,s,e){const i=e?[]:Ft(s.transformGrid);return{defines:i,program:t.painter.materialManager.getProgram(It,i)}}function Ut(t,s,e,i,r=!1){const{names:n,textures:a}=e.getTextures({useProcessedTexture:r});Z(t.context,s,n,a),$(s,i,e.commonUniforms),s.setUniformMatrix3fv("u_dvsMat3",e.transforms.displayViewScreenMat3);const{colormap:o,colormapOffset:h}=e.symbolizerParameters,u=tt(o,h);$(s,i,u)}const Vt={createProgram:Ct,bindTextureAndUniforms:Ut};const Ot={vsPath:"raster/common",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function At(t,s,e){const{colormap:i}=s.symbolizerParameters,r=[...e?[]:Ft(s.transformGrid),...zt(s.interpolation,!0,t.context)];null!=i&&r.push("applyColormap");return{defines:r,program:t.painter.materialManager.getProgram(Ot,r)}}function Dt(t,s,e,i,r=!1){const{names:n,textures:a}=e.getTextures({useProcessedTexture:r});Z(t.context,s,n,a),$(s,i,e.commonUniforms),s.setUniformMatrix3fv("u_dvsMat3",e.transforms.displayViewScreenMat3);const o=e.symbolizerParameters,{colormap:h,colormapOffset:u}=o;if(null!=h){const t=tt(h,u);$(s,i,t)}const c=st(o);$(s,i,c)}const Gt={createProgram:At,bindTextureAndUniforms:Dt};const Lt={vsPath:"raster/common",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function kt(t,s,e){const{colormap:i,bandCount:r}=s.symbolizerParameters,n=[...e?[]:Ft(s.transformGrid),...zt(s.interpolation,1===r,t.context)];s.isRendereredSource&&!e?n.push("noop"):null!=i&&n.push("applyColormap");return{defines:n,program:t.painter.materialManager.getProgram(Lt,n)}}function Bt(t,s,e,i,r=!1){const{names:n,textures:a}=e.getTextures({useProcessedTexture:r});Z(t.context,s,n,a),$(s,i,e.commonUniforms),s.setUniformMatrix3fv("u_dvsMat3",e.transforms.displayViewScreenMat3);const o=e.symbolizerParameters,{colormap:h,colormapOffset:u}=o;if(null!=h){const t=tt(h,u);$(s,i,t)}const c=et(o);$(s,i,c)}const Et={createProgram:kt,bindTextureAndUniforms:Bt};const Wt=new Map;function qt(t){return Wt.get(t)}Wt.set("lut",Vt),Wt.set("hillshade",Gt),Wt.set("stretch",Et);const Nt=[1,1],Ht=[2,0,0,0,2,0,-1,-1,0];function Qt(t,s,e){const{context:i,rasterFunction:r,hasBranches:n}=t,{raster:a}=r.parameters,o=n?a?.id??-1:0,h=e.functionTextures[o]??e.rasterTexture;Z(i,s,["u_image"],[h])}function Xt(t,s,e){const{rasters:i}=t.rasterFunction.parameters;if(!i)return;if(i.length<2)return Qt(t,s,e);const r=i.filter((t=>"Constant"!==t.name)).map((t=>null!=t.id&&"Identity"!==t.name?e.functionTextures[t.id]:e.rasterTexture));if(Z(t.context,s,["u_image","u_image1","u_image2"].slice(0,r.length),r),r.length!==i.length)if(2===i.length){const t=i.findIndex((t=>"Constant"===t.name)),e=0===t?[0,1,0,1,0,0,0,0,0]:[1,0,0,0,1,0,0,0,0],{value:r}=i[t].parameters;s.setUniform1f("u_image1Const",r),s.setUniformMatrix3fv("u_imageSwap",e)}else if(3===i.length){const t=[];if(i.forEach(((s,e)=>"Constant"===s.name&&t.push(e))),1===t.length){const{value:e}=i[t[0]].parameters;s.setUniform1f("u_image1Const",e);const r=0===t[0]?[0,1,0,0,0,1,1,0,0]:1===t[0]?[1,0,0,0,0,1,0,1,0]:[1,0,0,0,1,0,0,0,1];s.setUniformMatrix3fv("u_imageSwap",r)}else if(2===t.length){const{value:e}=i[t[0]].parameters;s.setUniform1f("u_image1Const",e);const{value:r}=i[t[1]].parameters;s.setUniform1f("u_image2Const",r);const n=i.findIndex((t=>"Constant"!==t.name)),a=0===n?[1,0,0,0,1,0,0,0,1]:1===n?[0,1,0,1,0,0,0,0,1]:[0,0,1,1,0,0,0,1,0];s.setUniformMatrix3fv("u_imageSwap",a)}}}function Yt(t){t.setUniform2fv("u_coordScale",Nt),t.setUniformMatrix3fv("u_dvsMat3",Ht)}const Jt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/aspect",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Kt(t,s){return t.painter.materialManager.getProgram(Jt,[])}function Zt(t,s,e){Qt(t,s,e),Yt(s);const i=e.getRasterTextureSize();s.setUniform2fv("u_srcImageSize",i);const r=e.getRasterCellSize();s.setUniform2fv("u_cellSize",r)}const $t={createProgram:Kt,bindTextureAndUniforms:Zt};const ts={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/bandarithmetic",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ss(t,s){const{painter:e,rasterFunction:i}=t,{indexType:r}=i.parameters;return e.materialManager.getProgram(ts,[r])}function es(t,s,e){Qt(t,s,e),Yt(s);const{bandIndexMat3:i}=t.rasterFunction.parameters;s.setUniformMatrix3fv("u_bandIndexMat3",i)}const is={createProgram:ss,bindTextureAndUniforms:es};const rs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/compositeband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ns(t,s){const e=t.rasterFunction.parameters.rasters.filter((t=>"Constant"===t.name)),i=[];return e.length&&(i.push("oneConstant"),2===e.length&&i.push("twoConstant")),t.painter.materialManager.getProgram(rs,i)}function as(t,s,e){Xt(t,s,e),Yt(s)}const os={createProgram:ns,bindTextureAndUniforms:as};const hs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/contrast",attributes:new Map([["a_position",0],["a_texcoord",1]])};function us(t,s){return t.painter.materialManager.getProgram(hs,[])}function cs(t,s,e){Qt(t,s,e),Yt(s);const{contrastOffset:i,brightnessOffset:r}=t.rasterFunction.parameters;s.setUniform1f("u_contrastOffset",i),s.setUniform1f("u_brightnessOffset",r)}const ls={createProgram:us,bindTextureAndUniforms:cs};const ds={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/convolution",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ps(t,s){const{painter:e,rasterFunction:i}=t,{kernelRows:r,kernelCols:n}=i.parameters,a=[{name:"rows",value:r},{name:"cols",value:n}];return e.materialManager.getProgram(ds,a)}function fs(t,s,e){Qt(t,s,e),Yt(s),s.setUniform2fv("u_srcImageSize",[e.width,e.height]);const{kernel:i,clampRange:r}=t.rasterFunction.parameters;s.setUniform1fv("u_kernel",i),s.setUniform2fv("u_clampRange",r)}const ms={createProgram:ps,bindTextureAndUniforms:fs};const gs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/curvature",attributes:new Map([["a_position",0],["a_texcoord",1]])};function bs(t,s){const{painter:e,rasterFunction:i}=t,{curvatureType:r}=i.parameters,n=[r];return e.materialManager.getProgram(gs,n)}function xs(t,s,e){Qt(t,s,e),Yt(s);const i=e.getRasterTextureSize();s.setUniform2fv("u_srcImageSize",i);const{zFactor:r}=t.rasterFunction.parameters,n=e.getRasterCellSize();s.setUniform1f("u_zlFactor",200*r/n[0]/n[1])}const _s={createProgram:bs,bindTextureAndUniforms:xs};const ws={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/extractband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ys(t,s){return t.painter.materialManager.getProgram(ws,[])}function vs(t,s,e){Qt(t,s,e),Yt(s);const{bandIndexMat3:i}=t.rasterFunction.parameters;s.setUniformMatrix3fv("u_bandIndexMat3",i)}const Ps={createProgram:ys,bindTextureAndUniforms:vs};const Ts={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/focalstatistics",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ss(t,s){const{painter:e,rasterFunction:i}=t,{kernelRows:r,kernelCols:n,fillNoDataOnly:a,statisticsType:o}=i.parameters,h=[{name:"rows",value:r},{name:"cols",value:n},o];return a&&h.push("fill"),e.materialManager.getProgram(Ts,h)}function Rs(t,s,e){Qt(t,s,e),Yt(s),s.setUniform2fv("u_srcImageSize",[e.width,e.height]);const{clampRange:i}=t.rasterFunction.parameters;s.setUniform2fv("u_clampRange",i)}const Ms={createProgram:Ss,bindTextureAndUniforms:Rs};const js={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/grayscale",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Fs(t,s){return t.painter.materialManager.getProgram(js,[])}function zs(t,s,e){Qt(t,s,e),Yt(s);const{weights:i}=t.rasterFunction.parameters;s.setUniform3fv("u_weights",i)}const Is={createProgram:Fs,bindTextureAndUniforms:zs};const Cs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/local",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Us(t){const{painter:s,rasterFunction:e}=t,{imageCount:i,operationName:r,rasters:n,isOutputRounded:a}=e.parameters,o=[r.toLowerCase()];2===i&&o.push("twoImages");const h=n.filter((t=>"Constant"===t.name));return h.length&&(o.push("oneConstant"),2===h.length&&o.push("twoConstant")),a&&o.push("roundOutput"),s.materialManager.getProgram(Cs,o)}function Vs(t,s,e){Xt(t,s,e),Yt(s);const{domainRange:i}=t.rasterFunction.parameters;s.setUniform2fv("u_domainRange",i)}const Os={createProgram:Us,bindTextureAndUniforms:Vs};const As={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/mask",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ds(t,s){const{painter:e,rasterFunction:i}=t,r=i.parameters.bandCount>1?["multiBand"]:[];return e.materialManager.getProgram(As,r)}function Gs(t,s,e){Qt(t,s,e),Yt(s);const{includedRanges:i,noDataValues:r}=t.rasterFunction.parameters;s.setUniform1fv("u_includedRanges",i),s.setUniform1fv("u_noDataValues",r)}const Ls={createProgram:Ds,bindTextureAndUniforms:Gs};const ks={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/ndvi",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Bs(t,s){const{painter:e,rasterFunction:i}=t,r=i.parameters.scaled?["scaled"]:[];return e.materialManager.getProgram(ks,r)}function Es(t,s,e){Qt(t,s,e),Yt(s);const{bandIndexMat3:i}=t.rasterFunction.parameters;s.setUniformMatrix3fv("u_bandIndexMat3",i)}const Ws={createProgram:Bs,bindTextureAndUniforms:Es};const qs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/remap",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ns(t,s){return t.painter.materialManager.getProgram(qs,[])}function Hs(t,s,e){Qt(t,s,e),Yt(s);const{noDataRanges:i,rangeMaps:r,allowUnmatched:n,clampRange:a}=t.rasterFunction.parameters;s.setUniform1fv("u_noDataRanges",i),s.setUniform1fv("u_rangeMaps",r),s.setUniform1f("u_unmatchMask",n?1:0),s.setUniform2fv("u_clampRange",a)}const Qs={createProgram:Ns,bindTextureAndUniforms:Hs};const Xs={vsPath:"raster/common",fsPath:"raster/reproject",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ys(t,s){const{painter:e}=t,i=[],{interpolation:r,transformGrid:n}=s,a=t.rasterFunction?.parameters;return"cubic"===r?i.push("bicubic"):"bilinear"===r&&(i.push("bilinear"),a?.requireNNEdge&&i.push("nnedge")),n&&(i.push("applyProjection"),1===n.spacing[0]&&i.push("lookupProjection")),e.materialManager.getProgram(Xs,i)}function Js(t,s,e){const{names:i,textures:r}=e.getTextures({forProcessing:!0});Z(t.context,s,i,r),s.setUniform1f("u_scale",1),s.setUniform2fv("u_offset",[0,0]),s.setUniform2fv("u_coordScale",[1,1]),s.setUniformMatrix3fv("u_dvsMat3",[2,0,0,0,2,0,-1,-1,0]),s.setUniform1i("u_flipY",0),s.setUniform1f("u_opacity",1);const{width:n,height:a,source:o,transformGrid:u}=e;s.setUniform2fv("u_srcImageSize",[o.width,o.height]),s.setUniform2fv("u_targetImageSize",[n,a]),s.setUniform2fv("u_transformSpacing",u?u.spacing:h),s.setUniform2fv("u_transformGridSize",u?u.size:h)}const Ks={createProgram:Ys,bindTextureAndUniforms:Js};const Zs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/slope",attributes:new Map([["a_position",0],["a_texcoord",1]])};function $s(t,s){const{painter:e,rasterFunction:i}=t,{slopeType:r}=i.parameters,n="percent-rise"===r?["percentRise"]:[];return e.materialManager.getProgram(Zs,n)}function te(t,s,e){Qt(t,s,e),Yt(s);const i=e.getRasterTextureSize();s.setUniform2fv("u_srcImageSize",i);const r=e.getRasterCellSize();s.setUniform2fv("u_cellSize",r);const{zFactor:n,slopeType:a,pixelSizePower:o,pixelSizeFactor:h}=t.rasterFunction.parameters;s.setUniform1f("u_zFactor",n),s.setUniform1f("u_pixelSizePower","adjusted"===a?o:0),s.setUniform1f("u_pixelSizeFactor","adjusted"===a?h:0)}const se={createProgram:$s,bindTextureAndUniforms:te};const ee={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ie(t,s){const{useGamma:e,bandCount:i,isOutputRounded:r}=t.rasterFunction.parameters,n=[];return e&&n.push("useGamma"),i>1&&n.push("multiBand"),r&&n.push("roundOutput"),t.painter.materialManager.getProgram(ee,n)}function re(t,s,e){Qt(t,s,e),Yt(s);const{width:i,height:r}=e,n=t.rasterFunction.parameters;s.setUniform2fv("u_srcImageSize",[i,r]),s.setUniform1f("u_minOutput",n.outMin),s.setUniform1f("u_maxOutput",n.outMax),s.setUniform1fv("u_factor",n.factor),s.setUniform1fv("u_minCutOff",n.minCutOff),s.setUniform1fv("u_maxCutOff",n.maxCutOff),s.setUniform1fv("u_gamma",n.gamma),s.setUniform1fv("u_gammaCorrection",n.gammaCorrection)}const ne={createProgram:ie,bindTextureAndUniforms:re};const ae=new Map;function oe(t,s){const e=new at;return e.width=t,e.height=s,e.internalFormat=q.RGBA32F,e.samplingMode=W.NEAREST,e.dataType=N.FLOAT,e.isImmutable=!0,e.wrapMode=H.CLAMP_TO_EDGE,e}function he(t,s,e,i){const{context:r,requestRender:n,allowDelayedRender:a}=t,o=i.createProgram(t,e);return a&&null!=n&&!o.compiled?(n(),null):(r.bindFramebuffer(s),r.setViewport(0,0,s.width,s.height),r.useProgram(o),o)}function ue(t){return ae.get(t.toLowerCase())}function ce(t,s,e,i){const r=t.rasterFunction.name.toLowerCase(),n="reproject"===r?Ks:ue(r);if(null==n)return;const a=he(t,e,i,n);if(!a)return;n.bindTextureAndUniforms(t,a,i);const{interpolation:o}=i;"reproject"===r&&(i.interpolation="nearest"),s.draw();const[h,u]=i.getRasterTextureSize("reproject"===r),c=oe(h,u),l=new ot(t.context,c);if(e.copyToTexture(0,0,h,u,0,0,l),"reproject"===r)i.rasterTexture=l,i.projected=!0,i.interpolation=o;else{const s=t.hasBranches?t.rasterFunction.id:0;i.functionTextures[s]=l}}ae.set("arithmetic",Os),ae.set("aspect",$t),ae.set("bandarithmetic",is),ae.set("compositeband",os),ae.set("convolution",ms),ae.set("contrastbrightness",ls),ae.set("curvature",_s),ae.set("extractband",Ps),ae.set("statistics",Ms),ae.set("grayscale",Is),ae.set("local",Os),ae.set("mask",Ls),ae.set("ndvi",Ws),ae.set("remap",Qs),ae.set("slope",se),ae.set("stretch",ne);class le extends ut{constructor(){super(...arguments),this.name="raster",this._quad=null,this._rendererUniformInfos=new Map,this._fbo=null}dispose(){t(this._quad),t(this._fbo)}prepareState(t){const{context:s,renderPass:e}=t,i="raster"===e;s.setBlendingEnabled(!i),s.setBlendFunctionSeparate(Q.ONE,Q.ONE_MINUS_SRC_ALPHA,Q.ONE,Q.ONE_MINUS_SRC_ALPHA),s.setColorMask(!0,!0,!0,!0),s.setStencilWriteMask(0),s.setStencilTestEnabled(!i)}draw(t,s){if(!jt(s)||s.suspended)return;const{renderPass:e}=t;if("raster-bitmap"!==e)return"raster"===e?this._process(t,s):void this._drawBitmap(t,s,!0);this._drawBitmap(t,s)}_process(s,e){const{rasterFunction:i}=s,r="Reproject"===i.name;if(!(r?!(e.rasterTexture&&e.projected):!e.processed))return;const{timeline:n,context:a}=s;n.begin(this.name);const o=a.getBoundFramebufferObject(),h=a.getViewport();r||(e.processedTexture=t(e.processedTexture)),a.setStencilFunction(X.EQUAL,e.stencilRef,255),e.updateTexture(s),this._initQuad(a);const[u,c]=e.getRasterTextureSize(r),{isStandardRasterTileSize:l,fbo:d}=this._getRasterFBO(a,u,c);ce(s,this._quad,d,e),l||d.dispose(),a.bindFramebuffer(o),a.setViewport(h.x,h.y,h.width,h.height),n.end(this.name)}_drawBitmap(t,s,e=!1){const{timeline:i,context:r}=t;if(i.begin(this.name),r.setStencilFunction(X.EQUAL,s.stencilRef,255),s.updateTexture(t),e&&!s.processedTexture){if(s.updateProcessedTexture(),!s.processedTexture)return void i.end(this.name);s.processed=!0}this._initBitmapCommonUniforms(s);const n=s.symbolizerParameters.type,a=qt(n),{requestRender:o,allowDelayedRender:h}=t,{defines:u,program:c}=a.createProgram(t,s,s.projected&&e);if(h&&null!=o&&!c.compiled)return void o();r.useProgram(c);const l=this._getUniformInfos(n,r,c,u);this._quad||(this._quad=new ct(r,[0,0,1,0,0,1,1,1])),a.bindTextureAndUniforms(t,c,s,l,e),this._quad.draw(),i.end(this.name)}_initBitmapCommonUniforms(t){if(!t.commonUniforms){const s=rt(1,[0,0]),{transformGrid:e,width:i,height:r}=t,n=nt(e,[i,r],[t.source.width,t.source.height],1,!1);t.commonUniforms={...s,...n,u_coordScale:t.coordScale}}}_getRasterFBO(t,s,e){const i=s===ht&&e===ht;return i?(this._fbo||(this._fbo=this._createNewFBO(t,s,e)),{isStandardRasterTileSize:i,fbo:this._fbo}):{isStandardRasterTileSize:i,fbo:this._createNewFBO(t,s,e)}}_createNewFBO(t,s,e){const i=oe(s,e);return new dt(t,i)}_initQuad(t){this._quad||(this._quad=new ct(t,[0,0,1,0,0,1,1,1]))}_getUniformInfos(t,s,e,i){const r=i.length>0?t+"-"+i.join("-"):t;if(this._rendererUniformInfos.has(r))return this._rendererUniformInfos.get(r);const n=it(s,e);return this._rendererUniformInfos.set(r,n),n}}class de extends lt{constructor(t,s,e,i,r,n,a=null){super(t,s,e,i,r,n),this.bitmap=null,this.bitmap=new Mt(a,null,null),this.bitmap.coordScale=[r,n],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(t){this.bitmap.stencilRef=t}get stencilRef(){return this.bitmap.stencilRef}setTransform(t){super.setTransform(t),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:s(),tileMat3:s()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}class pe extends pt{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(t){const s=this._getTileBounds(t),[e,i]=this._tileInfoView.tileInfo.size,r=this._tileInfoView.getTileResolution(t.level);return new de(t,r,s[0],s[3],e,i)}prepareRenderPasses(t){const s=t.registerRenderPass({name:"imagery (tile)",brushes:[le],target:()=>this.children.map((t=>t.bitmap)),drawPhase:B.MAP});return[...super.prepareRenderPasses(t),s]}doRender(t){if(!this.visible||t.drawPhase!==B.MAP)return;const{rasterFunctionChain:s}=this;if(!s)return t.renderPass="raster-bitmap",void super.doRender(t);if(!s.hasFocalFunction){const[e,i]=this._tileInfoView.tileInfo.size;t.renderPass="raster",t.rasterFunction={name:"Reproject",parameters:{targetImageSize:[e,i],requireNNEdge:s.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1},super.doRender(t)}if(s?.functions.length){const{functions:e,hasBranches:i}=s;for(let s=0;s<e.length;s++){const r=e[s];"Constant"!==r.name&&"Identity"!==r.name&&(t.renderPass="raster",t.rasterFunction=r,t.hasBranches=i,super.doRender(t))}}t.rasterFunction=null,t.renderPass="bitmap",super.doRender(t)}_getTileBounds(t){const s=this._tileInfoView.getTileBounds(u(),t);if(this.isCustomTilingScheme&&t.world){const{tileInfo:e}=this._tileInfoView,i=c(e.spatialReference);if(i){const r=e.lodAt(t.level);if(!r)return s;const{resolution:n}=r,a=i/n%e.size[0],o=a?(e.size[0]-a)*n:0;s[0]-=o*t.world,s[2]-=o*t.world}}return s}}const fe=[0,0];let me=class extends f{constructor(){super(...arguments),this._updatingHandles=new m,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=g((async(t={})=>{const s=this._rasterFunctionState;if(t.reprocess&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const e=this._rasterFunctionState,{type:i}=this;return t.refetch||"raster"!==i&&!!t.reprocess||"cpu"===e||"cpu"===s?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(t.signal))}))}destroy(){this._updatingHandles.destroy()}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(t){this._set("useWebGLForProcessing",t)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(t){if(this._tileStrategy&&this.useProgressiveUpdate!==t){this._tileStrategy.destroy(),this.container.removeAllChildren();const s=this._getCacheSize(t);this._tileStrategy=new b({cachePolicy:"purge",acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),cacheSize:s,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",t),this.layerView.requestUpdate()}}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume();const{extent:s,resolution:e,scale:i}=t.state,r=this._tileInfoView.getClosestInfoForScale(i);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const t=this._srcResolutions[r.level],i=s.toJSON?s:x.fromJSON(s);gt(this._blockCacheRegistryUrl,this._blockCacheRegistryId,i,e,t,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,this.previousLOD?.level!==r.level&&(this.previousLOD=r,null==this._symbolizerParams||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,0===this._fetchQueue.length&&this._redrawImage(this._abortController.signal).then((()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()})));const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(t),this.layerView.requestUpdate()}get updating(){return this._globalUpdateRequested||this._updatingHandles?.updating}attach(){const t=_();this._maxIndexedColormapSize=4*(t.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new w(this.layerView.tileInfo,this.layerView.fullExtent);const s=this._computeFetchConcurrency();this._fetchQueue=new y({tileInfoView:this._tileInfoView,concurrency:s,process:(t,s)=>this._fetchTile(t,s)});const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new b({cachePolicy:"purge",acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),cacheSize:e,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,bt(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(t){const s=this.container.createTile(t);return this._updatingHandles.addPromise(this._enqueueTileFetch(s)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,s}releaseTile(t){this._fetchQueue.abort(t.key.id),this.container.removeChild(t),t.once("detach",(()=>{t.destroy(),this.layerView.requestUpdate()})),this.layerView.requestUpdate()}createEmptyTilePixelBlock(t=null){const s=null==t||t.join(",")===this._tileInfoView.tileInfo.size.join(",");if(s&&null!=this._emptyTilePixelBlock)return this._emptyTilePixelBlock;t=t||this._tileInfoView.tileInfo.size;const[e,i]=t,r=new ft({width:e,height:i,pixels:[new Uint8Array(e*i)],mask:new Uint8Array(e*i),pixelType:"u8"});return s&&(this._emptyTilePixelBlock=r),r}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:t,raster:s}=this.layer,e="rasterFunction"in s?s.rasterFunction.rawInputBandIds:null;return t?.length&&e?.length&&1!==s.rasterInfo.bandCount?t.map((t=>e[Math.min(t,e.length-1)])):t||e}updateRasterFunctionParameters(){}_fetchTile(t,s){const e=null!=s?s.signal:null,i=this.canUseWebGLForProcessing(),{layerView:r}=this,{tileInfo:n}=r,a=!n.isWrappable&&null!=yt(r.view.spatialReference),o=i&&this.layer.raster.hasUniqueSourceStorageInfo,h={allowPartialFill:!0,datumTransformation:r.datumTransformation,interpolation:i?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:o,skipRasterFunction:"raster"===this.type&&null!=this.container.rasterFunctionChain,signal:e,srcResolution:this._srcResolutions[t.level],timeExtent:r.timeExtent,tileInfo:n,disableWrapAround:a};return this.fetchTile(t,h)}_getCacheSize(t){return t?40:0}_initializeTileInfo(){const{layerView:t}=this,s=t.view.spatialReference;if(this._canUseLayerLODs()){const{origin:e,lods:i}=this.layer.tileInfo,r=i.map((({scale:t})=>t)),n=v.create({spatialReference:s,size:ht,scales:r,origin:e});return t.set("tileInfo",n),void(this._srcResolutions=i.map((({resolution:t})=>({x:t,y:t}))))}const{scales:e,srcResolutions:i,isCustomTilingScheme:r}=wt(this.layer.serviceRasterInfo,s,{tileSize:ht,alignGlobalDatasetWithAGOL:!0,limitToSrcResolution:!1}),n=v.create({spatialReference:s,size:ht,scales:e}),a=0===n.origin.x,{xmin:o,ymax:h}=t.fullExtent;(a||r&&n.origin.x>o)&&(n.origin=new P({x:o,y:h,spatialReference:s})),this._isCustomTilingScheme=r,t.set("tileInfo",n),this._srcResolutions=i??[]}_canUseLayerLODs(){const{layer:t,layerView:s}=this;if("Map"!==t.raster.tileType)return!1;const{lods:e}=t.tileInfo,i=s.view.constraints?.effectiveLODs;return i?.length===e.length&&i.every((({scale:t},s)=>Math.abs(t-e[s].scale)<.001))}_computeFetchConcurrency(){const{blockBoundary:t}=this.layer.serviceRasterInfo.storageInfo,s=t[t.length-1];return(s.maxCol-s.minCol+1)*(s.maxRow-s.minRow+1)>64?2:10}async _enqueueTileFetch(t,s){if(!this._fetchQueue.has(t.key.id)){try{const s=await this._fetchQueue.push(t.key),e=this._getBandIds();let i=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&0===this._fetchQueue.length){i=!1;try{await this._redrawImage(this._abortController?.signal)}catch(t){T(t)&&S.getLogger(this).error(t)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&"rasterVF"!==this.type||this.layerView.hasTilingEffects||null!=this._symbolizerParams||this._updateSymbolizerParams();const r=this._tileInfoView.getTileCoords(fe,t.key),n=this._tileInfoView.getTileResolution(t.key);await this.updateTileSource(t,{source:s,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:i,bandIds:e,coords:r,resolution:n}),t.once("attach",(()=>this.layerView.requestUpdate())),this.container.addChild(t)}catch(t){T(t)||S.getLogger(this).error(t)}this.layerView.requestUpdate()}}async _redrawImage(t){if(0===this.container.children.length)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(t):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const s=this.container.children.map((async t=>this.updateTileSymbolizerParameters(t,{local:this._symbolizerParams,global:this._globalSymbolizerParams})));await Promise.allSettled(s),this.container.requestRender()}async _updateGlobalSymbolizerParams(t){const s={srcResolution:this._srcResolutions[this.previousLOD.level],registryId:this._blockCacheRegistryId,signal:t},e=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,s);if(!e?.pixelBlock)return;const{resolution:i}=this.previousLOD,r=this._getBandIds(),n=this.layer.symbolizer.generateWebGLParameters({pixelBlock:e.pixelBlock.extractBands(r),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:i,y:i},bandIds:r});!this.canUseWebGLForProcessing()&&n&&"stretch"===n.type&&this.layer.renderer&&"raster-stretch"===this.layer.renderer.type&&(n.factor=n.factor.map((t=>255*t)),n.outMin=Math.round(255*n.outMin),n.outMax=Math.round(255*n.outMax)),this._globalSymbolizerParams=n}_updateSymbolizerParams(){const{resolution:t}=this.previousLOD,s=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:s})}_updateBlockCacheRegistry(t=!1){const{layer:s,layerView:e}=this,{raster:i}=s,{multidimensionalDefinition:r}=s.normalizeRasterFetchOptions({multidimensionalDefinition:s.multidimensionalDefinition,timeExtent:e.timeExtent}),n=i.rasterInfo.multidimensionalInfo?i.getSliceIndex(r):null,a=_t(i.rasterId,n);if(a!==this._blockCacheRegistryUrl){if(null!=this._blockCacheRegistryUrl&&bt(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=xt(a,i.rasterInfo),t){const{view:t}=e,s=this._tileInfoView.getClosestInfoForScale(t.scale),r=this._srcResolutions[s.level];gt(a,this._blockCacheRegistryId,t.extent,t.resolution,r,i.ioConfig.sampling)}this._blockCacheRegistryUrl=a}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const t=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh((s=>t.push(this._enqueueTileFetch(s)))),await this._updatingHandles.addPromise(Promise.allSettled(t))}};l([d()],me.prototype,"_globalUpdateRequested",void 0),l([d()],me.prototype,"attached",void 0),l([d()],me.prototype,"container",void 0),l([d()],me.prototype,"layer",void 0),l([d()],me.prototype,"layerView",void 0),l([d()],me.prototype,"type",void 0),l([d()],me.prototype,"useWebGLForProcessing",null),l([d()],me.prototype,"useProgressiveUpdate",null),l([d()],me.prototype,"timeExtent",void 0),l([d()],me.prototype,"updating",null),me=l([p("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],me);let ge=class extends me{constructor(){super(...arguments),this.type="raster"}attach(){super.attach(),this.container=new pe(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){const{symbolizer:t}=this.layer,s=t.lookup?.colormapLut?.indexedColormap,e=s&&s.length>this._maxIndexedColormapSize;return this.useWebGLForProcessing&&t.canRenderInWebGL&&!e&&!("majority"===this.layer.interpolation&&E(this.layer))}fetchTile(t,s){return this.layer.fetchTile(t.level,t.row,t.col,s)}updateRasterFunctionParameters(){const{clips:t,view:s}=this.layerView;null!=this._geometry&&t.remove(this._geometry);const{raster:e,type:i}=this.layer;if("Function"===e.datasetFormat){const i=e.getClippingGeometry(s.spatialReference);if(i){const s=new D({geometry:i});t.add(s),this._geometry=s}}const{container:r}=this;if("Function"!==e.datasetFormat||"wcs"===i)return r.rasterFunctionChain=null,r.children.forEach((t=>{const{bitmap:s}=t;s&&(s.suspended=!0,s.processed=!1,s.projected&&(s.invalidateTexture(),s.rasterTexture=null))})),void(this._rasterFunctionState="na");const n=this._rasterFunctionState,{rasterFunction:a,primaryRasters:o}=e,h=a.supportsGPU&&(!o||o.rasters.length<=1),u=h?a.flatWebGLFunctionChain:null,{renderer:c}=this.layer,l=!h||!u?.functions.length||"raster-stretch"===c?.type&&c.dynamicRangeAdjustment||!this.canUseWebGLForProcessing();r.rasterFunctionChain=l?null:u;const d=null==a?"na":r.rasterFunctionChain?"gpu":"cpu";r.children.forEach((t=>{const{bitmap:s}=t;s&&(s.suspended=n!==d,s.processed=!1,s.processedTexture=null)})),this._rasterFunctionState=d}async updateTileSource(t,s){const e=this._getBandIds(),i=this._getLayerInterpolation(),r=this.canUseWebGLForProcessing(),{source:n,globalSymbolizerParams:a,suspended:o,coords:h,resolution:u}=s,c=this.layerView.hasTilingEffects?a:s.symbolizerParams,{bitmap:l}=t;if([l.x,l.y]=h,l.resolution=u,null!=n?.pixelBlock){const t={extent:n.extent,pixelBlock:n.pixelBlock,srcPixelSize:n.srcTilePixelSize};if(l.rawPixelData=t,r)l.source=n.pixelBlock,l.isRendereredSource=!1;else{const s=await this.layer.applyRenderer(t,"stretch"===a?.type?a:void 0);l.source=s,l.isRendereredSource=!0}l.symbolizerParameters=r?c:null,l.transformGrid=r?n.transformGrid:null}else{const t=this.createEmptyTilePixelBlock();l.source=t,l.symbolizerParameters=r?c:null,l.transformGrid=null}l.bandIds=r?e:null,l.width=this._tileInfoView.tileInfo.size[0],l.height=this._tileInfoView.tileInfo.size[1],l.interpolation=i,l.suspended=o,l.invalidateTexture()}async updateTileSymbolizerParameters(t,s){const{local:e,global:i}=s,r=this._getBandIds(),n=this._getLayerInterpolation(),a=this.canUseWebGLForProcessing(),{bitmap:o}=t,{rawPixelData:h}=o;a||null==h?(o.isRendereredSource&&null!=h&&(o.source=h.pixelBlock),o.isRendereredSource=!1):(o.source=await this.layer.applyRenderer(h,"stretch"===i?.type?i:void 0),o.isRendereredSource=!0),o.symbolizerParameters=a?this.layerView.hasTilingEffects?i:e:null,o.bandIds=a?r:null,o.interpolation=n,o.suspended=!1}_getLayerInterpolation(){const{interpolation:t,renderer:s}=this.layer;if(!s)return t;const e=s.type;return"raster-colormap"===e||"unique-value"===e||"class-breaks"===e?"nearest":"raster-stretch"===s.type&&null!=s.colorRamp?"bilinear"===t||"cubic"===t?"bilinear":"nearest":t}};l([d()],ge.prototype,"container",void 0),l([d()],ge.prototype,"layer",void 0),l([d()],ge.prototype,"type",void 0),ge=l([p("esri.views.2d.layers.imagery.ImageryTileView2D")],ge);const be=ge;class xe extends lt{constructor(t,s,e,i,r,n,a=null){super(t,s,e,i,r,n),this.tileData=new V(a),this.tileData.coordScale=[r,n],this.tileData.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(t){this.tileData.stencilRef=t}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:s(),tileMat3:s()}}setTransform(t){super.setTransform(t);const s=this.resolution/(t.resolution*t.pixelRatio),e=this.transforms.tileMat3,[i,r]=this.tileData.offset,n=[this.x+i*this.resolution,this.y-r*this.resolution],[a,h]=t.toScreenNoRotation([0,0],n),{symbolTileSize:u}=this.tileData.symbolizerParameters,c=Math.round((this.width-this.tileData.offset[0])/u)*u,l=Math.round((this.height-this.tileData.offset[1])/u)*u,d=c/this.rangeX*s,p=l/this.rangeY*s;R(e,d,0,0,0,p,0,a,h,1),o(this.transforms.displayViewScreenMat3,t.displayViewMat3,e),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class _e extends pt{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(t){const s=this._tileInfoView.getTileBounds(u(),t),[e,i]=this._tileInfoView.tileInfo.size,r=this._tileInfoView.getTileResolution(t.level);return new xe(t,r,s[0],s[3],e,i)}prepareRenderPasses(t){const s=t.registerRenderPass({name:"imagery (vf tile)",brushes:[O],target:()=>this.children.map((t=>t.tileData)),drawPhase:B.MAP});return[...super.prepareRenderPasses(t),s]}doRender(t){this.visible&&t.drawPhase===B.MAP&&this.symbolTypes.forEach((s=>{t.renderPass=s,super.doRender(t)}))}}let we=class extends me{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(t,s){s={...s,interpolation:"nearest",requestProjectedLocalDirections:!0};const e=await this.layer.fetchTile(t.level,t.row,t.col,s);return"vector-magdir"===this.layer.serviceRasterInfo.dataType&&e?.pixelBlock&&(e.pixelBlock=await this.layer.convertVectorFieldData(e.pixelBlock,s)),e}updateTileSource(t,s){const e=s.symbolizerParams,{tileData:i}=t;i.key=t.key,i.width=this._tileInfoView.tileInfo.size[0],i.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:r}=e,{source:n}=s;if(i.offset=this._getTileSymbolOffset(i.key,r),null!=n?.pixelBlock){const t={extent:n.extent,pixelBlock:n.pixelBlock};i.rawPixelData=t,i.symbolizerParameters=e,i.source=this._sampleVectorFieldData(n.pixelBlock,e,i.offset)}else{const t=[Math.round((this._tileInfoView.tileInfo.size[0]-i.offset[0])/r),Math.round((this._tileInfoView.tileInfo.size[1]-i.offset[1])/r)],s=this.createEmptyTilePixelBlock(t);i.source=s,i.symbolizerParameters=e}return i.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(t,s){const e=s.local,{symbolTileSize:i}=e,{tileData:r}=t;r.offset=this._getTileSymbolOffset(r.key,i);const n=r.symbolizerParameters.symbolTileSize;r.symbolizerParameters=e;const a=r.rawPixelData?.pixelBlock;return null!=a&&n!==i&&(r.source=this._sampleVectorFieldData(a,r.symbolizerParameters,r.offset)),Promise.resolve()}attach(){super.attach(),this.container=new _e(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=M((()=>this.layer.renderer),(t=>this._updateSymbolType(t)))}detach(){super.detach(),this.container.removeAllChildren(),this._handle?.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(t,s){const e=t.col*this._tileInfoView.tileInfo.size[0]%s,i=t.row*this._tileInfoView.tileInfo.size[1]%s;return[e>s/2?s-e:-e,i>s/2?s-i:-i]}_sampleVectorFieldData(t,s,e){const{symbolTileSize:i}=s;return mt(t,"vector-uv",i,e)}_updateSymbolType(t){"vector-field"===t.type&&(this.container.symbolTypes="wind-barb"===t.style?["scalar","triangle"]:"simple-scalar"===t.style?["scalar"]:["triangle"])}};l([d()],we.prototype,"container",void 0),l([d()],we.prototype,"layer",void 0),l([d()],we.prototype,"type",void 0),we=l([p("esri.views.2d.layers.imagery.VectorFieldTileView2D")],we);const ye=we;const ve=t=>{let s=class extends t{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return vt(this.layer.serviceRasterInfo,this.view.spatialReference)}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){return Pt(this.layer.fullExtent,this.view.spatialReference,!0)}supportsSpatialReference(t){return!!vt(this.layer.serviceRasterInfo,t)}async fetchPopupFeaturesAtLocation(t,s){const{layer:e}=this;if(!t)throw new F("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:e});const{popupEnabled:i}=e,r=Tt(e,s);if(!i||null==r)throw new F("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:i,popupTemplate:r});const n=[],{value:a,magdirValue:o,processedValue:h}=await e.identify(t,{timeExtent:this.timeExtent,signal:s?.signal});let u="";if(a&&a.length){u="imagery-tile"===e.type&&e.hasStandardTime()&&null!=a[0]?a.map((t=>e.getStandardTimeValue(t))).join(", "):a.join(", ");const t={ObjectId:0},s="Raster.ServicePixelValue";t[s]="imagery-tile"===e.type&&"Function"===e.raster.datasetFormat?h?.join(", "):u,t[s+".Raw"]=u;const i=e.serviceRasterInfo.attributeTable;if(null!=i){const{fields:s,features:e}=i,r=s.find((({name:t})=>"value"===t.toLowerCase())),n=r?e.find((t=>String(t.attributes[r.name])===u)):null;if(n)for(const s in n.attributes)if(n.attributes.hasOwnProperty(s)){t[this._rasterFieldPrefix+s]=n.attributes[s]}}const r=e.serviceRasterInfo.dataType;"vector-magdir"!==r&&"vector-uv"!==r||(t["Raster.Magnitude"]=o?.[0],t["Raster.Direction"]=o?.[1]);const c=new z(this.fullExtent.clone(),null,t);c.layer=e,c.sourceLayer=c.layer,n.push(c)}return n}};return l([d()],s.prototype,"layer",void 0),l([d(j)],s.prototype,"timeExtent",void 0),l([d()],s.prototype,"view",void 0),l([d()],s.prototype,"fullExtent",null),l([d()],s.prototype,"tileInfo",void 0),l([d({readOnly:!0})],s.prototype,"hasTilingEffects",null),l([d()],s.prototype,"datumTransformation",null),s=l([p("esri.views.layers.ImageryTileLayerView")],s),s};let Pe=class extends(ve(St(G(L)))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(t){this._useWebGLForProcessing=t,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=t)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(t){this._useProgressiveUpdate=t,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=t)}get displayParameters(){const{layer:t}=this,s=this._get("displayParameters");return t.renderer?{bandIds:t.bandIds,renderer:t.renderer,interpolation:t.interpolation,multidimensionalDefinition:t.multidimensionalDefinition,rasterFunction:"imagery-tile"===t.type?t.rasterFunction:null}:s}update(t){this.subview?.update(t),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([M((()=>this.displayParameters),((t,s)=>{const e=t.interpolation!==s?.interpolation&&("majority"===t.interpolation||"majority"===s?.interpolation)&&E(this.layer),i=t.renderer!==s?.renderer&&this._getSubviewType(s?.renderer)!==this._getSubviewType(t.renderer);i&&this._updateSubview();const r=t.multidimensionalDefinition!==s?.multidimensionalDefinition,n=t.rasterFunction!==s?.rasterFunction,a=n&&!this._useWebGLForProcessing,o=r||e||i||a;this.subview.redrawOrRefetch({refetch:o,reprocess:n}).catch((t=>{T(t)||S.getLogger(this).error(t)})),this.notifyChange("updating")})),M((()=>this.layer.multidimensionalSubset??null),((t,s)=>{const{multidimensionalDefinition:e}=this.layer;null!=e&&U(e,t)!==U(e,s)&&(this.subview.redrawOrRefetch({refetch:!0}).catch((t=>{T(t)||S.getLogger(this).error(t)})),this.notifyChange("updating"))}),I),M((()=>this.timeExtent),(()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch((t=>{T(t)||S.getLogger(this).error(t)}))}),C)])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){const{renderer:t}=this.layer;if(!t)return;const s=this._getSubviewType(t);if(this.subview){if(this.subview.type===s)return void this._attachSubview(this.subview);this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}const{layer:e}=this;let i;if(i="rasterVF"===s?new ye({layer:e,layerView:this}):"flow"===s?new A({layer:e,layerView:this}):new be({layer:e,layerView:this}),"useWebGLForProcessing"in i&&(i.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in i&&(i.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in i){const{subview:t}=this;i.previousLOD=t&&"previousLOD"in t?t.previousLOD:null}this._attachSubview(i),this.subview=i,this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t?.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}_getSubviewType(t){const s=t?.type;return"vector-field"===s?"rasterVF":"flow"===s?"flow":"raster"}};l([d()],Pe.prototype,"subview",void 0),l([d()],Pe.prototype,"useWebGLForProcessing",null),l([d()],Pe.prototype,"useProgressiveUpdate",null),l([d({readOnly:!0})],Pe.prototype,"displayParameters",null),Pe=l([p("esri.views.2d.layers.ImageryTileLayerView2D")],Pe);const Te=Pe;export default Te;
//# sourceMappingURL=p-6c1d06e6.js.map