import{a0 as t,jM as e,n,hc as s,e0 as i,l7 as o,eF as a,l8 as l,s as r,bi as c,e6 as u,kf as h,aa as f,af as w,P as m,l9 as p,c3 as y,c2 as v,la as d,l4 as g}from"./p-aad64c9f.js";import"./p-2af77f97.js";const q=()=>n.getLogger("esri.layers.support.ElevationSampler");class x{queryElevation(t){return E(t.clone(),this)}on(){return s()}projectIfRequired(t,e){return $(t,e)}}class T extends x{get spatialReference(){return this.extent.spatialReference}constructor(t,n,s){super(),this.tile=t,this.noDataValue=s;const o=t.tile.extent;this.extent=e(o,n.spatialReference),this.extent.zmin=t.zmin,this.extent.zmax=t.zmax,this._aaExtent=o;const a=i(n.spatialReference),l=n.lodAt(t.tile.level).resolution*a;this.demResolution={min:l,max:l}}contains(t){const e=this.projectIfRequired(t,this.spatialReference);return null!=e&&this.containsAt(e.x,e.y)}containsAt(t,e){return o(this._aaExtent,t,e)}elevationAt(t,e){if(!this.containsAt(t,e)){const n=this.extent,s=`${n.xmin}, ${n.ymin}, ${n.xmax}, ${n.ymax}`;return q().warn("#elevationAt()",`Point used to sample elevation (${t}, ${e}) is outside of the sampler extent (${s})`),this.noDataValue}return this.tile.sample(t,e)??this.noDataValue}}class M extends x{get spatialReference(){return this.extent.spatialReference}constructor(t,n,s){let i;super(),"number"==typeof n?(this.noDataValue=n,i=null):(i=n,this.noDataValue=s),this.samplers=i?t.map((t=>new T(t,i,this.noDataValue))):t;const o=this.samplers[0];if(o){this.extent=o.extent.clone();const{min:t,max:e}=o.demResolution;this.demResolution={min:t,max:e};for(let t=1;t<this.samplers.length;t++){const e=this.samplers[t];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max)}}else this.extent=e(a(),i.spatialReference),this.demResolution={min:0,max:0}}elevationAt(t,e){let n,s=!1;for(const i of this.samplers)if(i.containsAt(t,e)&&(s=!0,n=i.elevationAt(t,e),n!==i.noDataValue))return n;return null!=n?n:(s||q().warn("#elevationAt()",`Point used to sample elevation (${t}, ${e}) is outside of the sampler`),this.noDataValue)}}function E(t,e){const n=$(t,e.spatialReference);if(!n)return null;switch(t.type){case"point":A(t,n,e);break;case"polyline":I(t,n,e);break;case"multipoint":C(t,n,e)}return t}function $(t,e){if(null==t)return null;const n=t.spatialReference;if(n.equals(e))return t;const s=l(t,e);return s||q().error(`Cannot project geometry spatial reference (wkid:${n.wkid}) to elevation sampler spatial reference (wkid:${e.wkid})`),s}function A(t,e,n){t.z=n.elevationAt(e.x,e.y)}function I(t,e,n){b.spatialReference=e.spatialReference;const s=t.hasM&&!t.hasZ;for(let i=0;i<t.paths.length;i++){const o=t.paths[i],a=e.paths[i];for(let t=0;t<o.length;t++){const e=o[t],i=a[t];b.x=i[0],b.y=i[1],s&&(e[3]=e[2]),e[2]=n.elevationAt(b.x,b.y)}}t.hasZ=!0}function C(t,e,n){b.spatialReference=e.spatialReference;const s=t.hasM&&!t.hasZ;for(let i=0;i<t.points.length;i++){const o=t.points[i],a=e.points[i];b.x=a[0],b.y=a[1],s&&(o[3]=o[2]),o[2]=n.elevationAt(b.x,b.y)}t.hasZ=!0}const b=new t;class D{constructor(t,e){this.data=t,this.safeWidth=.99999999*(t.width-1),this.dx=(t.width-1)/(e[2]-e[0]),this.dy=(t.width-1)/(e[3]-e[1]),this.x0=e[0],this.y1=e[3]}}class F{constructor(t,e=null){if(this.tile=t,null!=e&&null!=t){const n=t.extent;this._samplerData=new D(e,n)}}get zmin(){return null!=this._samplerData?this._samplerData.data.minValue:0}get zmax(){return null!=this._samplerData?this._samplerData.data.maxValue:0}get hasNoDataValues(){return!!this._samplerData?.data.hasNoDataValues}sample(t,e){if(null==this._samplerData)return;const{safeWidth:n,data:s,dx:i,dy:o,y1:a,x0:l}=this._samplerData,{width:r,values:c,noDataValue:u}=s,h=R(o*(a-e),0,n),f=R(i*(t-l),0,n),w=Math.floor(h),m=Math.floor(f),p=w*r+m,y=p+r,v=c[p],d=c[y],g=c[p+1],q=c[y+1];if(v!==u&&d!==u&&g!==u&&q!==u){const t=f-m,e=v+(g-v)*t;return e+(d+(q-d)*t-e)*(h-w)}}}function R(t,e,n){return t<e?e:t>n?n:t}class _{async queryAll(t,e,n){if(!(t=n?.ignoreInvisibleLayers?t.filter((t=>t.visible)):t.slice()).length)throw new r("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const s=k.fromGeometry(e);let i=!1;n?.returnSampleInfo||(i=!0);const o={...V,...n,returnSampleInfo:!0},a=await this.query(t[t.length-1],s,o),l=await this._queryAllContinue(t,a,o);return l.geometry=l.geometry.export(),i&&delete l.sampleInfo,l}async query(t,e,n){if(!t)throw new r("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!e||!(e instanceof k)&&"point"!==e.type&&"multipoint"!==e.type&&"polyline"!==e.type)throw new r("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const s={...V,...n},i=new j(t,e.spatialReference,s),o=s.signal;return await t.load({signal:o}),await Z(i,e,o),await this._selectTiles(i,o),await W(i,o),H(i),K(i,o)}async createSampler(t,e,n){if(!t)throw new r("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!e||"extent"!==e.type)throw new r("elevation-query:invalid-extent","Invalid or undefined extent");const s={...V,...n};return this._createSampler(t,e,s)}async createSamplerAll(t,e,n){if(!(t=n?.ignoreInvisibleLayers?t.filter((t=>t.visible)):t.slice()).length)throw new r("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!e||"extent"!==e.type)throw new r("elevation-query:invalid-extent","Invalid or undefined extent");const s={...V,...n,returnSampleInfo:!0},i=await this._createSampler(t[t.length-1],e,s);return this._createSamplerAllContinue(t,e,i,s)}async _createSampler(t,e,n,s){const i=n.signal;await t.load({signal:i});const o=e.spatialReference,a=t.tileInfo.spatialReference;o.equals(a)||(await c([{source:o,dest:a}],{signal:i}),e=u(e,a));const l=new L(t,e,n,s);return await this._selectTiles(l,i),await W(l,i),new M(l.elevationTiles,l.layer.tileInfo,l.options.noDataValue)}async _createSamplerAllContinue(t,e,n,s){if(t.pop(),!t.length)return n;const i=n.samplers.filter((t=>!t.tile.hasNoDataValues)).map((t=>h(t.extent))),o=await this._createSampler(t[t.length-1],e,s,i);if(0===o.samplers.length)return n;const a=n.samplers.concat(o.samplers),l=new M(a,s.noDataValue);return this._createSamplerAllContinue(t,e,l,s)}async _queryAllContinue(t,e,n){const s=t.pop(),i=e.geometry.coordinates,o=e.sampleInfo;f(o);const a=[],l=[];for(let e=0;e<i.length;e++){const n=o[e];n.demResolution>=0?n.source||(n.source=s):t.length&&(a.push(i[e]),l.push(e))}if(!t.length||0===a.length)return e;const r=e.geometry.clone(a),c=await this.query(t[t.length-1],r,n),u=c.sampleInfo;if(!u)throw new Error("no sampleInfo");return l.forEach(((t,e)=>{i[t].z=c.geometry.coordinates[e].z,o[t].demResolution=u[e].demResolution})),this._queryAllContinue(t,e,n)}async _selectTiles(t,e){"geometry"===t.type&&z(t);const n=t.options.demResolution;if("number"==typeof n)N(t,n);else if("finest-contiguous"===n)await this._selectTilesFinestContiguous(t,e);else{if("auto"!==n)throw new r("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${n}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(t,e)}}async _selectTilesFinestContiguous(t,e){const{tileInfo:n,tilemapCache:s}=t.layer,i=O(n,s,t.options.minDemResolution);await this._selectTilesFinestContiguousAt(t,i,e)}async _selectTilesFinestContiguousAt(t,e,n){const s=t.layer;if(t.selectTilesAtLOD(e),e<0)return;const i=s.tilemapCache,o=t.getTilesToFetch();try{if(i&&!Y(i))await w(Promise.all(o.map((t=>i.fetchAvailability(t.level,t.row,t.col,{signal:n})))),n);else if(await W(t,n),!t.allElevationTilesFetched())throw t.clearElevationTiles(),new r("elevation-query:has-unavailable-tiles")}catch(s){m(s),await this._selectTilesFinestContiguousAt(t,e-1,n)}}async _selectTilesAuto(t,e){Q(t),B(t);const n=t.layer.tilemapCache;if(!n||Y(n))return this._selectTilesAutoPrefetchUpsample(t,e);const s=t.getTilesToFetch(),i={},o=s.map((async t=>{const s=new g(null,0,0,0,a()),o=await p(n.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:e}));!1!==o.ok?null!=t.id&&(i[t.id]=s):m(o.error)}));await w(Promise.all(o),e),t.remapTiles(i)}async _selectTilesAutoPrefetchUpsample(t,e){const n=t.layer.tileInfo;await W(t,e);let s=!1;t.forEachTileToFetch(((t,e)=>{n.upsampleTile(t)?s=!0:e()})),s&&await this._selectTilesAutoPrefetchUpsample(t,e)}}class k{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(t){const e=new k;return e.geometry=this.geometry,e.spatialReference=this.spatialReference,e.coordinates=t||this.coordinates.map((t=>t.clone())),e._exporter=this._exporter,e}async project(t,e){if(this.spatialReference.equals(t))return this.clone();await c([{source:this.spatialReference,dest:t}],{signal:e});const n=new y({spatialReference:this.spatialReference,points:this.coordinates.map((t=>[t.x,t.y]))}),s=u(n,t);if(!s)return null;const i=this.coordinates.map(((t,e)=>{const n=t.clone(),i=s.points[e];return n.x=i[0],n.y=i[1],n})),o=this.clone(i);return o.spatialReference=t,o}static fromGeometry(e){const n=new k;if(n.geometry=e,n.spatialReference=e.spatialReference,e instanceof k)n.coordinates=e.coordinates.map((t=>t.clone())),n._exporter=(t,n)=>{const s=e.clone(t);return s.spatialReference=n,s};else switch(e.type){case"point":{const s=e,{hasZ:i,hasM:o}=s;n.coordinates=i&&o?[new S(s.x,s.y,s.z,s.m)]:i?[new S(s.x,s.y,s.z)]:o?[new S(s.x,s.y,null,s.m)]:[new S(s.x,s.y)],n._exporter=(n,s)=>e.hasM?new t(n[0].x,n[0].y,n[0].z,n[0].m,s):new t(n[0].x,n[0].y,n[0].z,s);break}case"multipoint":{const t=e,{hasZ:s,hasM:i}=t;n.coordinates=s&&i?t.points.map((t=>new S(t[0],t[1],t[2],t[3]))):s?t.points.map((t=>new S(t[0],t[1],t[2]))):i?t.points.map((t=>new S(t[0],t[1],null,t[2]))):t.points.map((t=>new S(t[0],t[1]))),n._exporter=(t,n)=>e.hasM?new y({points:t.map((t=>[t.x,t.y,t.z,t.m])),hasZ:!0,hasM:!0,spatialReference:n}):new y(t.map((t=>[t.x,t.y,t.z])),n);break}case"polyline":{const t=e,s=[],i=[],{hasZ:o,hasM:a}=e;let l=0;for(const e of t.paths)if(i.push([l,l+e.length]),l+=e.length,o&&a)for(const t of e)s.push(new S(t[0],t[1],t[2],t[3]));else if(o)for(const t of e)s.push(new S(t[0],t[1],t[2]));else if(a)for(const t of e)s.push(new S(t[0],t[1],null,t[2]));else for(const t of e)s.push(new S(t[0],t[1]));n.coordinates=s,n._exporter=(t,n)=>{const s=e.hasM?t.map((t=>[t.x,t.y,t.z??0,t.m??0])):t.map((t=>[t.x,t.y,t.z??0])),o=i.map((t=>s.slice(t[0],t[1])));return new v({paths:o,hasM:e.hasM,hasZ:!0,spatialReference:n})};break}}return n}}class S{constructor(t,e,n=null,s=null,i=null,o=null){this.x=t,this.y=e,this.z=n,this.m=s,this.tile=i,this.elevationTile=o}clone(){return new S(this.x,this.y,this.z,this.m)}}class P{constructor(t,e){this.layer=t,this.options=e}}class j extends P{constructor(t,e,n){super(t,n),this.outSpatialReference=e,this.type="geometry"}selectTilesAtLOD(t){if(t<0)this.geometry.coordinates.forEach((t=>t.tile=null));else{const{tileInfo:e,tilemapCache:n}=this.layer,s=U(e,n)[t].level;this.geometry.coordinates.forEach((t=>t.tile=e.tileAt(s,t.x,t.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((t=>!t.elevationTile))}clearElevationTiles(){for(const t of this.geometry.coordinates)t.elevationTile!==this.outsideExtentTile&&(t.elevationTile=null)}populateElevationTiles(t){for(const e of this.geometry.coordinates)!e.elevationTile&&e.tile?.id&&(e.elevationTile=t[e.tile.id])}remapTiles(t){for(const e of this.geometry.coordinates){const n=e.tile?.id;e.tile=n?t[n]:null}}getTilesToFetch(){const t={},e=[];for(const n of this.geometry.coordinates){const s=n.tile;if(!s)continue;const i=n.tile?.id;n.elevationTile||!i||t[i]||(t[i]=s,e.push(s))}return e}forEachTileToFetch(t){for(const e of this.geometry.coordinates)e.tile&&!e.elevationTile&&t(e.tile,(()=>{e.tile=null}))}}class L extends P{constructor(t,e,n,s){super(t,n),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=e.clone().intersection(t.fullExtent),this.maskExtents=s}selectTilesAtLOD(t,e){const n=this._maximumLodForRequests(e),s=Math.min(n,t);s<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(s)}_maximumLodForRequests(t){const{tileInfo:e,tilemapCache:n}=this.layer,s=U(e,n);if(!t)return s.length-1;const i=this.extent;if(null==i)return-1;for(let n=s.length-1;n>=0;n--){const o=s[n],a=o.resolution*e.size[0],l=o.resolution*e.size[1];if(Math.ceil(i.width/a)*Math.ceil(i.height/l)<=t)return n}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(t){for(const e of this._candidateTiles){const n=e.id&&t[e.id];n&&(this._fetchedCandidates.add(e),this.elevationTiles.push(n))}}remapTiles(t){this._candidateTiles=J(this._candidateTiles.map((e=>t[e.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(t,e){const n=this._candidateTiles;this._candidateTiles=[],n.forEach((n=>{if(this._fetchedCandidates.has(n))return void(e&&e(n));let s=!1;t(n,(()=>s=!0)),s?e&&e(n):this._candidateTiles.push(n)})),this._candidateTiles=J(this._candidateTiles,e)}_selectCandidateTilesCoveringExtentAt(t){this._candidateTiles.length=0;const e=this.extent;if(null==e)return;const{tileInfo:n,tilemapCache:s}=this.layer,i=U(n,s)[t],o=n.tileAt(i.level,e.xmin,e.ymin),a=o.extent;if(null==a)return;const l=i.resolution*n.size[0],r=i.resolution*n.size[1],c=Math.ceil((e.xmax-a[0])/l),u=Math.ceil((e.ymax-a[1])/r);for(let t=0;t<u;t++)for(let e=0;e<c;e++){const s=new g(null,o.level,o.row-t,o.col+e);n.updateTileInfo(s),this._tileIsMasked(s)||this._candidateTiles.push(s)}}_tileIsMasked(t){return!!this.maskExtents&&this.maskExtents.some((e=>t.extent&&d(e,t.extent)))}}function O(t,e,n=0){const s=U(t,e);let o=s.length-1;if(n>0){const e=n/i(t.spatialReference),a=s.findIndex((t=>t.resolution<e));0===a?o=0:a>0&&(o=a-1)}return o}const V={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};async function Z(t,e,n){let s;const i=t.layer.tileInfo.spatialReference;if(e instanceof k?s=await e.project(i,n):(await c([{source:e.spatialReference,dest:i}],{signal:n}),s=u(e,i)),!s)throw new r("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${e.spatialReference.wkid}' on an elevation service in '${i.wkid}'`);t.geometry=k.fromGeometry(s)}function z(t){if(null==t.layer.fullExtent)return;const e=new F(null);e.sample=()=>t.options.noDataValue,t.outsideExtentTile=e;const n=t.layer.fullExtent;t.geometry.coordinates.forEach((t=>{const s=t.x,i=t.y;(s<n.xmin||s>n.xmax||i<n.ymin||i>n.ymax)&&(t.elevationTile=e)}))}function G(t,e){const{tileInfo:n,tilemapCache:s}=t.layer,o=e/i(n.spatialReference),a=U(n,s);let l=a[0],r=0;for(let t=1;t<a.length;t++){const e=a[t];Math.abs(e.resolution-o)<Math.abs(l.resolution-o)&&(l=e,r=t)}return r}function N(t,e){const n=G(t,e);t.selectTilesAtLOD(n)}function Q(t){const{tileInfo:e,tilemapCache:n}=t.layer,s=O(e,n,t.options.minDemResolution);t.selectTilesAtLOD(s,t.options.maximumAutoTileRequests)}function U(t,e){const n=t.lods;if(Y(e)){const{effectiveMinLOD:t,effectiveMaxLOD:s}=e;return n.filter((e=>e.level>=t&&e.level<=s))}return n}async function W(t,e){const n=t.getTilesToFetch(),s={},i=t.options.cache,o=t.options.noDataValue,a=n.map((async n=>{if(null==n.id)return;const a=`${t.layer.uid}:${n.id}:${o}`,l=null!=i?i.get(a):null,r=null!=l?l:await t.layer.fetchTile(n.level,n.row,n.col,{noDataValue:o,signal:e});null!=i&&i.put(a,r),s[n.id]=new F(n,r)}));await w(Promise.allSettled(a),e),t.populateElevationTiles(s)}function B(t){const e=t.layer.tileInfo;let n=0;const s={},i=t=>{null!=t.id&&(t.id in s?s[t.id]++:(s[t.id]=1,n++))},o=t=>{if(null==t.id)return;const e=s[t.id];1===e?(delete s[t.id],n--):s[t.id]=e-1};t.forEachTileToFetch(i,o);let a=!0;for(;a&&(a=!1,t.forEachTileToFetch((s=>{n<=t.options.maximumAutoTileRequests||(o(s),e.upsampleTile(s)&&(a=!0),i(s))}),o),a););}function H(t){t.geometry.coordinates.forEach((e=>{const n=e.elevationTile;let s=t.options.noDataValue;if(n){const t=n.sample(e.x,e.y);null!=t?s=t:e.elevationTile=null}e.z=s}))}function J(t,e){const n={},s=[];for(const i of t){const t=i.id;t&&!n[t]?(n[t]=i,s.push(i)):e&&e(i)}const i=s.sort(((t,e)=>t.level-e.level));return i.filter(((t,n)=>{for(let s=0;s<n;s++){const n=i[s].extent;if(n&&t.extent&&d(n,t.extent))return e&&e(t),!1}return!0}))}async function K(t,e){const n=await t.geometry.project(t.outSpatialReference,e);f(n);const s={geometry:n.export(),noDataValue:t.options.noDataValue};return t.options.returnSampleInfo&&(s.sampleInfo=X(t)),t.geometry.coordinates.forEach((t=>{t.tile=null,t.elevationTile=null})),s}function X(t){const e=t.layer.tileInfo,n=i(e.spatialReference);return t.geometry.coordinates.map((s=>{let i=-1;if(s.elevationTile&&s.elevationTile!==t.outsideExtentTile){i=e.lodAt(s.elevationTile.tile.level).resolution*n}return{demResolution:i}}))}function Y(t){return null!=t?.tileInfo}export{_ as ElevationQuery,k as GeometryDescriptor,O as getFinestLodIndex};
//# sourceMappingURL=p-347cd3c5.js.map