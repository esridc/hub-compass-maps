import{kM as i,kN as t,o4 as s,kU as e,kV as n,kW as o,kX as a,od as r,iP as h,az as p,w as l,iM as d,P as c,s as f,oC as u,pB as y,n as m,po as w,pq as b,pt as M,hP as j,r as g,p as D,hx as v,b7 as S,k_ as _,q as k,hp as L,I as T,ps as G}from"./p-aad64c9f.js";import{u as A,c as C,E as N,F as R,R as x}from"./p-e58b8b4b.js";import{F as I}from"./p-08eca8f5.js";import"./p-2af77f97.js";import"./p-875cbb57.js";import"./p-da522976.js";import"./p-aff89b86.js";import"./p-d492d39b.js";import"./p-f590152b.js";import"./p-a1bf330d.js";import"./p-339b5e24.js";import"./p-56b85bad.js";import"./p-5ae33da2.js";import"./p-1c285990.js";import"./p-e3657bc3.js";import"./p-bac7b09c.js";import"./p-e2849960.js";import"./p-02236077.js";import"./p-cea3971b.js";import"./p-4295487d.js";import"./p-1317d6d9.js";import"./p-bdd45e95.js";import"./p-ca379176.js";import"./p-85c76b3c.js";import"./p-4c90e3f2.js";import"./p-e33d4456.js";let K=class extends(i(t(s(e(n(o(a(r(h))))))))){constructor(i){super(i),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(p.ofType(A)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(p.ofType(A)),this.type="knowledge-graph",this.url=null,this.addHandles(l((()=>this.layers.concat(this.tables)),((i,t)=>this._handleSublayersChange(i,t)),d))}load(i){return this.addResolvingPromise(this._doLoad(i)),Promise.resolve(this)}async _doLoad(i){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},i)}catch(i){c(i)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache(),await C(this)}async _fetchMetadata(){if(!this.url)throw new f("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const i=await I(this.url);this.knowledgeGraph=i,this._forEachGraphType((i=>{i.name&&this._graphTypeLookup.set(i.name,i)}))}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===u.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new N({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const i=this.definitionSetMap?await R(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach((t=>{const s=this._graphTypeLookup.get(t.graphTypeName);s&&!i.namedTypeDefinitions.has(s.name)&&i.namedTypeDefinitions.set(s.name,{useAllData:!0})})),this.setAtOrigin("inclusionModeDefinition",i,y(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:i}=this;if(!i)return;const{namedTypeDefinitions:t}=i;if(t?.size>0)t.forEach(((i,s)=>{const e=this._graphTypeLookup.get(s);if(!e)return m.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't in the data model and will be removed`),void t.delete(s);"relationship"!==e.type&&"entity"!==e.type&&(m.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't properly modeled and will be removed`),t.delete(s))}));else if(!i.generateAllSublayers)throw new f("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){let i=[],t=[];const{inclusionModeDefinition:s}=this,e=s?.namedTypeDefinitions;!s||s.generateAllSublayers?(i=this.knowledgeGraph.dataModel?.entityTypes??[],t=this.knowledgeGraph.dataModel?.relationshipTypes??[]):e&&e.size>0&&e.forEach(((s,e)=>{const n=this._graphTypeLookup.get(e);switch(n?.type){case"relationship":t.push(n);break;case"entity":i.push(n)}})),this.memberEntityTypes=i,this.memberRelationshipTypes=t}_forEachGraphType(i){[...this.knowledgeGraph.dataModel?.entityTypes??[],...this.knowledgeGraph.dataModel?.relationshipTypes??[]].forEach((t=>{i(t)}))}_refreshNamedTypes(){this._namedTypesModified=!0;for(const i of this.layers)i.emit("refresh",{dataChanged:!0});for(const i of this.tables)i.emit("refresh",{dataChanged:!0})}async _handleNewRecords(i){const t=[];this.dataManager.addToLayer(i);for(const s of i)this.sublayerIdsCache.has(s.typeName)||(this.sublayerIdsCache.set(s.typeName,new Set),t.push(s.typeName)),this.sublayerIdsCache.get(s.typeName).add(s.id);for(const i of t){const t=this._graphTypeLookup.get(i);t&&(this._addSublayer(t),"entity"===t.type?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),this.dataManager.sublayerCaches.set(i,new Map))}await C(this,t),this._refreshNamedTypes()}_createSublayers(i,t,s){i.forEach((i=>{const e=this._createSublayer(i);s(e)&&t.push(e),this._updateSublayerCaches(i)}))}_addSublayer(i){const t=this._createSublayer(i);return t.geometryType?this.layers.push(t):this.tables.push(t),t}_createSublayer(i){return new A({objectType:i,parentCompositeLayer:this,graphType:i.type})}_updateSublayers(i,t){t.forEach((t=>{t.parentCompositeLayer=this;const s=i.find((i=>i.type===t.graphType&&i.name===t.graphTypeName));s&&(t.objectType=s,this._updateSublayerCaches(s))}))}_updateSublayerCaches(i){const t=this.dataManager.sublayerCaches;t.has(i.name)||t.set(i.name,new Map)}_saveUrlAsNewResource(i,t,s,e){i[t]="<pending>",s.pendingOperations.push(z(this.inclusionModeDefinition).then((n=>{const o=E(e);i[t]=o.itemRelativeUrl,s.toAdd.push({resource:o,content:{type:"blob",blob:n},compress:!1,finish:i=>{this.definitionSetMap=i.url}})})))}_displaysAllRecords(i){for(const[,{useAllData:t}]of i.namedTypeDefinitions)if(!t)return!1;return!0}_handleSublayersChange(i,t){t&&(t.forEach((i=>{i.parent=null})),this.removeHandles("sublayers-owner")),i&&(i.forEach((i=>{i.parent=this})),this.addHandles([i.on("after-add",(({item:i})=>{i.parent=this})),i.on("after-remove",(({item:i})=>{i.parent=null}))],"sublayers-owner"))}readDefinitionSetMap(i,t,s){return w(i,s)}writeDefinitionSetMap(i,t,s,e){const n=e?.portalItem,o=e?.resources,a=G(e?.origin);if(!n||!o||null==a)return void(i&&(t[s]=b(i,e)));const{inclusionModeDefinition:r}=this;if(!r||this._displaysAllRecords(r))return void(this.definitionSetMap=null);const h=this.originIdOf("inclusionModeDefinition");if(h===u.USER||this._namedTypesModified||a<h)this._saveUrlAsNewResource(t,s,o,n);else if(a===h&&i){const a=b(i,e);M(a)?this._saveUrlAsNewResource(t,s,o,n):t[s]=a}}set inclusionModeDefinition(i){"loaded"!==this.loadStatus&&"failed"!==this.loadStatus?this._set("inclusionModeDefinition",i):m.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){const i=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.originIdOf("layers")===u.DEFAULTS?this._createSublayers(i,this.layers,(i=>!!i.geometryType)):this._updateSublayers(i,this.layers),this.originIdOf("tables")===u.DEFAULTS?this._createSublayers(i,this.tables,(i=>!i.geometryType)):this._updateSublayers(i,this.tables),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((i,t)=>{const s=j(this.sublayerIdsCache,t,(()=>new Set));i.members?.forEach((i=>{s.add(i.id)}))}))}async addRecords(i){await this._handleNewRecords(i)}async removeRecords(i){const t=[];for(const s of i)!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(s.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(s.typeName)?.members?.has(s.id)&&t.push(s);this.dataManager.removeFromLayer(t);for(const i of t)this.sublayerIdsCache.get(i.typeName)?.delete(i.id);return this._refreshNamedTypes(),t}};g([D()],K.prototype,"dataManager",void 0),g([D({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],K.prototype,"definitionSetMap",void 0),g([v("definitionSetMap")],K.prototype,"readDefinitionSetMap",null),g([S("definitionSetMap")],K.prototype,"writeDefinitionSetMap",null),g([D()],K.prototype,"inclusionModeDefinition",null),g([D()],K.prototype,"knowledgeGraph",void 0),g([D({type:p.ofType(A),json:{write:{ignoreOrigin:!0}}})],K.prototype,"layers",void 0),g([D()],K.prototype,"memberEntityTypes",void 0),g([D()],K.prototype,"memberRelationshipTypes",void 0),g([D({type:["KnowledgeGraphLayer"]})],K.prototype,"operationalLayerType",void 0),g([D()],K.prototype,"sublayerIdsCache",void 0),g([D({type:p.ofType(A),json:{write:{ignoreOrigin:!0}}})],K.prototype,"tables",void 0),g([D({json:{read:!1}})],K.prototype,"type",void 0),g([D(_)],K.prototype,"url",void 0),K=g([k("esri.layers.KnowledgeGraphLayer")],K);const P=K;async function z(i){const t=await x(i);return new Blob([t],{type:"application/x-protobuf"})}function E(i){const t=`definitionSetMap-${L()}.dat`,s=T("knowledgeGraphLayer",t);return i.resourceFromPath(s)}export default P;
//# sourceMappingURL=p-555540b4.js.map