import{n as t}from"./p-b0afd947.js";import{n as s,e as i}from"./p-5b86a937.js";import{h as e,r as h,az as n,s as r,bl as o,bm as l}from"./p-028496e2.js";import{d as a,m as u,b as c,u as f,o as d}from"./p-711ed159.js";import{R as p,T as _,N as g,S as m,O as v,I as b,V as w,F as E,A,E as x,C as S,D as B,L as R,G as T,U as C,P as F,f as y,X as O,Y as M,_ as P,n as D,r as G,i as I,M as U}from"./p-8567e6fe.js";import{t as k,S as X,s as L,G as N}from"./p-2e4751c2.js";import{o as j}from"./p-54d1d89d.js";import{h as W,x as $}from"./p-5a65512b.js";import{a as V,f as H,t as z}from"./p-7b2fe465.js";import{r as q}from"./p-1e93177b.js";import{o as K}from"./p-0b0f20ea.js";import{t as Q}from"./p-89242a33.js";const Y=t=>{let s="";s+=t[0].toUpperCase();for(let i=1;i<t.length;i++){const e=t[i];e===e.toUpperCase()?(s+="_",s+=e):s+=e.toUpperCase()}return s},Z=t=>{const i={};for(const s in t){i[Y(s)]=t[s]}return s(i)},J=(s,i,e,h)=>{const n=s+s.substring(s.lastIndexOf("/")),r=i+i.substring(i.lastIndexOf("/")),o=Z(h);return{attributes:e,shaders:{vertexShader:o+t(`${n}.vert`),fragmentShader:o+t(`${r}.frag`)}}};class tt{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:p.ONE,dstRGB:p.ZERO,srcAlpha:p.ONE,dstAlpha:p.ZERO},this.blendEquation={mode:_.ADD,modeAlpha:_.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=g.BACK,this.frontFace=m.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=v.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:g.FRONT_AND_BACK,func:v.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:g.FRONT_AND_BACK,fail:b.KEEP,zFail:b.KEEP,zPass:b.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.transformFeedbackBuffer=null,this.uniformBufferBindingPoints=new Array,this.transformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}}class st{constructor(){for(this._current=new Array,this._allocations=null;this._current.length<w.COUNT;)this._current.push(0)}increment(t,s,i=1){this._current[t]+=i,this._allocations?.add(s)}decrement(t,s,i=1){this._current[t]-=i,this._allocations?.remove(s)}get current(){return this._current}get total(){return this.current.reduce(((t,s,i)=>t+(i<w.UNCOUNTED?s:0)),0)}get resourceInformation(){let t="";if(this.total>0){t+="Live objects:\n";for(let s=0;s<w.COUNT;++s){const i=this._current[s];i>0&&(t+=`${w[s]}: ${i}\n`)}}return t+=this._allocations?.resetLog(),t}}class it{constructor(t,s,i){const e=s.textureFilterAnisotropic,h=i.maxAnisotropy??1/0;this.versionString=t.getParameter(t.VERSION),this.maxVertexTextureImageUnits=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxVertexAttributes=t.getParameter(t.MAX_VERTEX_ATTRIBS),this.maxMaxAnisotropy=e?Math.min(t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY),h):1,this.maxTextureImageUnits=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this.maxRenderbufferSize=t.getParameter(t.MAX_RENDERBUFFER_SIZE),this.maxViewportDims=t.getParameter(t.MAX_VIEWPORT_DIMS),this.maxUniformBufferBindings=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS),this.maxVertexUniformBlocks=t.getParameter(t.MAX_VERTEX_UNIFORM_BLOCKS),this.maxFragmentUniformBlocks=t.getParameter(t.MAX_FRAGMENT_UNIFORM_BLOCKS),this.maxUniformBlockSize=t.getParameter(t.MAX_UNIFORM_BLOCK_SIZE),this.uniformBufferOffsetAlignment=t.getParameter(t.UNIFORM_BUFFER_OFFSET_ALIGNMENT),this.maxArrayTextureLayers=t.getParameter(t.MAX_ARRAY_TEXTURE_LAYERS),this.maxSamples=t.getParameter(t.MAX_SAMPLES)}}class et{constructor(t){this._rctx=t,this._indexBuffer=this._createIndexbuffer(),this._program=this._createHelperProgram()}static getShaderSources(){return{vertex:"#version 300 es\n    precision highp float;\n\n    void main(void) {\n      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);\n    }",fragment:"#version 300 es\n    precision highp float;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }"}}_createHelperProgram(){const t=et.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}_createIndexbuffer(){return W.createIndex(this._rctx,E.STATIC_DRAW,new Uint32Array([0]))}run(){this._program.compiled&&this._indexBuffer&&(this._rctx.bindVAO(null),this._rctx.useProgram(this._program),this._rctx.bindBuffer(this._indexBuffer,A.ELEMENT_ARRAY_BUFFER),this._rctx.drawElements(x.POINTS,1,S.UNSIGNED_INT,0))}dispose(){this._program.dispose(),this._indexBuffer.dispose()}get test(){return{cachedWebGLObjects:this._indexBuffer?.glName?1:0}}}class ht extends V{constructor(t){super(),this._rctx=t,this._helperProgram=null,e("mac")&&e("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){super.dispose(),this._helperProgram?.dispose(),this._helperProgram=null}_test(t){const s=this._rctx,i=s.getBoundFramebufferObject(),{x:e,y:h,width:n,height:r}=s.getViewport();s.resetState();const o=new a(1);o.wrapMode=B.CLAMP_TO_EDGE,o.samplingMode=R.NEAREST;const l=new $(s,o),u=W.createIndex(this._rctx,E.STATIC_DRAW,new Uint8Array([0]));s.bindFramebuffer(l),s.setViewport(0,0,1,1),s.useProgram(this._helperProgram),s.bindBuffer(u,A.ELEMENT_ARRAY_BUFFER),s.drawElements(x.POINTS,1,S.UNSIGNED_BYTE,0),s.useProgram(t),s.bindVAO(null),s.drawArrays(x.TRIANGLES,0,258);const c=new Uint8Array(4);return l.readPixels(0,0,1,1,T.RGBA,C.UNSIGNED_BYTE,c),s.setViewport(e,h,n,r),s.bindFramebuffer(i),l.dispose(),u.dispose(),255===c[0]}_prepareProgram(){const t=85,s=`#version 300 es\n    precision highp float;\n\n    out float triangleId;\n\n    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));\n\n    void main(void) {\n      triangleId = floor(float(gl_VertexID)/3.0);\n\n      vec3 position = triangleVertices[gl_VertexID % 3];\n      float offset = triangleId / ${j.float(t)};\n      position.z = 0.5 - offset;\n\n      gl_Position = vec4(position, 1.0);\n    }\n    `,i=`#version 300 es\n    precision highp float;\n\n    in float triangleId;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = triangleId == ${j.float(t)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);\n    }\n    `;return this._rctx.programCache.acquire(s,i,new Map([]))}_prepareHelperProgram(){const t=et.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}}class nt extends V{constructor(t){super(),this._rctx=t,this._program=rt(this._rctx,!1),this._obfuscated=rt(this._rctx,!0)}dispose(){super.dispose(),this._obfuscated=h(this._obfuscated)}_test(t){if(e("force-double-precision-obfuscation"))return!0;if(null==this._obfuscated)return!1;const s=this._rctx,i=s.getBoundFramebufferObject(),{x:h,y:n,width:r,height:o}=s.getViewport(),l=this._runProgram(t),a=this._runProgram(this._obfuscated);return s.setViewport(h,n,r,o),s.bindFramebuffer(i),0!==l&&(0===a||l/a>5)}_runProgram(t){const s=this._rctx;s.resetState();const i=new a(1);i.wrapMode=B.CLAMP_TO_EDGE,i.samplingMode=R.NEAREST;const e=new $(s,i),h=W.createVertex(s,E.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),r=new K(s,new Map([["position",0]]),{geometry:[new Q("position",2,S.UNSIGNED_SHORT,0,4)]},{geometry:h}),o=n(5633261.287538229,2626832.878767164,1434988.0495278358),l=n(5633271.46742708,2626873.6381334523,1434963.231608387),u=new Float32Array(6);k(o,u,3);const c=new Float32Array(6);k(l,c,3),s.useProgram(t),t.setUniform3f("u_highA",u[0],u[2],u[4]),t.setUniform3f("u_lowA",u[1],u[3],u[5]),t.setUniform3f("u_highB",c[0],c[2],c[4]),t.setUniform3f("u_lowB",c[1],c[3],c[5]),s.bindFramebuffer(e),s.setViewport(0,0,1,1),s.bindVAO(r),s.drawArrays(x.TRIANGLE_STRIP,0,4);const f=new Uint8Array(4);e.readPixels(0,0,1,1,T.RGBA,C.UNSIGNED_BYTE,f),r.dispose(),e.dispose();const d=(o[2]-l[2])/25,p=q(f);return Math.abs(d-p)}}function rt(t,s){const i=`\n\n  precision highp float;\n\n  attribute vec2 position;\n\n  uniform vec3 u_highA;\n  uniform vec3 u_lowA;\n  uniform vec3 u_highB;\n  uniform vec3 u_lowB;\n\n  varying vec4 v_color;\n\n  ${s?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}\n\n  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION\n\n  vec3 dpPlusFrc(vec3 a, vec3 b) {\n    return mix(a, a + b, vec3(notEqual(b, vec3(0))));\n  }\n\n  vec3 dpMinusFrc(vec3 a, vec3 b) {\n    return mix(vec3(0), a - b, vec3(notEqual(a, b)));\n  }\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = dpPlusFrc(hiA, hiB);\n    vec3 e = dpMinusFrc(t1, hiA);\n    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\n    return t1 + t2;\n  }\n\n  #else\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = hiA + hiB;\n    vec3 e = t1 - hiA;\n    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\n    return t1 + t2;\n  }\n\n  #endif\n\n  const float MAX_RGBA_FLOAT =\n    255.0 / 256.0 +\n    255.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 / 256.0;\n\n  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\n\n  vec4 float2rgba(const float value) {\n    // Make sure value is in the domain we can represent\n    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\n\n    // Decompose value in 32bit fixed point parts represented as\n    // uint8 rgba components. Decomposition uses the fractional part after multiplying\n    // by a power of 256 (this removes the bits that are represented in the previous\n    // component) and then converts the fractional part to 8bits.\n    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\n\n    // Convert uint8 values (from 0 to 255) to floating point representation for\n    // the shader\n    const float toU8AsFloat = 1.0 / 255.0;\n\n    return fixedPointU8 * toU8AsFloat;\n  }\n\n  void main() {\n    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);\n\n    v_color = float2rgba(val.z / 25.0);\n\n    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);\n  }\n  `,e="\n  precision highp float;\n\n  varying vec4 v_color;\n\n  void main() {\n    gl_FragColor = v_color;\n  }\n  ";return t.programCache.acquire(i,e,new Map([["position",0]]))}class ot extends V{constructor(t){if(super(),this._rctx=t,!t.gl)return;if(!(t.capabilities.colorBufferFloat?.textureFloat&&t.capabilities.colorBufferFloat?.floatBlend))return;const s="\n    precision highp float;\n    attribute vec2 a_pos;\n\n    void main() {\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ",i="\n     precision highp float;\n\n     void main() {\n      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);\n     }\n    ";this._program=t.programCache.acquire(s,i,new Map([["a_pos",0]]))}_test(t){const s=this._rctx,i=new a(1);i.wrapMode=B.CLAMP_TO_EDGE,i.dataType=C.FLOAT,i.internalFormat=F.RGBA32F,i.samplingMode=R.NEAREST;const e=new $(s,i),h=W.createVertex(s,E.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),n=new K(s,new Map([["a_pos",0]]),{geometry:[new Q("a_pos",2,S.UNSIGNED_SHORT,0,4)]},{geometry:h});s.useProgram(t);const r=s.getBoundFramebufferObject(),{x:o,y:l,width:u,height:c}=s.getViewport();s.bindFramebuffer(e),s.setViewport(0,0,1,1),s.bindVAO(n),s.drawArrays(x.TRIANGLE_STRIP,0,4);const f=X({blending:L});s.setPipelineState(f),s.drawArrays(x.TRIANGLE_STRIP,0,4);const d=s.gl.getError();return s.setViewport(o,l,u,c),s.bindFramebuffer(r),n.dispose(),e.dispose(),1282!==d||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}}class lt extends V{constructor(t){super(),this._rctx=t;const s="\n      precision highp float;\n      attribute vec2 a_pos;\n      uniform highp sampler2D u_texture;\n      varying vec4 v_color;\n\n      float getBit(in float bitset, in int bitIndex) {\n        float offset = pow(2.0, float(bitIndex));\n        return mod(floor(bitset / offset), 2.0);\n      }\n\n      void main() {\n        vec4 value = texture2D(u_texture, vec2(0.0));\n        float bit = getBit(value.x * 255.0, 1);\n\n        v_color = bit * vec4(1.0);\n        gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n      }\n      ",i="\n      precision highp float;\n      varying vec4 v_color;\n\n      void main() {\n        gl_FragColor = v_color;\n      }\n      ";this._program=t.programCache.acquire(s,i,new Map([["a_pos",0]]))}_test(t){const s=this._rctx,i=new a(1);i.wrapMode=B.CLAMP_TO_EDGE,i.samplingMode=R.NEAREST;const e=new $(s,i),h=new Uint8Array(4),n=W.createVertex(s,E.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),o=new K(s,new Map([["a_position",0]]),{geometry:[new Q("a_position",2,S.SHORT,0,4)]},{geometry:n});s.useProgram(t);const l=new u(s,i,new Uint8Array([2,255,0,0]));t.setUniform1i("u_texture",0),s.bindTexture(l,0);const c=s.getBoundFramebufferObject();s.bindFramebuffer(e),s.useProgram(t);const{x:f,y:d,width:p,height:_}=s.getViewport();s.setViewport(0,0,1,1),s.bindVAO(o),s.drawArrays(x.TRIANGLE_STRIP,0,4),s.setViewport(f,d,p,_),e.readPixels(0,0,1,1,T.RGBA,C.UNSIGNED_BYTE,h),o.dispose(),e.dispose();const g=255!==h[0]||255!==h[1]||255!==h[2]||255!==h[3];return g&&r.getLogger("esri.views.webgl.testSamplerPrecision").warn(`A problem was detected with your graphics driver. Your driver does not appear to honor sampler precision specifiers, which may result in rendering issues due to numerical instability. We recommend ensuring that your drivers have been updated to the latest version. Applying lowp sampler workaround. [${h[0]}.${h[1]}.${h[2]}.${h[3]}]`),s.bindFramebuffer(c),g}}class at{constructor(t){this.rctx=t,this.floatBufferBlend=new ot(t),this.svgPremultipliesAlpha=new H(t),this.doublePrecisionRequiresObfuscation=new nt(t),this.ignoresSamplerPrecision=new lt(t),this.drawArraysRequiresIndicesTypeReset=new ht(t)}dispose(){this.ignoresSamplerPrecision.dispose(),this.doublePrecisionRequiresObfuscation.dispose(),this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}}function ut(t,s){if(s.compressedTextureETC)return null;const i=t.getExtension("WEBGL_compressed_texture_etc");return i?{COMPRESSED_R11_EAC:i.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:i.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:i.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:i.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:i.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:i.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:i.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:i.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}function ct(t,s){if(s.compressedTextureS3TC)return null;const i=t.getExtension("WEBGL_compressed_texture_s3tc");return i?{COMPRESSED_RGB_S3TC_DXT1:i.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:i.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:i.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:i.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}function ft(t,s){if(s.textureFilterAnisotropic)return null;const i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return i?{MAX_TEXTURE_MAX_ANISOTROPY:i.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:i.TEXTURE_MAX_ANISOTROPY_EXT}:null}function dt(t,s){const i=!s.colorBufferHalfFloat&&t.getExtension("EXT_color_buffer_half_float")||!s.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),e=!s.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),h=!s.floatBlend&&!s.colorBufferFloat&&t.getExtension("EXT_float_blend");return i||e||h?{textureFloat:!!e,textureHalfFloat:!!i,floatBlend:!!h,R16F:t.R16F,RG16F:t.RG16F,RGBA16F:t.RGBA16F,R32F:t.R32F,RG32F:t.RG32F,RGBA32F:t.RGBA32F,R11F_G11F_B10F:t.R11F_G11F_B10F,RGB16F:t.RGB16F}:null}function pt(t,s,i,e,h){if(e)return!0;if(s[i])return!1;for(const s of h)if(t.getExtension(s))return!0;return!1}function _t(t,s){if(s.textureNorm16)return null;const i=t.getExtension("EXT_texture_norm16");return i?{R16:i.R16_EXT,RG16:i.RG16_EXT,RGB16:i.RGB16_EXT,RGBA16:i.RGBA16_EXT,R16_SNORM:i.R16_SNORM_EXT,RG16_SNORM:i.RG16_SNORM_EXT,RGB16_SNORM:i.RGB16_SNORM_EXT,RGBA16_SNORM:i.RGBA16_SNORM_EXT}:null}function gt(t,s){const i=s.loseContext&&t.getExtension("WEBGL_lose_context");return i?{loseRenderingContext:()=>i.loseContext()}:null}class mt{constructor(t,s){this._gl=t,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._textureFloat=null,this._colorBufferFloat=null,this._loseContext=null,this._textureNorm16=null,this._depthTexture=null,this._textureFloatLinear=null,this._disabledExtensions=s.disabledExtensions||{},this._debugWebGLExtensions=s.debugWebGLExtensions||{}}get compressedTextureETC(){return this._compressedTextureETC||(this._compressedTextureETC=ut(this._gl,this._disabledExtensions)),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC||(this._compressedTextureS3TC=ct(this._gl,this._disabledExtensions)),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic||(this._textureFilterAnisotropic=ft(this._gl,this._disabledExtensions)),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery||(this._disjointTimerQuery=z(this._gl,this._disabledExtensions)),this._disjointTimerQuery}get textureFloat(){if(!this._textureFloat){const{textureFloatLinear:t}=this._disabledExtensions;this._textureFloat={textureFloatLinear:!t&&!!this._gl.getExtension("OES_texture_float_linear")}}return this._textureFloat}get colorBufferFloat(){return this._colorBufferFloat||(this._colorBufferFloat=dt(this._gl,this._disabledExtensions)),this._colorBufferFloat}get depthTexture(){return null===this._depthTexture&&(this._depthTexture=pt(this._gl,this._disabledExtensions,"depthTexture",!0,["WEBGL_depth_texture","MOZ_WEBGL_depth_texture","WEBKIT_WEBGL_depth_texture"])),this._depthTexture}get loseContext(){return this._loseContext||(this._loseContext=gt(this._gl,this._debugWebGLExtensions)),this._loseContext}get textureNorm16(){return this._textureNorm16||(this._textureNorm16=_t(this._gl,this._disabledExtensions)),this._textureNorm16}get textureFloatLinear(){return null===this._textureFloatLinear&&(this._textureFloatLinear=pt(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"])),this._textureFloatLinear}enable(t){return this[t]}}let vt=class{constructor(t,s){this.gl=t,this.instanceCounter=new st,this.programCache=new i(this),this._transformFeedbackRequestInfo=null,this._state=new tt,this._numOfDrawCalls=0,this._numOfTriangles=0,this._loadExtensions(),this.configure(s)}configure(t){this._capabilities=new mt(this.gl,t),this._parameters=new it(this.gl,this._capabilities,t),u.TEXTURE_UNIT_FOR_UPDATES=this._parameters.maxTextureImageUnits-1;const s=this.gl.getParameter(this.gl.VIEWPORT);this._state=new tt,this._state.viewport={x:s[0],y:s[1],width:s[2],height:s[3]},this._stateTracker=new N({setBlending:t=>{if(t){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(t.opRgb,t.opAlpha),this.setBlendFunctionSeparate(t.srcRgb,t.dstRgb,t.srcAlpha,t.dstAlpha);const s=t.color;this.setBlendColor(s.r,s.g,s.b,s.a)}else this.setBlendingEnabled(!1)},setCulling:t=>{t?(this.setFaceCullingEnabled(!0),this.setCullFace(t.face),this.setFrontFace(t.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:t=>{t?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(t.factor,t.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:t=>{t?(this.setDepthTestEnabled(!0),this.setDepthFunction(t.func)):this.setDepthTestEnabled(!1)},setStencilTest:t=>{if(t){this.setStencilTestEnabled(!0);const s=t.function;this.setStencilFunction(s.func,s.ref,s.mask);const i=t.operation;this.setStencilOp(i.fail,i.zFail,i.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:t=>{t?(this.setDepthWriteEnabled(!0),this.setDepthRange(t.zNear,t.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:t=>{t?this.setColorMask(t.r,t.g,t.b,t.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:t=>{t?this.setStencilWriteMask(t.mask):this.setStencilWriteMask(0)},setDrawBuffers:t=>{const{gl:s}=this;if(t)s.drawBuffers(t.buffers);else{const{drawFramebuffer:t}=this._state;null===t||0===t.colorAttachments.length?s.drawBuffers([y.BACK]):s.drawBuffers([O.COLOR_ATTACHMENT0])}}}),this.enforceState(),h(this._driverTest),this._driverTest=new at(this)}dispose(){h(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(A.ARRAY_BUFFER),this.unbindBuffer(A.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(A.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(A.PIXEL_PACK_BUFFER),this.unbindBuffer(A.PIXEL_UNPACK_BUFFER),this.unbindBuffer(A.COPY_READ_BUFFER),this.unbindBuffer(A.COPY_WRITE_BUFFER),this._state.textureUnitMap.length=0,c()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(t){this._stateTracker.setPipeline(t)}setBlendingEnabled(t){this._state.blend!==t&&(!0===t?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=t,this._stateTracker.invalidateBlending())}externalProgramUpdate(){this._state.program?.stop(),this._state.program=null}externalTextureUnitUpdate(t,s){for(let s=0;s<t.length;++s)this._state.textureUnitMap[t[s]]=null;s>=0&&(this._state.activeTexture=s)}externalVertexArrayObjectUpdate(){this.gl.bindVertexArray(null),this._state.vertexArrayObject=null,this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(t,s,i,e){t===this._state.blendColor.r&&s===this._state.blendColor.g&&i===this._state.blendColor.b&&e===this._state.blendColor.a||(this.gl.blendColor(t,s,i,e),this._state.blendColor.r=t,this._state.blendColor.g=s,this._state.blendColor.b=i,this._state.blendColor.a=e,this._stateTracker.invalidateBlending())}setBlendFunction(t,s){t===this._state.blendFunction.srcRGB&&s===this._state.blendFunction.dstRGB||(this.gl.blendFunc(t,s),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=t,this._state.blendFunction.dstRGB=s,this._state.blendFunction.dstAlpha=s,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(t,s,i,e){this._state.blendFunction.srcRGB===t&&this._state.blendFunction.srcAlpha===i&&this._state.blendFunction.dstRGB===s&&this._state.blendFunction.dstAlpha===e||(this.gl.blendFuncSeparate(t,s,i,e),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=i,this._state.blendFunction.dstRGB=s,this._state.blendFunction.dstAlpha=e,this._stateTracker.invalidateBlending())}setBlendEquation(t){this._state.blendEquation.mode!==t&&(this.gl.blendEquation(t),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(t,s){this._state.blendEquation.mode===t&&this._state.blendEquation.modeAlpha===s||(this.gl.blendEquationSeparate(t,s),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=s,this._stateTracker.invalidateBlending())}setColorMask(t,s,i,e){this._state.colorMask.r===t&&this._state.colorMask.g===s&&this._state.colorMask.b===i&&this._state.colorMask.a===e||(this.gl.colorMask(t,s,i,e),this._state.colorMask.r=t,this._state.colorMask.g=s,this._state.colorMask.b=i,this._state.colorMask.a=e,this._stateTracker.invalidateColorWrite())}setClearColor(t,s,i,e){this._state.clearColor.r===t&&this._state.clearColor.g===s&&this._state.clearColor.b===i&&this._state.clearColor.a===e||(this.gl.clearColor(t,s,i,e),this._state.clearColor.r=t,this._state.clearColor.g=s,this._state.clearColor.b=i,this._state.clearColor.a=e)}setFaceCullingEnabled(t){this._state.faceCulling!==t&&(!0===t?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=t,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(t){this._state.polygonOffsetFill!==t&&(!0===t?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=t,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(t,s){this._state.polygonOffset[0]===t&&this._state.polygonOffset[1]===s||(this._state.polygonOffset[0]=t,this._state.polygonOffset[1]=s,this.gl.polygonOffset(t,s),this._stateTracker.invalidatePolygonOffset())}setCullFace(t){this._state.cullFace!==t&&(this.gl.cullFace(t),this._state.cullFace=t,this._stateTracker.invalidateCulling())}setFrontFace(t){this._state.frontFace!==t&&(this.gl.frontFace(t),this._state.frontFace=t,this._stateTracker.invalidateCulling())}setScissorTestEnabled(t){this._state.scissorTest!==t&&(!0===t?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=t)}setScissorRect(t,s,i,e){this._state.scissorRect.x===t&&this._state.scissorRect.y===s&&this._state.scissorRect.width===i&&this._state.scissorRect.height===e||(this.gl.scissor(t,s,i,e),this._state.scissorRect.x=t,this._state.scissorRect.y=s,this._state.scissorRect.width=i,this._state.scissorRect.height=e)}setDepthTestEnabled(t){this._state.depthTest!==t&&(!0===t?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=t,this._stateTracker.invalidateDepthTest())}setClearDepth(t){this._state.clearDepth!==t&&(this.gl.clearDepth(t),this._state.clearDepth=t)}setDepthFunction(t){this._state.depthFunction!==t&&(this.gl.depthFunc(t),this._state.depthFunction=t,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(t){this._state.depthWrite!==t&&(this.gl.depthMask(t),this._state.depthWrite=t,this._stateTracker.invalidateDepthWrite())}setDepthRange(t,s){this._state.depthRange.zNear===t&&this._state.depthRange.zFar===s||(this.gl.depthRange(t,s),this._state.depthRange.zNear=t,this._state.depthRange.zFar=s,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(t){this._state.stencilTest!==t&&(!0===t?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=t,this._stateTracker.invalidateStencilTest())}setClearStencil(t){t!==this._state.clearStencil&&(this.gl.clearStencil(t),this._state.clearStencil=t)}setStencilFunction(t,s,i){this._state.stencilFunction.func===t&&this._state.stencilFunction.ref===s&&this._state.stencilFunction.mask===i||(this.gl.stencilFunc(t,s,i),this._state.stencilFunction.face=g.FRONT_AND_BACK,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=i,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(t,s,i,e){this._state.stencilFunction.face===t&&this._state.stencilFunction.func===s&&this._state.stencilFunction.ref===i&&this._state.stencilFunction.mask===e||(this.gl.stencilFuncSeparate(t,s,i,e),this._state.stencilFunction.face=t,this._state.stencilFunction.func=s,this._state.stencilFunction.ref=i,this._state.stencilFunction.mask=e,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(t){this._state.stencilWriteMask!==t&&(this.gl.stencilMask(t),this._state.stencilWriteMask=t,this._stateTracker.invalidateStencilWrite())}setStencilOp(t,s,i){this._state.stencilOperation.face===g.FRONT_AND_BACK&&this._state.stencilOperation.fail===t&&this._state.stencilOperation.zFail===s&&this._state.stencilOperation.zPass===i||(this.gl.stencilOp(t,s,i),this._state.stencilOperation.face=g.FRONT_AND_BACK,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=i,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(t,s,i,e){this._state.stencilOperation.face===t&&this._state.stencilOperation.fail===s&&this._state.stencilOperation.zFail===i&&this._state.stencilOperation.zPass===e||(this.gl.stencilOpSeparate(t,s,i,e),this._state.stencilOperation.face=t,this._state.stencilOperation.fail=s,this._state.stencilOperation.zFail=i,this._state.stencilOperation.zPass=e,this._stateTracker.invalidateStencilTest())}setActiveTexture(t,s=!1){const i=this._state.activeTexture;return t>=0&&(s||t!==this._state.activeTexture)&&(this.gl.activeTexture(M+t),this._state.activeTexture=t),i}clear(t){t&&this.gl.clear(t)}clearSafe(t,s=255){t&&(t&P.COLOR_BUFFER_BIT&&this.setColorMask(!0,!0,!0,!0),t&P.DEPTH_BUFFER_BIT&&this.setDepthWriteEnabled(!0),t&P.STENCIL_BUFFER_BIT&&this.setStencilWriteMask(s),this.gl.clear(t))}clearFramebuffer(t,s=!1,i=!1){let e=0;if(t){const s=1e-13,i=Math.max(s,t[3]);this.setClearColor(t[0],t[1],t[2],i),e|=P.COLOR_BUFFER_BIT}s&&(e|=P.DEPTH_BUFFER_BIT),!1===i?i=0:(!0===i&&(i=255),e|=P.STENCIL_BUFFER_BIT),e&&this.clearSafe(e,i)}drawArrays(t,s,i){if(this._transformFeedbackRequestInfo){if(t!==this._transformFeedbackRequestInfo.primitiveType)throw new Error("DrawArrays called during transform feedback, but primitiveType does not match that of the current transform feedback request");if(null==this._state.program?.hasTransformFeedbackVaryings)throw new Error("DrawArrays called during transform feedback, but the shader program was not linked with a transform feedback varying")}if(c()){this._numOfDrawCalls++,this._numOfTriangles+=wt(t,i);const s=this._state.textureUnitMap;for(let t=0;t<s.length;t++){const i=s[t];if(null!=i&&i===this._state.drawFramebuffer?.colorTexture)throw new Error(`Detected readWrite. Texture already bound at index ${t}`)}}this.gl.drawArrays(t,s,i),f(this.gl)}drawArraysInstanced(t,s,i,e){this.gl.drawArraysInstanced(t,s,i,e),f(this.gl)}drawElements(t,s,i,e){if(this._transformFeedbackRequestInfo)throw new Error("Cannot called drawElements during a transform feedback request");if(c()&&(this._numOfDrawCalls++,this._numOfTriangles+=wt(t,s)),this.gl.drawElements(t,s,i,e),c()){const h=d(this);if(h){const n=this.getBoundVAO(),r=n?.indexBuffer,o=n?.vertexBuffers,l={indexBuffer:r,vertexBuffers:o},a={mode:t,count:s,type:i,offset:e},u=r?.size??0,c=e+s,f=u<c?`. Buffer is too small. Attempted to draw index ${c} of ${u}`:"";console.error(`drawElements: ${h}${f}`,{args:a,vao:l})}}}logInfo(){c()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){c()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(t,s,i,e){i=Math.max(Math.round(i),1),e=Math.max(Math.round(e),1);const h=this._state.viewport;h.x===t&&h.y===s&&h.width===i&&h.height===e||(h.x=t,h.y=s,h.width=i,h.height=e,this.gl.viewport(t,s,i,e))}setViewport4fv(t){this.setViewport(t[0],t[1],t[2],t[3])}restoreViewport({x:t,y:s,width:i,height:e}){this.setViewport(t,s,i,e)}getViewport(){const t=this._state.viewport;return{x:t.x,y:t.y,width:t.width,height:t.height}}useProgram(t){this._state.program!==t&&(this._state.program?.stop(),this._state.program=t,this.gl.useProgram(t?.glName??null))}bindTexture(t,s,i=!1){(s>=this.parameters.maxTextureImageUnits||s<0)&&console.error("Input texture unit is out of range of available units!");const e=this._state.textureUnitMap[s];return null==t?.glName?(null!=e&&(this.setActiveTexture(s,i),this.gl.bindTexture(e.descriptor.target,null)),this._state.textureUnitMap[s]=null,e):i||e!==t?(this.setActiveTexture(s,i),this.gl.bindTexture(t.descriptor.target,t.glName),t.applyChanges(),this._state.textureUnitMap[s]=t,e):(t.isDirty&&(this.setActiveTexture(s,i),t.applyChanges()),e)}unbindTexture(t){if(null!=t)for(let s=0;s<this.parameters.maxTextureImageUnits;s++)this._state.textureUnitMap[s]===t&&(this.bindTexture(null,s),this._state.textureUnitMap[s]=null)}bindFramebuffer(t,s=!1){if(s||this._state.readFramebuffer!==t||this._state.drawFramebuffer!==t){if(this._stateTracker.invalidateDrawBuffers(),null==t)return this.gl.bindFramebuffer(D.FRAMEBUFFER,null),void(this._state.readFramebuffer=this._state.drawFramebuffer=null);t.initializeAndBind(D.FRAMEBUFFER),this._state.readFramebuffer=t,this._state.drawFramebuffer=t}}bindFramebufferSeparate(t,s,i=!1){const e=s===D.READ_FRAMEBUFFER,h=e?this._state.readFramebuffer:this._state.drawFramebuffer;(i||h!==t)&&(null==t?this.gl.bindFramebuffer(s,null):t.initializeAndBind(s),e?this._state.readFramebuffer=t??null:this._state.drawFramebuffer=t??null)}blitFramebuffer(t,s,i=0,e=0,h=t.width,n=t.height,r=0,o=0,l=s.width,a=s.height,u=P.COLOR_BUFFER_BIT,c=R.NEAREST){this.bindFramebufferSeparate(t,D.READ_FRAMEBUFFER),this.bindFramebufferSeparate(s,D.DRAW_FRAMEBUFFER),this.gl.blitFramebuffer(i,e,h,n,r,o,l,a,u,c)}bindBuffer(t,s){if(t)switch(s??=t.bufferType,s){case A.ARRAY_BUFFER:this._state.vertexBuffer=bt(this.gl,t,s,this._state.vertexBuffer);break;case A.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=bt(this.gl,t,s,this._state.indexBuffer);break;case A.UNIFORM_BUFFER:this._state.uniformBuffer=bt(this.gl,t,s,this._state.uniformBuffer);break;case A.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=bt(this.gl,t,s,this._state.pixelPackBuffer);break;case A.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=bt(this.gl,t,s,this._state.pixelUnpackBuffer);break;case A.COPY_READ_BUFFER:this._state.copyReadBuffer=bt(this.gl,t,s,this._state.copyReadBuffer);break;case A.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=bt(this.gl,t,s,this._state.copyWriteBuffer);break;case A.TRANSFORM_FEEDBACK_BUFFER:this._state.transformFeedbackBuffer=bt(this.gl,t,s,this._state.transformFeedbackBuffer)}}bindRenderbuffer(t){const s=this.gl;t||(s.bindRenderbuffer(s.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==t&&(s.bindRenderbuffer(s.RENDERBUFFER,t.glName),this._state.renderbuffer=t)}_getBufferBinding(t,s){if(s>=this.parameters.maxUniformBufferBindings||s<0)return console.error("Uniform buffer binding point is out of range!"),null;const i=t===A.UNIFORM_BUFFER?this._state.uniformBufferBindingPoints:this._state.transformBufferBindingPoints;let e=i[s];return null==e&&(e={buffer:null,offset:0,size:0},i[s]=e),e}bindBufferBase(t,s,i){const e=this._getBufferBinding(t,s);null!=e&&(e.buffer===i&&0===e.offset&&0===e.size||(this.gl.bindBufferBase(t,s,i?i.glName:null),e.buffer=i,e.offset=0,e.size=0))}bindBufferRange(t,s,i,e,h){const n=this._getBufferBinding(t,s);null!=n&&(n.buffer===i&&n.offset===e&&n.size===h||(e%this._parameters.uniformBufferOffsetAlignment==0?(this.gl.bindBufferRange(t,s,i.glName,e,h),n.buffer=i,n.offset=e,n.size=h):console.error("Uniform buffer binding offset is not a multiple of the context offset alignment")))}bindUBO(t,s,i,e){null!=s?(c()&&(e??s.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),s.initialize(),void 0!==i&&void 0!==e?this.bindBufferRange(A.UNIFORM_BUFFER,t,s.buffer,i,e):this.bindBufferBase(A.UNIFORM_BUFFER,t,s.buffer)):this.bindBufferBase(A.UNIFORM_BUFFER,t,null)}unbindUBO(t){for(let s=0,i=this._state.uniformBufferBindingPoints.length;s<i;s++){const i=this._state.uniformBufferBindingPoints[s];null!=i&&i.buffer===t.buffer&&this.bindBufferBase(A.UNIFORM_BUFFER,s,null)}}unbindBuffer(t){switch(t){case A.ARRAY_BUFFER:this._state.vertexBuffer=bt(this.gl,null,t,this._state.vertexBuffer);break;case A.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=bt(this.gl,null,t,this._state.indexBuffer);break;case A.UNIFORM_BUFFER:this._state.uniformBuffer=bt(this.gl,null,t,this._state.uniformBuffer);break;case A.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=bt(this.gl,null,t,this._state.pixelPackBuffer);break;case A.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=bt(this.gl,null,t,this._state.pixelUnpackBuffer);break;case A.COPY_READ_BUFFER:this._state.copyReadBuffer=bt(this.gl,null,t,this._state.copyReadBuffer);break;case A.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=bt(this.gl,null,t,this._state.copyWriteBuffer)}}bindVAO(t=null){null!=t?this._state.vertexArrayObject!==t&&(t.bind(),this._state.vertexArrayObject=t):this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null)}bindTransformFeedback(t){const{gl:s}=this;s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,t.glName)}beginTransformFeedback(t,s){if(this._transformFeedbackRequestInfo)throw new Error("Already in a transform feedback request");const{gl:i}=this;i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,t.glName),i.beginTransformFeedback(s),this._transformFeedbackRequestInfo={primitiveType:s}}endTransformFeedback(){if(!this._transformFeedbackRequestInfo)throw new Error("Not in a transform feedback request");const{gl:t}=this;t.endTransformFeedback(),t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,null),this._transformFeedbackRequestInfo=null}async clientWaitAsync(t=o(10)){const{gl:s}=this,i=s.fenceSync(G.SYNC_GPU_COMMANDS_COMPLETE,0);if(!i)throw new Error("Client wait failed, could not create sync object");let e;this.instanceCounter.increment(w.Sync,i),s.flush();do{await l(t),e=s.clientWaitSync(i,0,0)}while(e===I.TIMEOUT_EXPIRED);if(this.instanceCounter.decrement(w.Sync,i),s.deleteSync(i),e===I.WAIT_FAILED)throw new Error("Client wait failed")}getBoundFramebufferObject(t=D.FRAMEBUFFER){return t===D.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(A.ARRAY_BUFFER),this.unbindBuffer(A.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(A.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(A.PIXEL_PACK_BUFFER),this.unbindBuffer(A.PIXEL_UNPACK_BUFFER),this.unbindBuffer(A.COPY_READ_BUFFER),this.unbindBuffer(A.COPY_WRITE_BUFFER);for(let t=0;t<this.parameters.maxTextureImageUnits;++t)this.bindTexture(null,t);this.setBlendingEnabled(!1),this.setBlendFunction(p.ONE,p.ZERO),this.setBlendEquation(_.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(g.BACK),this.setFrontFace(m.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(v.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(v.ALWAYS,0,0),this.setStencilOp(b.KEEP,b.KEEP,b.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){const{gl:t}=this;t.bindVertexArray(null);for(let s=0;s<this.parameters.maxVertexAttributes;s++)t.disableVertexAttribArray(s);this._state.vertexBuffer?t.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):t.bindBuffer(A.ARRAY_BUFFER,null),this._state.indexBuffer?t.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):t.bindBuffer(A.ELEMENT_ARRAY_BUFFER,null),this._state.uniformBuffer?t.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):t.bindBuffer(A.UNIFORM_BUFFER,null);for(let s=0;s<this._parameters.maxUniformBufferBindings;s++){const i=this._state.uniformBufferBindingPoints[s];if(null!=i){const{buffer:e,offset:h,size:n}=i;null!==e?0===h&&0===n?t.bindBufferBase(A.UNIFORM_BUFFER,s,e.glName):t.bindBufferRange(A.UNIFORM_BUFFER,s,e.glName,h,n):t.bindBufferBase(A.UNIFORM_BUFFER,s,null)}}if(this._state.pixelPackBuffer?t.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):t.bindBuffer(A.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?t.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):t.bindBuffer(A.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?t.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):t.bindBuffer(A.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?t.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):t.bindBuffer(A.COPY_WRITE_BUFFER,null),t.bindFramebuffer(D.READ_FRAMEBUFFER,null),t.readBuffer(t.BACK),this._state.readFramebuffer&&(t.bindFramebuffer(D.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),t.readBuffer(O.COLOR_ATTACHMENT0)),t.bindFramebuffer(D.DRAW_FRAMEBUFFER,this._state.drawFramebuffer?.glName??null),this._state.vertexArrayObject){const t=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(t)}t.useProgram(this._state.program?.glName??null),t.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),t.bindRenderbuffer(t.RENDERBUFFER,this._state.renderbuffer?.glName??null),!0===this._state.blend?t.enable(this.gl.BLEND):t.disable(this.gl.BLEND),t.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),t.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),t.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),t.clearDepth(this._state.clearDepth),t.clearStencil(this._state.clearStencil),t.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),t.cullFace(this._state.cullFace),t.depthFunc(this._state.depthFunction),t.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),!0===this._state.depthTest?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),t.depthMask(this._state.depthWrite),t.frontFace(this._state.frontFace),t.lineWidth(1),!0===this._state.faceCulling?t.enable(t.CULL_FACE):t.disable(t.CULL_FACE),t.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),!0===this._state.polygonOffsetFill?t.enable(t.POLYGON_OFFSET_FILL):t.disable(t.POLYGON_OFFSET_FILL),t.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),!0===this._state.scissorTest?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST),t.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),t.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),!0===this._state.stencilTest?t.enable(t.STENCIL_TEST):t.disable(t.STENCIL_TEST),t.stencilMask(this._state.stencilWriteMask);for(let s=0;s<this.parameters.maxTextureImageUnits;s++){t.activeTexture(M+s),t.bindTexture(U.TEXTURE_2D,null),t.bindTexture(U.TEXTURE_CUBE_MAP,null),t.bindTexture(U.TEXTURE_3D,null),t.bindTexture(U.TEXTURE_2D_ARRAY,null);const i=this._state.textureUnitMap[s];null!=i&&t.bindTexture(i.descriptor.target,i.glName)}t.activeTexture(M+this._state.activeTexture);const s=this._state.viewport;t.viewport(s.x,s.y,s.width,s.height),this.resetInfo()}_loadExtensions(){this.gl.getExtension("KHR_parallel_shader_compile")}};function bt(t,s,i,e){return s?e!==s&&t.bindBuffer(i,s.glName):t.bindBuffer(i,null),s}function wt(t,s){switch(t){case x.POINTS:return 2*s;case x.TRIANGLES:return s/3;case x.TRIANGLE_STRIP:case x.TRIANGLE_FAN:return s-2;default:return 0}}export{J as o,vt as w};
//# sourceMappingURL=p-49515cdf.js.map