import{s,e0 as e}from"./p-aad64c9f.js";import{N as o}from"./p-e11049fd.js";const t="upload-assets",r=()=>new Error;class n extends s{constructor(){super(`${t}:unsupported`,"Layer does not support asset uploads.",r())}}class u extends s{constructor(){super(`${t}:no-glb-support`,"Layer does not support glb.",r())}}class a extends s{constructor(){super(`${t}:no-supported-source`,"No supported external source found",r())}}class p extends s{constructor(){super(`${t}:not-base-64`,"Expected gltf data in base64 format after conversion.",r())}}class d extends s{constructor(){super(`${t}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",r())}}class c extends s{constructor(s,e){super(`${t}:bad-response`,`Bad response. Uploaded ${s} items and received ${e} results.`,r())}}class l extends s{constructor(s,e){super(`${t}-layer:upload-failed`,`Failed to upload mesh file ${s}. Error code: ${e?.code??"-1"}. Error message: ${e?.messages??"unknown"}`,r())}}class i extends s{constructor(s){super(`${t}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${s}, but it does not list it in its supported formats.`,r())}}class f extends s{constructor(){super(`${t}:convert3D-failed`,"convert3D failed.")}}class m extends s{constructor(){super("invalid-input:no-model","No supported model found")}}class $ extends s{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}function x(s){const t=1/e(s,1);return 1!==t?new o({scale:[t,t,t]}):void 0}export{c as a,u as b,i as c,l as d,m as i,f as l,$ as m,a as n,d as p,n as r,x as t,p as u};
//# sourceMappingURL=p-a4b98f81.js.map