import{r as t,p as e,q as s,_ as n,bZ as r,n3 as i,n4 as o,n5 as a,jS as c,m as u,Z as l,a7 as h,b6 as f,g as p,E as d,e0 as m,a0 as g,n6 as y,hx as w,n7 as v,b7 as x,iU as b,n8 as F,n9 as A,s as N,kF as j}from"./p-aad64c9f.js";import{a as M,o as R,e as P,l as k,r as C,d as T,i as S,n as I,w as _,j as G,k as B,y as D,p as U,q as z}from"./p-54df2e8e.js";import{a as O,u as L,b as V,C as W,w as E,B as $,d as H,c as q,l as K,f as X,n as Y,r as Z,e as J,g as Q,D as tt,i as et,k as st,p as nt,o as rt,M as it,x as ot}from"./p-7f9df147.js";import{K as at,D as ct}from"./p-a8618b5c.js";let ut=class extends n{constructor(){super(...arguments),this.raster=void 0}};t([e({json:{write:!0}})],ut.prototype,"raster",void 0),ut=t([s("esri.layers.support.rasterFunctions.BaseFunctionArguments")],ut);const lt=ut;var ht;let ft=ht=class extends lt{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new ht({raster:this.raster,raster2:this.raster2,operation:this.operation})}};t([e({json:{write:!0}})],ft.prototype,"operation",void 0),t([e({json:{write:!0}})],ft.prototype,"raster2",void 0),t([e({readOnly:!0})],ft.prototype,"rasters",null),ft=ht=t([s("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],ft);const pt=ft;const dt=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let mt=class extends n{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){e.unshift(...n);const t=[];for(let e=0;e<n.length;e++){const{parameters:s}=n[e],r=s.rasters||s.raster&&[s.raster];r?.length&&t.push(...r)}n=t}for(let t=e.length-1;t>=0;t--)e[t].isNoopProcess&&e.splice(t,1);let r=!1;for(let t=0;t<e.length;t++){const s=e[t];s.id=e.length-t-1;const{rasters:n}=s.parameters;r=r||null!=n&&n.length>1}const i=e.some((({name:t})=>dt.has(t.toLowerCase()))),{rawSourceRasterInfos:o}=this;return{functions:e,hasBranches:r,hasFocalFunction:i,isSourceSingleBand:1===o?.[0]?.bandCount}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let r=!0;for(let s=0;s<n.length;s++){const i=n[s];if(null!=i&&this._isRasterFunctionValue(i)){const n=i.bind(t,e,this.id+s);if(!n.success)return this._bindingResult=n,n;r=r&&n.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map((e=>this._readRasterValue(e,t)));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const e=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=e,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,e)=>t!==e));const s=t.filter((t=>"ExtractBand"===t.functionName));return s.length&&s.forEach(((t,e)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[e,e,e]})),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let s=0;s<t;s++)e.push(s)}const n=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=n.some(((t,e)=>t!==e)),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():"number"==typeof t?{name:"Constant",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];"Clip"===this.functionName&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach((e=>{if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}}));else if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}return t}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.multidimensionalInfo?.variables.forEach((t=>{t.statistics=void 0,t.histograms=void 0}))}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.flatMap((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(0===e.length)return s;const r=e.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&n.includes(t)?s[n.indexOf(t)]:"number"!=typeof t?s[0]:void 0)),i=r.find((t=>t))??s[0];return r.forEach(((t,e)=>{void 0===t&&(r[e]=i)})),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const r=t.sourceRasters[n];if("number"!=typeof r)if("bind"in r)this._getPrimaryRasters(r,e,s);else{const t=r,n=this._getPrimaryRasterId(t);if(null==n)continue;s.includes(n)||(this.mainPrimaryRasterId===n?(e.unshift(t),s.unshift(n)):(e.push(t),s.push(n)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(null==t||"$$"===t){const t=s[0];return null==t?null:t.clone()}if("string"==typeof t){const n=e.primaryRasterIds.indexOf(t);return-1===n?null:s[n]}if("number"==typeof t){const e=s[0];if(null==e)return null;const{width:n,height:r,pixelType:i}=e,o=new Float32Array(n*r);o.fill(t);const a=this.sourceRasterInfos[0].bandCount,c=new Array(a).fill(o);return new M({width:n,height:r,pixelType:i,pixels:c})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:s,statistics:n,histograms:r}=t,i=s.BandProperties;i&&i.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),n&&n.length!==e&&(t.statistics=n.length>e?n.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:"string"==typeof s.BAND_COUNT?String(e):e})}};t([e({json:{write:!0}})],mt.prototype,"functionName",void 0),t([e({json:{write:!0}})],mt.prototype,"functionArguments",void 0),t([e()],mt.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}}),r((t=>t?.toLowerCase()))],mt.prototype,"outputPixelType",void 0),t([e({json:{write:!0}})],mt.prototype,"mainPrimaryRasterId",void 0),t([e()],mt.prototype,"sourceRasters",void 0),t([e({type:[O],json:{write:!0}})],mt.prototype,"sourceRasterInfos",void 0),t([e({json:{write:!0}})],mt.prototype,"rasterInfo",void 0),t([e({json:{write:!0}})],mt.prototype,"readingBufferSize",void 0),t([e({json:{write:!0}})],mt.prototype,"id",void 0),t([e()],mt.prototype,"isNoopProcess",void 0),t([e()],mt.prototype,"supportsGPU",null),t([e()],mt.prototype,"rawInputBandIds",void 0),t([e()],mt.prototype,"rawSourceRasterInfos",void 0),t([e()],mt.prototype,"isInputBandIdsSwizzled",void 0),t([e()],mt.prototype,"swizzledBandSelection",void 0),t([e()],mt.prototype,"isBranch",void 0),t([e({readOnly:!0})],mt.prototype,"flatWebGLFunctionChain",null),t([e()],mt.prototype,"_bindingResult",void 0),mt=t([s("esri.layers.support.rasterFunctions.BaseRasterFunction")],mt);const gt=mt;const yt={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},wt={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},vt={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},xt={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},bt={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},Ft={setNull:50,conditional:78},At={...wt,...vt,...xt,...bt,...Ft};const Nt=new Map([[xt.acos,{domain:[0,Math.PI],isInteger:!1}],[xt.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[xt.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[xt.cos,{domain:[-1,1],isInteger:!1}],[xt.sin,{domain:[-1,1],isInteger:!1}],[vt.booleanAnd,{domain:[0,1],isInteger:!0}],[vt.booleanNot,{domain:[0,1],isInteger:!0}],[vt.booleanOr,{domain:[0,1],isInteger:!0}],[vt.booleanXOr,{domain:[0,1],isInteger:!0}],[vt.equalTo,{domain:[0,1],isInteger:!0}],[vt.notEqual,{domain:[0,1],isInteger:!0}],[vt.greaterThan,{domain:[0,1],isInteger:!0}],[vt.greaterThanEqual,{domain:[0,1],isInteger:!0}],[vt.lessThan,{domain:[0,1],isInteger:!0}],[vt.lessThanEqual,{domain:[0,1],isInteger:!0}],[vt.isNull,{domain:[0,1],isInteger:!0}]]);function jt(t){return Nt.get(t)}const Mt=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function Rt(t,e=!1){const s=t.map((t=>t.mask)),n=s.filter((t=>null!=t)),r=t[0].pixels[0].length;if(0===n.length||e&&n.length!==s.length)return new Uint8Array(r).fill(255);const i=n[0],o=new Uint8Array(i);if(1===n.length)return o;if(!e){for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<o.length;t++)o[t]&&(o[t]=e[t]?255:0)}return o}for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<o.length;t++)0===o[t]&&(o[t]=e[t]?255:0)}return o}function Pt(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]+r[t]);return o}function kt(t,e,s){const[n]=t,r=n.length,i=M.createEmptyBand("f32",r);return i.set(n),i}function Ct(t,e,s){const[n]=t,r=n.length,i=M.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(i[t]=n[t]*n[t]);return i}function Tt(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]-r[t]);return o}function St(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]*r[t]);return o}function It(t,e,s){const[n]=t,r=n.length,i=M.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(i[t]=Math.sign(n[t])*Math.floor(Math.abs(n[t])));return i}function _t(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]/r[t]);return o}function Gt(t,e,s){return _t(t,e,"f32")}function Bt(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=Math.floor(n[t]/r[t]));return o}function Dt(t,e,s,n){const r=t[0],i=r.length,o=M.createEmptyBand(s,i);if(n===xt.atanh){for(let t=0;t<i;t++)if(e[t]){const s=r[t];Math.abs(s)>=1?e[t]=0:o[t]=Math.atanh(s)}return o}const a=n===xt.asin?Math.asin:Math.acos;for(let t=0;t<i;t++)if(e[t]){const s=r[t];Math.abs(s)>1?e[t]=0:o[t]=a(s)}return o}function Ut(t,e,s,n){const[r]=t,i=r.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n(r[t]));return o}function zt(t,e,s,n){const[r,i]=t,o=r.length,a=M.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(a[t]=n(r[t],i[t]));return a}function Ot(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]&r[t]);return o}function Lt(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]<<r[t]);return o}function Vt(t,e,s){const[n]=t,r=n.length,i=M.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(i[t]=~n[t]);return i}function Wt(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]|r[t]);return o}function Et(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]>>r[t]);return o}function $t(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]^r[t]);return o}function Ht(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]&&r[t]?1:0);return o}function qt(t,e,s){const[n]=t,r=n.length,i=M.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(i[t]=n[t]?0:1);return i}function Kt(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]||r[t]?1:0);return o}function Xt(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=(n[t]?1:0)^(r[t]?1:0));return o}function Yt(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]===r[t]?1:0);return o}function Zt(t,e,s,n){const[r]=t,i=r.length,o=M.createEmptyBand(s,i),a=n===Math.E;for(let t=0;t<i;t++)e&&!e[t]||(o[t]=a?Math.exp(r[t]):n**r[t]);return o}function Jt(t,e,s){return Zt(t,e,s,10)}function Qt(t,e,s){return Zt(t,e,s,2)}function te(t,e,s){return Zt(t,e,s,Math.E)}function ee(t,e,s,n){const[r]=t,i=r.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(r[t]<=0?e[t]=0:o[t]=n(r[t]));return o}function se(t,e,s){return ee(t,e,s,Math.log10)}function ne(t,e,s){return ee(t,e,s,Math.log2)}function re(t,e,s){return ee(t,e,s,Math.log)}function ie(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]>r[t]?1:0);return o}function oe(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]>=r[t]?1:0);return o}function ae(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]<r[t]?1:0);return o}function ce(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]<=r[t]?1:0);return o}function ue(t,e,s){const[n]=t,r=n.length,i=M.createEmptyBand(s,r);if(!e)return i;for(let t=0;t<r;t++)i[t]=e[t]?0:1;return i}function le(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]%r[t]);return o}function he(t,e,s){const[n]=t,r=n.length,i=M.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(i[t]=-n[t]);return i}function fe(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]===r[t]?0:1);return o}function pe(t,e,s){const[n,r]=t,i=n.length,o=M.createEmptyBand(s,i),a=new Uint8Array(i);for(let t=0;t<i;t++)null!=e&&!e[t]||0!==n[t]||(o[t]=r[t],a[t]=255);return{band:o,mask:a}}function de(t,e,s){const[n,r,i]=t,o=n.length,a=M.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(a[t]=n[t]?r[t]:i[t]);return a}function me(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,i=r.length,o=M.createEmptyBand(s,i);for(let s=0;s<i;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e<n&&(e=n)}o[s]=e}return o}function ge(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,i=r.length,o=M.createEmptyBand(s,i);for(let s=0;s<i;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e>n&&(e=n)}o[s]=e}return o}function ye(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,i=r.length,o=M.createEmptyBand(s,i);for(let s=0;s<i;s++)if(!e||e[s]){let e=r[s],i=e;for(let r=1;r<n;r++){const n=t[r][s];i<n?i=n:e>n&&(e=n)}o[s]=i-e}return o}function we(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,i=r.length,o=M.createEmptyBand(s,i);for(let s=0;s<i;s++)if(!e||e[s]){let e=0;for(let r=0;r<n;r++)e+=t[r][s];o[s]=e/n}return o}function ve(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,i=r.length,o=M.createEmptyBand(s,i);for(let s=0;s<i;s++)if(!e||e[s])for(let e=0;e<n;e++){const n=t[e];o[s]+=n[s]}return o}function xe(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,i=r.length,o=M.createEmptyBand(s,i);for(let s=0;s<i;s++)if(!e||e[s]){const e=new Float32Array(n);let r=0;for(let i=0;i<n;i++){const n=t[i];r+=n[s],e[i]=n[s]}r/=n;let i=0;for(let t=0;t<n;t++)i+=(e[t]-r)**2;o[s]=Math.sqrt(i/n)}return o}function be(t,e,s){const n=t.length;if(n<2)return t[0];const r=Math.floor(n/2),[i]=t,o=i.length,a=M.createEmptyBand(s,o),c=new Float32Array(n),u=n%2==1;for(let s=0;s<o;s++)if(!e||e[s]){for(let e=0;e<n;e++)c[e]=t[e][s];c.sort(),a[s]=u?c[r]:(c[r]+c[r-1])/2}return a}function Fe(t,e,s){const[n,r]=t;if(null==r)return n;const i=n.length,o=M.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(o[t]=n[t]<r[t]?n[t]:r[t]);return o}function Ae(t,e,s){const n=t.length;if(n<=2)return Fe(t,e,s);const r=t[0].length,i=M.createEmptyBand(s,r),o=new Map;for(let s=0;s<r;s++)if(!e||e[s]){o.clear();for(let e=0;e<n;e++){const n=t[e][s];o.set(n,o.has(n)?o.get(n)+1:1)}let e=0,r=0;const a=[];for(const t of o.keys())e=o.get(t),e>r?(r=e,a.length=0,a.push(t)):e===r&&a.push(t);a.length>1&&a.sort(((t,e)=>t-e)),i[s]=a[0]}return i}function Ne(t,e,s){const n=t.length;if(n<=2)return Fe(t,e,s);const r=t[0].length,i=M.createEmptyBand(s,r),o=new Map;for(let s=0;s<r;s++)if(!e||e[s]){o.clear();for(let e=0;e<n;e++){const n=t[e][s];o.set(n,o.has(n)?o.get(n)+1:1)}let e=0,r=t.length;const a=[];for(const t of o.keys())e=o.get(t),e<r?(r=e,a.length=0,a.push(t)):e===r&&a.push(t);a.length>1&&a.sort(((t,e)=>t-e)),i[s]=a[0]}return i}function je(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,i=r.length,o=M.createEmptyBand(s,i),a=new Set;for(let s=0;s<i;s++)if(!e||e[s]){let e;a.clear();for(let r=0;r<n;r++)e=t[r][s],a.add(e);o[s]=a.size}return o}const Me=new Map,Re=new Map,Pe=new Map,ke=new Map;function Ce(){Me.size||(Me.set(4,Math.sqrt),Me.set(6,Math.acos),Me.set(7,Math.asin),Me.set(8,Math.atan),Me.set(9,Math.atanh),Me.set(10,Math.abs),Me.set(21,Math.cos),Me.set(22,Math.cosh),Me.set(48,Math.floor),Me.set(49,Math.ceil),Me.set(51,Math.sin),Me.set(52,Math.sinh),Me.set(56,Math.tan),Me.set(57,Math.tanh),Me.set(59,Math.acosh),Me.set(60,Math.asinh),Me.set(65,Math.floor),Re.set(5,Math.pow),Re.set(61,Math.atan2),Pe.set(1,Pt),Pe.set(2,Tt),Pe.set(3,St),Pe.set(11,Ot),Pe.set(12,Lt),Pe.set(13,Vt),Pe.set(14,Wt),Pe.set(15,Et),Pe.set(16,$t),Pe.set(17,Ht),Pe.set(18,qt),Pe.set(19,Kt),Pe.set(20,Xt),Pe.set(23,_t),Pe.set(24,Yt),Pe.set(25,te),Pe.set(26,Jt),Pe.set(27,Qt),Pe.set(28,ie),Pe.set(29,oe),Pe.set(30,It),Pe.set(31,ue),Pe.set(32,kt),Pe.set(33,ae),Pe.set(34,ce),Pe.set(35,re),Pe.set(36,se),Pe.set(37,ne),Pe.set(44,le),Pe.set(45,he),Pe.set(46,fe),Pe.set(53,Ct),Pe.set(64,Gt),Pe.set(65,Bt),Pe.set(76,de),Pe.set(78,de),ke.set(38,Ae),ke.set(39,me),ke.set(40,we),ke.set(41,be),ke.set(42,ge),ke.set(43,Ne),ke.set(47,ye),ke.set(54,xe),ke.set(55,ve),ke.set(58,je),ke.set(66,Ae),ke.set(67,me),ke.set(68,we),ke.set(69,be),ke.set(70,ge),ke.set(71,Ne),ke.set(72,ye),ke.set(73,xe),ke.set(74,ve),ke.set(75,je))}function Te(t,e,s={}){Ce();let n=Rt(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=s,a=!ke.has(e)||s.processAsMultiband,c=a?t[0].pixels.length:1,u=[];for(let s=0;s<c;s++){const c=ke.has(e)&&!a?t.flatMap((t=>t.pixels)):t.map((t=>t.pixels[s]));let l,h=!0;if(e===Ft.setNull){const t=pe(c,n,r);l=t.band,n=t.mask,h=!1}else if(Pe.has(e)){l=Pe.get(e)(c,n,"f64")}else if(Me.has(e))l=e===xt.asin||e===xt.acos||e===xt.atanh?Dt(c,n,"f64",e):Ut(c,n,"f64",Me.get(e));else if(Re.has(e))l=zt(c,n,"f64",Re.get(e));else if(ke.has(e)){l=ke.get(e)(c,n,"f64")}else l=c[0],h=!1;if(h&&e!==vt.isNull&&!Nt.has(e)){const t=M.createEmptyBand(r,l.length);n||(n=new Uint8Array(l.length).fill(255)),i(l,n),o(l,n,r,t),l=t}u.push(l)}const l=t[0];return new M({width:l.width,height:l.height,pixelType:r,mask:e===vt.isNull?null:n,pixels:u})}function Se(t,e,s){return Te(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:s})}let Ie=class extends gt{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e;return{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e?.[0]||null==e?.[1]?null:Se(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[n,r]=c(s);const i=a(s);return i&&(n-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[n,r],isOutputRounded:i}}};t([e({json:{write:!0,name:"rasterFunction"}})],Ie.prototype,"functionName",void 0),t([e({type:pt,json:{write:!0,name:"rasterFunctionArguments"}})],Ie.prototype,"functionArguments",void 0),t([e()],Ie.prototype,"rasterArgumentNames",void 0),Ie=t([s("esri.layers.support.rasterFunctions.ArithmeticFunction")],Ie);const _e=Ie;var Ge;let Be=Ge=class extends lt{clone(){return new Ge({raster:this.raster})}};Be=Ge=t([s("esri.layers.support.rasterFunctions.AspectFunctionArguments")],Be);const De=Be;let Ue=class extends gt{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],i=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return L(e,{resolution:i})}};t([e({json:{write:!0,name:"rasterFunction"}})],Ue.prototype,"functionName",void 0),t([e({type:De,json:{write:!0,name:"rasterFunctionArguments"}})],Ue.prototype,"functionArguments",void 0),t([e()],Ue.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],Ue.prototype,"isGCS",void 0),Ue=t([s("esri.layers.support.rasterFunctions.AspectFunction")],Ue);const ze=Ue;const Oe=new Set(["+","-","*","/","(",")"]);function Le(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1));const s=t.split(""),n=[],r=[];let i="";for(let t=0;t<s.length;t++){const o=s[t];Oe.has(o)?(i.length&&r.push(Ve(i,e)),n.push(o),i=""):i=i.concat(o)}return i.length&&r.push(Ve(i,e)),{ops:n,nums:r}}function Ve(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function We(t,e,s,n){if("number"==typeof s&&"number"==typeof n)return s+n;let r,i,o;"number"==typeof s?(o=n,r=o.length,i=new Float32Array(r),i.fill(s)):(r=s.length,i=s,n.constructor===Number?(o=new Float32Array(r),o.fill(n)):o=n);const a=new Float32Array(r);switch(e){case"+":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=i[e]+o[e]);break;case"-":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=i[e]-o[e]);break;case"*":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=i[e]*o[e]);break;case"/":for(let e=0;e<r;e++)(null==t||t[e])&&o[e]&&(a[e]=i[e]/o[e]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return a}function Ee(t,e){t.splice(e,1);let s=0,n=0;do{s=0,n=0;for(let e=0;e<t.length;e++)if("("===t[e])s=e;else if(")"===t[e]){n=e;break}n===s+1&&t.splice(s,2)}while(n===s+1);return t}function $e(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,s=0;for(let n=0;n<t.length;n++)if("("===t[n])e=n;else if(")"===t[n]){s=n;break}const n=0===s?t:t.slice(e+1,s);let r=-1;for(let t=0;t<n.length;t++)if("*"===n[t]||"/"===n[t]){r=t;break}if(r>-1)s>0&&(r+=e+1);else{for(let t=0;t<n.length;t++)if("+"===n[t]||"-"===n[t]){r=t;break}s>0&&(r+=e+1)}let i=0;for(let e=0;e<r;e++)"("===t[e]&&i++;return{opIndex:r,numIndex:r-i}}function He(t,e,s){let n,{ops:r,nums:i}=Le(s,e);if(0===r.length){const t=1===i.length?i[0]:e[0];if(t instanceof Float32Array)return[t];const s=new Float32Array(e[0].length);return"number"==typeof t?s.fill(t):s.set(t),[s]}for(;r.length>0;){const{numIndex:e,opIndex:s}=$e(r);if(n=We(t,r[s],i[e],i[e+1]),1===r.length)break;r=Ee(r,s),i.splice(e,2,n)}return[n]}const qe=new u({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Ke(t,e){if(!R(t))return t;const{equation:s,method:n}=e,r=e.bandIndexes.map((t=>t-1)),{pixels:i,mask:c}=t;let u;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":u=Ze(c,i[r[0]],i[r[1]]);break;case"ndwi":u=Ze(c,i[r[1]],i[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":u=Je(c,i[r[0]],i[r[1]]);break;case"ci-g":case"ci-re":u=Qe(c,i[r[0]],i[r[1]]);break;case"savi":u=ts(c,i[r[0]],i[r[1]],r[2]+1);break;case"tsavi":u=es(c,i[r[0]],i[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":u=ss(c,i[r[0]],i[r[1]]);break;case"gemi":u=ns(c,i[r[0]],i[r[1]]);break;case"pvi":u=rs(c,i[r[0]],i[r[1]],r[2]+1,r[3]+1);break;case"gvitm":u=is(c,[i[r[0]],i[r[1]],i[r[2]],i[r[3]],i[r[4]],i[r[5]]]);break;case"sultan":u=os(c,[i[r[0]],i[r[1]],i[r[2]],i[r[3]],i[r[4]]]);break;case"vari":u=as(c,[i[r[0]],i[r[1]],i[r[2]]]);break;case"mtvi2":u=cs(c,[i[r[0]],i[r[1]],i[r[2]]]);break;case"rtvi-core":u=us(c,[i[r[0]],i[r[1]],i[r[2]]]);break;case"evi":u=ls(c,[i[r[0]],i[r[1]],i[r[2]]]);break;case"wndwi":u=hs(c,[i[r[0]],i[r[1]],i[r[2]]],r[3]?r[3]+1:.5);break;case"bai":u=fs(c,i[r[0]],i[r[1]]);break;case"custom":u=He(c,i,s);break;default:return t}const{outputPixelType:l="f32"}=e,h=null!=l&&a(l);let f;c?(f=new Uint8Array(t.width*t.height),f.set(c)):h&&(f=new Uint8Array(t.width*t.height).fill(255)),h&&(u=u.map((t=>{const e=M.createEmptyBand(l,t.length);return o(t,f,l,e),e})));const p=new M({width:t.width,height:t.height,pixelType:l,pixels:u,mask:f});return p.updateStatistics(),p}function Xe(t,e,s,n){const{mask:r,pixels:i,width:o,height:a}=t,c=i[s],u=i[e],l=u.length,h=n?new Uint8Array(l):new Float32Array(l),f=n?100:1,p=n?100.5:0;for(let t=0;t<l;t++)if(null==r||r[t]){const e=c[t],s=u[t],n=e+s;n&&(h[t]=(e-s)/n*f+p)}const d=new M({width:o,height:a,mask:r,pixelType:n?"u8":"f32",pixels:[h]});return d.updateStatistics(),d}function Ye(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function Ze(t,e,s){const n=s.length,r=new Float32Array(n);for(let i=0;i<n;i++)if(null==t||t[i]){const t=e[i],n=s[i],o=t+n;o&&(r[i]=(t-n)/o)}return[r]}function Je(t,e,s){const n=s.length,r=new Float32Array(n);for(let i=0;i<n;i++)if(null==t||t[i]){const t=e[i],n=s[i];n&&(r[i]=t/n)}return[r]}function Qe(t,e,s){const n=e.length,r=new Float32Array(n);for(let i=0;i<n;i++)if(null==t||t[i]){const t=e[i],n=s[i];n&&(r[i]=t/n-1)}return[r]}function ts(t,e,s,n){const r=s.length,i=new Float32Array(r);for(let o=0;o<r;o++)if(null==t||t[o]){const t=s[o],r=e[o],a=r+t+n;a&&(i[o]=(r-t)/a*(1+n))}return[i]}function es(t,e,s,n,r,i){const o=s.length,a=new Float32Array(o),c=-r*n+i*(1+n*n);for(let i=0;i<o;i++)if(null==t||t[i]){const t=s[i],o=e[i],u=r*o+t+c;u&&(a[i]=n*(o-n*t-r)/u)}return[a]}function ss(t,e,s){const n=s.length,r=new Float32Array(n);for(let i=0;i<n;i++)if(null==t||t[i]){const t=s[i],n=e[i],o=2*n+1;r[i]=.5*(o-Math.sqrt(o*o-8*(n-t)))}return[r]}function ns(t,e,s){const n=s.length,r=new Float32Array(n);for(let i=0;i<n;i++)if(null==t||t[i]){const t=s[i],n=e[i];if(1!==t&&n+t+.5!==0){const e=(2*(n*n-t*t)+1.5*n+.5*t)/(n+t+.5);r[i]=e*(1-.25*e)-(t-.125)/(1-t)}}return[r]}function rs(t,e,s,n,r){const i=s.length,o=new Float32Array(i),a=1/Math.sqrt(1+n*n);for(let c=0;c<i;c++)if(null==t||t[c]){const t=s[c],i=e[c];o[c]=(i-n*t-r)*a}return[o]}function is(t,e){const[s,n,r,i,o,a]=e,c=s.length,u=new Float32Array(c);for(let e=0;e<c;e++)(null==t||t[e])&&(u[e]=-.2848*s[e]-.2435*n[e]-.5436*r[e]+.7243*i[e]+.084*o[e]-.18*a[e]);return[u]}function os(t,e){const[s,n,r,i,o]=e,a=s.length,c=new Float32Array(a),u=new Float32Array(a),l=new Float32Array(a);for(let e=0;e<a;e++)(null==t||t[e])&&(c[e]=o[e]?i[e]/o[e]*100:0,u[e]=s[e]?i[e]/s[e]*100:0,l[e]=r[e]?n[e]/r[e]*(i[e]/r[e])*100:0);return[c,u,l]}function as(t,e){const[s,n,r]=e,i=s.length,o=new Float32Array(i);for(let e=0;e<i;e++)if(null==t||t[e])for(e=0;e<i;e++){const t=s[e],i=n[e],a=i+t-r[e];a&&(o[e]=(i-t)/a)}return[o]}function cs(t,e){const[s,n,r]=e,i=s.length,o=new Float32Array(i);for(let e=0;e<i;e++)if(null==t||t[e])for(e=0;e<i;e++){const t=s[e],i=n[e],a=r[e],c=Math.sqrt((2*t+1)**2-(6*t-5*Math.sqrt(i))-.5);if(c){const s=1.5*(1.2*(t-a)-2.5*(i-a));o[e]=s/c}}return[o]}function us(t,e){const[s,n,r]=e,i=s.length,o=new Float32Array(i);for(let e=0;e<i;e++)if(null==t||t[e])for(e=0;e<i;e++){const t=s[e],i=n[e],a=r[e];o[e]=100*(t-i)-10*(t-a)}return[o]}function ls(t,e){const[s,n,r]=e,i=s.length,o=new Float32Array(i);for(let e=0;e<i;e++)if(null==t||t[e])for(e=0;e<i;e++){const t=s[e],i=n[e],a=t+6*i-7.5*r[e]+1;a&&(o[e]=2.5*(t-i)/a)}return[o]}function hs(t,e,s=.5){const[n,r,i]=e,o=r.length,a=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=n[e],o=r[e],c=i[e],u=t+s*o+(1-s)*c;u&&(a[e]=(t-s*o-(1-s)*c)/u)}return[a]}function fs(t,e,s){const n=s.length,r=new Float32Array(n);for(let i=0;i<n;i++)if(null==t||t[i])for(i=0;i<n;i++){const t=(.1-e[i])**2+(.06-s[i])**2;t&&(r[i]=1/t)}return[r]}var ps;let ds=ps=class extends lt{constructor(){super(...arguments),this.method="custom"}clone(){return new ps({method:this.method,bandIndexes:this.bandIndexes,raster:h(this.raster)})}};t([e({json:{type:String,write:!0}})],ds.prototype,"bandIndexes",void 0),t([l(qe)],ds.prototype,"method",void 0),ds=ps=t([s("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],ds);const ms=ds;const gs=new Set(["vari","mtvi2","rtvi-core","evi"]);let ys=class extends gt{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();e.pixelType=this.outputPixelType,e.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e;return{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:s,bandIndexes:n}=this.functionArguments,r=n.split(" ").map((t=>parseFloat(t)));return Ke(e,{method:s,bandIndexes:r,equation:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const r=new Float32Array(3),{method:i}=this.functionArguments;switch(i){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=Ye([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=Ye([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=Ye([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=Ye([e[0],e[1],0]),n="ci";break;case"savi":s=Ye([e[0],e[1],0]),n="savi",r[0]=t[2]+1;break;case"tsavi":s=Ye([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":s=Ye([e[0],e[1],0]),n="msavi";break;case"gemi":s=Ye([e[0],e[1],0]),n="gemi";break;case"pvi":s=Ye([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":s=Ye([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=Ye([e[0],e[1],e[2]]),n="mtvi";break;case"rtvi-core":s=Ye([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=Ye([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=Ye([e[0],e[1],0]),n="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":s=Ye([e[1],e[0],0]),n="bai";break;default:s=Ye([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:r,isOutputRounded:a(this.outputPixelType)}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1)),s=t.length,n=e.map((t=>t>=s?s-1:t)),r=gs.has(this.functionArguments.method)?3:2,i=n.slice(0,r).map((e=>t[e]));return 2===i.length&&i.push(0),i}};t([e({json:{write:!0,name:"rasterFunction"}})],ys.prototype,"functionName",void 0),t([e({type:ms,json:{write:!0,name:"rasterFunctionArguments"}})],ys.prototype,"functionArguments",void 0),t([e()],ys.prototype,"rasterArgumentNames",void 0),ys=t([s("esri.layers.support.rasterFunctions.BandArithmeticFunction")],ys);const ws=ys;var vs;const xs=new u({1:"outside",2:"inside"},{useNumericKeys:!0});let bs=vs=class extends lt{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new vs({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};t([e({types:f,json:{read:p,write:!0}})],bs.prototype,"clippingGeometry",void 0),t([e({json:{read:xs.read,write:xs.write}})],bs.prototype,"clippingType",void 0),bs=vs=t([s("esri.layers.support.rasterFunctions.ClipFunctionArguments")],bs);const Fs=bs;function As(t,e){if(t.spatialReference.equals(e))return t;const s=m(t.spatialReference),n=m(e);if(s===n)return t;const r=s/n;return{x:t.x*r,y:t.y*r}}async function Ns(t,e,s){if("extent"===s.type)return Ms(t,e,s);const{width:n,height:r}=t,i=new Uint8Array(n*r),{contains:o,intersects:a}=await import("./p-f2208ccc.js");return a(e,s)?"polyline"===s.type?Rs(t,e,s):o(s,e)?t:js(t,e,s):new M({pixelType:t.pixelType,width:n,height:r,mask:i,maskIsAlpha:!1,pixels:[...t.pixels]})}function js(t,e,s){if(!t)return t;const{width:n,height:r}=t,i=e.width/n,o=e.height/r,{xmin:a,ymax:c}=e;let u;if("extent"===s.type){const t=(s.xmin-a)/i,e=(s.xmax-a)/i,n=(c-s.ymax)/o,r=(c-s.ymin)/o;u=[[[t,n],[t,r],[e,r],[e,n],[t,n]]]}else u=s.rings.map((t=>t.map((([t,e])=>[(t-a)/i,(c-e)/o]))));const l=document.createElement("canvas");l.width=n,l.height=r;const h=l.getContext("2d");h.fillStyle="#f00",h.beginPath(),u.forEach((t=>{h.moveTo(t[0][0],t[0][1]);for(let e=0;e<t.length;e++)h.lineTo(t[e][0],t[e][1]);h.closePath()})),h.fill();const f=h.getImageData(0,0,n,r).data,p=t.mask,d=n*r,m=new Uint8Array(d);for(let t=0;t<d;t++)p&&!p[t]||(m[t]=f[4*t+3]>127?255:0);return new M({pixelType:t.pixelType,width:n,height:r,mask:m,maskIsAlpha:!1,pixels:[...t.pixels]})}function Ms(t,e,s){const{width:n,height:r}=t,i=new Uint8Array(n*r),o=e.width/n,a=e.height/r;if(s.width/o<.5||s.height/a<.5)return new M({pixelType:t.pixelType,width:n,height:r,mask:i,pixels:[...t.pixels]});const{xmin:c,xmax:u,ymin:l,ymax:h}=e,{xmin:f,xmax:p,ymin:d,ymax:m}=s,g=Math.max(c,f),y=Math.min(u,p),w=Math.max(l,d),v=Math.min(h,m),x=.5*o,b=.5*a;if(y-g<x||v-w<b||y<c+x||g>u-x||w>h-b||v<l+b)return new M({pixelType:t.pixelType,width:n,height:r,mask:i,pixels:[...t.pixels]});const F=Math.max(0,(g-c)/o),A=Math.min(n,Math.max(0,(y-c)/o)),N=Math.max(0,(h-v)/a),j=Math.min(r,Math.max(0,(h-w)/a)),R=Math.round(F),P=Math.round(A)-1,k=Math.round(N),C=Math.round(j)-1;if(R===P&&F%1>.5&&A%1<.5||k===C&&N%1>.5&&j%1<.5)return new M({pixelType:t.pixelType,width:n,height:r,mask:i,pixels:[...t.pixels]});if(0===R&&0===k&&P===n&&C===r)return t;const T=t.mask;for(let t=k;t<=C;t++)for(let e=R;e<=P;e++){const s=t*n+e;i[s]=T?T[s]:255}return new M({pixelType:t.pixelType,width:n,height:r,mask:i,pixels:[...t.pixels]})}function Rs(t,e,s){const{width:n,height:r}=t,i=new Uint8Array(n*r),o=e.width/n,a=e.height/r,{xmin:c,ymax:u}=e,{paths:l}=s,h=t.mask;for(let t=0;t<l.length;t++){const e=l[t];for(let t=0;t<e.length-1;t++){const[s,l]=e[t],[f,p]=e[t+1];let d=Math.floor((u-l)/a),m=Math.floor((u-p)/a);if(m<d){const t=d;d=m,m=t}d=Math.max(0,d),m=Math.min(r-1,m);const g=(f-s)/(p-l);for(let t=d;t<=m;t++){const e=t===d?Math.max(l,p):(r+1-t)*a,u=t===m?Math.min(l,p):e-a;let y=p===l?Math.floor((s-c)/o):Math.floor((g*(e-l)+s-c)/o),w=p===l?Math.floor((f-c)/o):Math.floor((g*(u-l)+s-c)/o);if(w<y){const t=y;y=w,w=t}const v=t*n;y=Math.max(0,y),w=Math.min(n-1,w);for(let t=v+y;t<=v+w;t++)i[t]=h?h[t]:255}}}return new M({pixelType:t.pixelType,width:n,height:r,mask:i,pixels:[...t.pixels]})}function Ps(t,e){const{extent:s}=ks(t,e,new g({x:t.pixelSize.x,y:t.pixelSize.y,spatialReference:t.spatialReference})),{extent:n}=t.extent;if(s.xmax=Math.min(s.xmax,n.xmax),s.ymax=Math.min(s.ymax,n.ymax),s.xmin<s.xmax&&s.ymin<s.ymax){const{x:e,y:n}=t.pixelSize,r=Math.round(s.width/e),i=Math.round(s.height/n);t.extent=s,t.width=r,t.height=i}}function ks(t,e,s,n=!0){const{spatialReference:r}=t,{x:i,y:o}=As(s,r);let a,c,u;const l="extent"===e.type?e:e.extent;let{xmin:h,xmax:f,ymax:p,ymin:m}=l;const{xmin:g,ymax:y}=t.extent;return n?(h=g+(h>g?i*Math.round((h-g)/i):0),p=y-(p<y?o*Math.round((y-p)/o):0),f=g+(f>g?i*Math.round((f-g)/i):0),m=y-(m<y?o*Math.round((y-m)/o):0),a=new d({xmin:h,ymax:p,xmax:f,ymin:m,spatialReference:r}),c=Math.round(a.width/i),u=Math.round(a.height/o)):(c=Math.floor((f-h)/i+.8),u=Math.floor((p-m)/o+.8),h=g+(h>g?i*Math.floor((h-g)/i+.1):0),p=y-(p<y?o*Math.floor((y-p)/o+.1):0),f=h+c*i,m=p-u*o,a=new d({xmin:h,ymax:p,xmax:f,ymin:m,spatialReference:r})),{extent:a,width:c,height:u}}let Cs=class extends gt{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:s,clippingType:n}=e;if(!s)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if("outside"===n)try{const{spatialReference:e}=t,n="extent"===s.type?at(s,e):ct(s,e).extent;n&&Ps(t,n)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};t([e({json:{write:!0,name:"rasterFunction"}})],Cs.prototype,"functionName",void 0),t([e({type:Fs,json:{write:!0,name:"rasterFunctionArguments"}})],Cs.prototype,"functionArguments",void 0),t([e()],Cs.prototype,"rasterArgumentNames",void 0),t([e()],Cs.prototype,"isNoopProcess",void 0),Cs=t([s("esri.layers.support.rasterFunctions.ClipFunction")],Cs);const Ts=Cs;var Ss;let Is=Ss=class extends lt{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return W.includes(e)?e:null}readColorRamp(t){return v(t)}readColorRampName(t,e){if(!t)return null;const s=V.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return s?V.fromJSON(s):null}clone(){return new Ss({colormap:h(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};t([e({type:[[Number]],json:{write:!0}})],Is.prototype,"colormap",void 0),t([e({type:String,json:{write:!0}})],Is.prototype,"colormapName",void 0),t([r("colormapName")],Is.prototype,"castColormapName",null),t([e({types:y,json:{write:!0}})],Is.prototype,"colorRamp",void 0),t([w("colorRamp")],Is.prototype,"readColorRamp",null),t([e({type:V.apiValues,json:{type:V.jsonValues,write:V.write}})],Is.prototype,"colorRampName",void 0),t([w("colorRampName")],Is.prototype,"readColorRampName",null),Is=Ss=t([s("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],Is);const _s=Is;const Gs=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Bs=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Ds(t,e){const s=[],n=[];for(let e=0;e<t.length-1;e++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[e].slice(1),toColor:t[e+1].slice(1)}),n.push(t[e+1][0]-t[e][0]);const r=t[t.length-1][0];return E({type:"multipart",colorRamps:s},{numColors:r,weights:e=e??n})}function Us(){return Ds([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function zs(){const t=Ds([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}function Os(){return E({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function Ls(){const t=[];for(let e=0;e<256;e++){const e=[];for(let t=0;t<3;t++)e.push(Math.round(255*Math.random()));t.push(e)}return t}function Vs(){return Ds([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function Ws(t){let e;switch(t){case"elevation":e=Us();break;case"gray":e=Os();break;case"hillshade":e=Vs();break;case"ndvi":e=Gs;break;case"ndvi2":e=zs();break;case"ndvi3":e=Bs;break;case"random":e=Ls()}return e?(e=e.map(((t,e)=>[e,...t])),e):null}let Es=class extends gt{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:r}=this.functionArguments;if(!e?.length)if(n)this.colorRamp=n,e=$(n,{interpolateAlpha:!0});else if(r){const t=H(r);t&&(e=$(t),this.colorRamp=v(t))}else s&&(e=Ws(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const i=this._getOutputPixelType(t.pixelType);this.outputPixelType=i.startsWith("f")?"s32":i;const o=t.clone();return o.pixelType=this.outputPixelType,o.colormap=e,o.bandCount=1,this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||a(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};t([e({json:{write:!0,name:"rasterFunction"}})],Es.prototype,"functionName",void 0),t([e({type:_s,json:{write:!0,name:"rasterFunctionArguments"}})],Es.prototype,"functionArguments",void 0),t([e()],Es.prototype,"rasterArgumentNames",void 0),t([e()],Es.prototype,"isNoopProcess",void 0),t([e({json:{write:!0}})],Es.prototype,"indexedColormap",void 0),t([e()],Es.prototype,"colorRamp",void 0),Es=t([s("esri.layers.support.rasterFunctions.ColormapFunction")],Es);const $s=Es;var Hs;let qs=Hs=class extends lt{clone(){return new Hs({raster:this.raster})}};qs=Hs=t([s("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],qs);const Ks=qs;let Xs=class extends gt{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||!t.colormap?.length)return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const s=[...t.colormap].sort(((t,e)=>t[0]-e[0])),{indexedColormap:n,offset:r}=P({colormap:s});return n?(this.lookup={indexedColormap:n,offset:r},{success:!0,supportsGPU:q(n)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){let e=t.pixelBlocks?.[0];if(!e||!this.lookup)return e;e=e.clone();const s=e.pixels[0],n=e.mask??new Uint8Array(s.length).fill(255),r=new Uint8Array(s.length),i=new Uint8Array(s.length),o=new Uint8Array(s.length),{indexedColormap:a,offset:c}=this.lookup,u=a.length;for(let t=0;t<s.length;t++)if(n[t]){let e=4*(s[t]-c);e<0||e>u-4?n[t]=0:(r[t]=a[e++],i[t]=a[e++],o[t]=a[e++])}return e.pixels=[r,i,o],e.statistics=[new k(0,255),new k(0,255),new k(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};t([e({json:{write:!0,name:"rasterFunction"}})],Xs.prototype,"functionName",void 0),t([e({type:Ks,json:{write:!0,name:"rasterFunctionArguments"}})],Xs.prototype,"functionArguments",void 0),t([e()],Xs.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],Xs.prototype,"lookup",void 0),Xs=t([s("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],Xs);const Ys=Xs;var Zs;let Js=Zs=class extends lt{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Zs({rasters:h(this.rasters)})}};t([e({json:{write:!0}})],Js.prototype,"rasters",void 0),t([x("rasters")],Js.prototype,"writeRasters",null),Js=Zs=t([s("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],Js);const Qs=Js;let tn=class extends gt{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map((({bandCount:t})=>t)).reduce(((t,e)=>t+e)),t.every((({statistics:t})=>null!=t&&t.length))){const e=[];t.forEach((({statistics:t})=>null!=t&&e.push(...t))),s.statistics=e}if(t.every((({histograms:t})=>null!=t&&t.length))){const e=[];t.forEach((({histograms:t})=>null!=t&&e.push(...t))),s.histograms=e}s.multidimensionalInfo&&s.multidimensionalInfo.variables.forEach((e=>{const s=t.map((t=>t.multidimensionalInfo?.variables.find((({name:t})=>t===e.name)))),n=s.map((t=>t?.statistics?.length?t.statistics:null)),r=s.map((t=>t?.histograms?.length?t.histograms:null));e.statistics=n.every((t=>null!=t))?n.flat():null,e.histograms=r.every((t=>null!=t))?r.flat():null})),s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=t.every((t=>t.keyProperties.BandProperties?.length))?t.flatMap((t=>t.keyProperties.BandProperties)):void 0;s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s;return{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;if(!e)return null;const s=e?.[0];return null==s?null:C(e)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};t([e({json:{write:!0,name:"rasterFunction"}})],tn.prototype,"functionName",void 0),t([e({type:Qs,json:{write:!0,name:"rasterFunctionArguments"}})],tn.prototype,"functionArguments",void 0),t([e()],tn.prototype,"rasterArgumentNames",void 0),tn=t([s("esri.layers.support.rasterFunctions.CompositeBandFunction")],tn);const en=tn;const sn=new u({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),nn=new u({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function rn(t,e,s,n){const[r,i]=t,o=a(s)&&!a(r.pixelType)&&!a(i.pixelType),c=[r.mask,i.mask].filter((t=>t)),u=M.combineBandMasks(c),l=t.map((t=>t.pixels[0])),{width:h,height:f}=r,p=M.createEmptyBand(s,h*f);switch(e){case"difference":case"relative-difference":on({bands:l,mask:u,outBand:p,isRoundingNeeded:o,isRelative:"relative-difference"===e});break;case"categorical":an({bands:l,mask:u,outBand:p,...n});break;case"euclidean-distance":cn({pixels:t.map((t=>t.pixels)),mask:u,outBand:p});break;case"angle-difference":un({pixels:t.map((t=>t.pixels)),mask:u,outBand:p});break;case"band-with-most-change":ln({pixels:t.map((t=>t.pixels)),mask:u,outBand:p})}const d=new M({width:h,height:f,pixels:[p],pixelType:s,mask:u});return d.updateStatistics(),d}function on(t){const{bands:[e,s],mask:n,isRelative:r,isRoundingNeeded:i,outBand:o}=t,a=e.length;for(let t=0;t<a;t++)if(!n||n[t]){let n=e[t]-s[t];if(r){const r=Math.max(Math.abs(e[t])-Math.abs(s[t]));n=r>0?n/r:0}o[t]=i?Math.round(n):n}}function an(t){const{bands:[e,s],categoryIndexLookups:[n,r],classNames:[i,o],mask:a,keepMethod:c,outBand:u}=t,l=e.length,h=i.length,f=o.length,p=h*f,d=p+1,m=p+2;for(let t=0;t<l;t++)if(!a||a[t]){const a=e[t],l=s[t],h=n[a],g=r[l],y=i[h],w=o[g];u[t]=null==h||null==g?p:"changed"===c&&y===w?d:"unchanged"===c&&y!==w?m:h*f+g}}function cn(t){const{pixels:[e,s],mask:n,outBand:r}=t,i=e[0].length,o=e.length;for(let t=0;t<i;t++)if(!n||n[t]){let n=0;for(let r=0;r<o;r++){const i=e[r][t]-s[r][t];n+=i*i}r[t]=Math.sqrt(n)}}function un(t){const{pixels:[e,s],mask:n,outBand:r}=t,i=e[0].length,o=e.length;for(let t=0;t<i;t++)if(!n||n[t]){let n=0,i=0,a=0;for(let r=0;r<o;r++){const o=e[r][t],c=s[r][t];n+=o*c,i+=o*o,a+=c*c}const c=Math.sqrt(i*a);r[t]=c?Math.acos(n/c):1.5707963267948966}}function ln(t){const{pixels:[e,s],mask:n,outBand:r}=t,i=e[0].length,o=e.length;for(let t=0;t<i;t++)if(!n||n[t]){let n=0,i=0;for(let r=0;r<o;r++){const o=Math.abs(e[r][t]-s[r][t]);o>n&&(n=o,i=r)}r[t]=i}}var hn;let fn=hn=class extends lt{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new hn({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};t([l(sn)],fn.prototype,"method",void 0),t([l(nn)],fn.prototype,"keepMethod",void 0),t([e({json:{write:!0}})],fn.prototype,"raster2",void 0),t([e({readOnly:!0})],fn.prototype,"rasters",null),fn=hn=t([s("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],fn);const pn=fn;let dn=class extends gt{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),"categorical"===t){const t=this.sourceRasterInfos.map((t=>t.attributeTable)),s=this._getFieldNames(t,"value"),n=t.map((t=>this._getClassFieldName(t)));if(null==s[0]||null==s[1]||null==n[0]||null==n[1])return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,s,n)}e.bandCount=1,this.rasterInfo=e;return{success:!0,supportsGPU:"difference"===t||"relative-difference"===t}}_processPixels(t){const{pixelBlocks:e}=t;if(null==e?.[0]||null==e?.[1])return null;const{method:s}=this.functionArguments;return rn(e,s,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,s]=c(t);const n=a(t);return n&&(e-=1e-4,s+=1e-4),{method:this.functionArguments.method,domainRange:[e,s],isOutputRounded:n}}_updateAttributeTable(t,e,s){const n=this.sourceRasterInfos.map((t=>t.attributeTable)),r=n.map(((t,s)=>t.features.map((t=>t.attributes[e[s]])))),i=n.map(((t,e)=>t.features.map((t=>t.attributes[s[e]])))),o=r.map((t=>{const e=[];return t.forEach(((t,s)=>e[t]=s)),e})),{keepMethod:a}=this.functionArguments;this._categoryConfig={categoryIndexLookups:o,classNames:i,keepMethod:a};const c=n[0].clone();c.fields=[new b({name:"OID",type:"oid"}),new b({name:"Value",type:"integer"}),new b({name:"ClassName",type:"string"}),new b({name:"Class_From",type:"string"}),new b({name:"Class_To",type:"string"})];const u=this._getFieldNames(n,"red"),l=this._getFieldNames(n,"green"),h=this._getFieldNames(n,"blue"),f=[],p=2===u.length&&2===l.length&&2===h.length;p&&(f.push(...n.map(((t,e)=>t.features.map((t=>[t.attributes[u[e]],t.attributes[l[e]],t.attributes[h[e]]]))))),c.fields.push(new b({name:"Red",type:"integer"}),new b({name:"Green",type:"integer"}),new b({name:"Blue",type:"integer"})));const d=c.features[0].clone();d.geometry=null;const m=[],[g,y]=r.map((t=>t.length));let w=1;for(let t=0;t<g;t++){const e=i[0][t];for(let s=0;s<y;s++){const n=i[1][s];if("changed"===a&&e===n||"unchanged"===a&&e!==n)continue;const r=d.clone();r.attributes={OID:w++,Value:t*y+s,ClassName:e===n?e:`${e} -> ${n}`,Class_From:e,Class_To:n},p&&(r.attributes.Red=f[0][t][0]+f[1][s][0]>>1,r.attributes.Green=f[0][t][1]+f[1][s][1]>>1,r.attributes.Blue=f[0][t][2]+f[1][s][2]>>1),m.push(r)}}if("changed"===a){const t=d.clone();t.attributes={OID:w++,Value:g*y+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},m.push(t)}else if("unchanged"===a){const t=d.clone();t.attributes={OID:w++,Value:g*y+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},m.push(t)}c.features=m,t.attributeTable=c}_getFieldNames(t,e){return t.map((({fields:t})=>t.find((t=>t.name.toLowerCase()===e))?.name)).filter((t=>t))}_getClassFieldName(t){const e=t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().startsWith("class")))??t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().includes("class")||t.name.toLowerCase().includes("type")||t.name.toLowerCase().includes("name")))??t.fields.find((t=>"string"===t.type));return e?.name}};t([e({json:{write:!0,name:"rasterFunction"}})],dn.prototype,"functionName",void 0),t([e({type:pn,json:{write:!0,name:"rasterFunctionArguments"}})],dn.prototype,"functionArguments",void 0),t([e()],dn.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],dn.prototype,"_categoryConfig",void 0),dn=t([s("esri.layers.support.rasterFunctions.ComputeChangeFunction")],dn);const mn=dn;var gn;let yn=gn=class extends lt{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new gn({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};t([e({json:{write:!0}})],yn.prototype,"contrastOffset",void 0),t([e({json:{write:!0}})],yn.prototype,"brightnessOffset",void 0),yn=gn=t([s("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],yn);const wn=yn;let vn=class extends gt{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if("u8"!==e.pixelType)return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:n,brightnessOffset:r}=this.functionArguments;return this.lookup=K(n,r),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:T(e,{lut:e.pixels.map((()=>this.lookup)),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};t([e({json:{write:!0,name:"rasterFunction"}})],vn.prototype,"functionName",void 0),t([e({type:wn,json:{write:!0,name:"rasterFunctionArguments"}})],vn.prototype,"functionArguments",void 0),t([e()],vn.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],vn.prototype,"lookup",void 0),vn=t([s("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],vn);const xn=vn;function bn(t,e,s,n,r){const i=Math.floor(n/2);for(let n=0;n<i;n++)for(let i=0;i<e;i++)t[n*e+i]=t[(r-1-n)*e+i],t[(s-1-n)*e+i]=t[(s-r+n)*e+i];const o=Math.floor(r/2);for(let n=0;n<s;n++){const s=n*e;for(let n=0;n<o;n++)t[s+n]=t[s+r-1-n],t[s+e-n-1]=t[s+e+n-r]}}const Fn=new Map;function An(t){const e=Math.sqrt(t.length),s=t.slice(0,e),n=[1];for(let s=1;s<e;s++){let r=null;for(let n=0;n<e;n++){const i=t[n+s*e],o=t[n];if(null==r)if(0===o){if(i)return{separable:!1,row:null,col:null}}else r=i/o;else if(i/o!==r)return{separable:!1,row:null,col:null}}if(null==r)return{separable:!1,row:null,col:null};n.push(r)}return{separable:!0,row:s,col:n}}function Nn(t,e,s,n,r,i,o){const a=new Float32Array(e*s),c=i.length,u=o?0:n,l=o?n:0,h=o?1:e;for(let o=u;o<s-u;o++){const s=o*e;for(let o=l;o<e-l;o++){if(r&&!r[s+o])continue;let e=0;for(let r=0;r<c;r++)e+=t[s+o+(r-n)*h]*i[r];a[s+o]=e}}return a}function jn(t,e,s,n,r,i,o){const a=new Float32Array(e*s),c=Math.floor(n/2),u=Math.floor(r/2);for(let l=c;l<s-c;l++){const s=l*e;for(let l=u;l<e-u;l++){if(i&&!i[s+l])continue;let h=0;for(let i=0;i<n;i++)for(let n=0;n<r;n++)h+=t[s+l+(i-c)*e+n-u]*o[i*r+n];a[s+l]=h}}return a}function Mn(t,e,s=!0){const{pixels:n,width:r,height:i,pixelType:o,mask:a}=t,c=n.length,u=[],{kernel:l,rows:h,cols:f}=e;for(let t=0;t<c;t++){const e=jn(n[t],r,i,h,f,a,l);s&&bn(e,r,i,h,f),u.push(e)}return new M({width:r,height:i,pixelType:o,pixels:u,mask:a})}function Rn(t,e,s,n=!0){const{pixels:r,width:i,height:o,pixelType:a,mask:c}=t,u=r.length,l=[],h=e.length,f=s.length,p=Math.floor(h/2),d=Math.floor(f/2);for(let t=0;t<u;t++){let a=Nn(r[t],i,o,p,c,e,!0);a=Nn(a,i,o,d,c,s,!1),n&&bn(a,i,o,h,f),l.push(a)}return new M({width:i,height:o,pixelType:a,pixels:l,mask:c})}function Pn(t,e){const s=An(e.kernel),n=!1!==e.mirrorEdges,r=s.separable?Rn(t,s.row,s.col,n):Mn(t,e,n),{outputPixelType:i}=e;return i&&r.clamp(i),r}Fn.set(yt.none,[0,0,0,0,1,0,0,0,0]),Fn.set(yt.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),Fn.set(yt.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),Fn.set(yt.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),Fn.set(yt.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),Fn.set(yt.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),Fn.set(yt.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),Fn.set(yt.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),Fn.set(yt.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),Fn.set(yt.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),Fn.set(yt.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),Fn.set(yt.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),Fn.set(yt.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),Fn.set(yt.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),Fn.set(yt.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),Fn.set(yt.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),Fn.set(yt.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),Fn.set(yt.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),Fn.set(yt.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),Fn.set(yt.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),Fn.set(yt.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),Fn.set(yt.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),Fn.set(yt.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var kn;let Cn=kn=class extends lt{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=Fn.get(t);if(!e||t===yt.userDefined||t===yt.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new kn({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:h(this.raster)})}};t([e({json:{type:Number,write:!0}})],Cn.prototype,"rows",void 0),t([e({json:{type:Number,write:!0}})],Cn.prototype,"cols",void 0),t([e({json:{name:"type",type:Number,write:!0}})],Cn.prototype,"convolutionType",null),t([e({json:{type:[Number],write:!0}})],Cn.prototype,"kernel",void 0),Cn=kn=t([s("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],Cn);const Tn=Cn;const Sn=25;let In=class extends gt{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce(((t,e)=>t+e));return-1===e||0===s||1===s?t:t.map((t=>t/s))}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(yt).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==yt.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const i=r.clone();i.pixelType=this.outputPixelType;const o=[yt.none,yt.sharpen,yt.sharpen2,yt.sharpening3x3,yt.sharpening5x5];(-1===t||"u8"!==this.outputPixelType&&!o.includes(t))&&(i.statistics=null,i.histograms=null),i.colormap=null,i.attributeTable=null,this.rasterInfo=i;return{success:!0,supportsGPU:n.length<=Sn}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===yt.none)return e;const{rows:s,cols:n}=this.functionArguments,{_normalizedKernel:r}=this;return Pn(e,{kernel:r,rows:s,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(Sn);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:c(this.outputPixelType)}}};t([e({json:{write:!0,name:"rasterFunction"}})],In.prototype,"functionName",void 0),t([e({type:Tn,json:{write:!0,name:"rasterFunctionArguments"}})],In.prototype,"functionArguments",void 0),t([e()],In.prototype,"rasterArgumentNames",void 0),t([e()],In.prototype,"_normalizedKernel",null),In=t([s("esri.layers.support.rasterFunctions.ConvolutionFunction")],In);const _n=In;var Gn;const Bn=new u({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let Dn=Gn=class extends lt{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return Bn.fromJSON(e.type??e.curvatureType??0)}clone(){return new Gn({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};t([e({json:{write:{target:"type"}}}),l(Bn)],Dn.prototype,"curvatureType",void 0),t([w("curvatureType",["type","curvatureType"])],Dn.prototype,"readCurvatureType",null),t([e({type:Number,json:{write:!0}})],Dn.prototype,"zFactor",void 0),Dn=Gn=t([s("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Dn);const Un=Dn;let zn=class extends gt{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:r,primaryPixelSizes:i}=t,o=i?.[0],a=o??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),c=this.isGCS&&s>=1?s*Y:s;return X(e,{zFactor:c,curvatureType:n,resolution:a})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Y:t}}};t([e({json:{write:!0,name:"rasterFunction"}})],zn.prototype,"functionName",void 0),t([e({type:Un,json:{write:!0,name:"rasterFunctionArguments"}})],zn.prototype,"functionArguments",void 0),t([e()],zn.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],zn.prototype,"isGCS",void 0),zn=t([s("esri.layers.support.rasterFunctions.CurvatureFunction")],zn);const On=zn;var Ln;let Vn=Ln=class extends lt{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=S.bestMatch}clone(){return new Ln({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};t([e({json:{write:!0}})],Vn.prototype,"bandIds",void 0),t([e({json:{write:!0}})],Vn.prototype,"bandNames",void 0),t([e({json:{write:!0}})],Vn.prototype,"bandWavelengths",void 0),t([l({0:"name",1:"wavelength",2:"id"})],Vn.prototype,"method",void 0),t([e({json:{write:!0}})],Vn.prototype,"missingBandAction",void 0),t([e({json:{write:!0}})],Vn.prototype,"wavelengthMatchTolerance",void 0),Vn=Ln=t([s("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],Vn);const Wn=Vn;let En=class extends gt{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:n,bandNames:r,bandWavelengths:i,bandIds:o,missingBandAction:a}=t,c=r?.length&&("name"===n||"id"!==n&&!o?.length),u=i?.length&&("wavelength"===n||"id"!==n&&!o?.length),l=a===S.fail,h=c?Hn(s,r):u?Kn(s,i,this.functionArguments,l):qn(s,o,l);if(null==h){return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${c?"band names":u?"band wavelengths":"band ids"} for the imagery data source`}}this.functionArguments.bandIds=h,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const f=s.clone();f.pixelType=this.outputPixelType,f.bandCount=h.length;const{statistics:p,histograms:d}=f;null!=p&&p.length&&(f.statistics=h.map((t=>p[t]||p[p.length-1]))),null!=d&&d.length&&(f.histograms=h.map((t=>d[t]||d[d.length-1]))),f.multidimensionalInfo&&f.multidimensionalInfo.variables.forEach((t=>{const{statistics:e,histograms:s}=t;null!=e&&e.length&&(t.statistics=h.map((t=>e[t]||e[e.length-1]))),null!=s&&s.length&&(t.histograms=h.map((t=>s[t]||s[s.length-1])))}));let m=f.keyProperties?.BandProperties;m?.length&&(m=h.map((t=>t>=m.length?m[m.length-1]:m[t])),f.keyProperties={...f.keyProperties,BandProperties:m}),this.rasterInfo=f;return{success:!0,supportsGPU:f.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map((t=>t>=s?s-1:t));return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:Ye(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}};t([e({json:{write:!0,name:"rasterFunction"}})],En.prototype,"functionName",void 0),t([e({type:Wn,json:{write:!0,name:"rasterFunctionArguments"}})],En.prototype,"functionArguments",void 0),t([e()],En.prototype,"rasterArgumentNames",void 0),En=t([s("esri.layers.support.rasterFunctions.ExtractBandFunction")],En);const $n=En;function Hn(t,e){const s=t.bandInfos.map((({name:t})=>t.toLowerCase())),n=[];for(let t=0;t<e.length;t++){const r=e[t].toLowerCase();let i=s.indexOf(r);if(-1===i&&"nearinfrared"===r&&(i=s.findIndex((t=>t.startsWith("nearinfrared_1"))),-1===i&&(i=s.findIndex((t=>t.startsWith("nearinfrared"))))),-1===i)return null;n.push(i)}return n}function qn(t,e,s){const{bandCount:n}=t;return!e?.length||s&&e.some((t=>t<0||t>=n))?null:e}function Kn(t,e,{wavelengthMatchTolerance:s},n){const{bandInfos:r}=t,i=[];for(let t=0;t<r.length;t++){const{minWavelength:e,maxWavelength:s}=r[t];if(!e||!s)return null;i.push({minWavelength:e,maxWavelength:s})}const o=[];for(let t=0;t<e.length;t++){const r=e[t];let a=!1,c=-1,u=Number.MAX_VALUE;for(let t=0;t<i.length;t++){const e=i[t],s=r>=e.minWavelength&&r<=e.maxWavelength,n=Math.abs(r-(e.minWavelength+e.maxWavelength)/2);s?n<u&&(a=!0,c=t,u=n):!a&&n<u&&(c=t,u=n)}if(!a&&s&&u<s&&(a=!0),!a&&n)return null;o.push(c)}return o}function Xn(t,e,s){const{pixels:n,width:r,height:i,mask:o,bandMasks:a}=t,u=r*i,l=a?.length?M.combineBandMasks(a):o,h=Math.min(e.length,n.length),f=s.startsWith("f"),p=!f&&s!==t.pixelType,[d,m]=c(s),g=M.createEmptyBand(s,u);for(let t=0;t<i;t++){let s=t*r;for(let t=0;t<r;t++,s++)if(!l||l[s]){let t=0;for(let r=0;r<h;r++)t+=e[r]*n[r][s];f||(t=Math.round(t),p&&(t=t>m?m:t<d?d:t)),g[s]=t}}const y=new M({width:r,height:i,pixels:[g],pixelType:s,mask:l});return y.updateStatistics(),y}var Yn;let Zn=Yn=class extends lt{clone(){return new Yn({conversionParameters:[...this.conversionParameters],raster:this.raster})}};t([e({type:[Number],json:{write:!0}})],Zn.prototype,"conversionParameters",void 0),Zn=Yn=t([s("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Zn);const Jn=Zn;let Qn=class extends gt{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce(((t,e)=>t+e));return t.map((t=>t/e))}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=3===t.length||3===e.bandCount&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:Xn(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};t([e({json:{write:!0,name:"rasterFunction"}})],Qn.prototype,"functionName",void 0),t([e({type:Jn,json:{write:!0,name:"rasterFunctionArguments"}})],Qn.prototype,"functionArguments",void 0),t([e()],Qn.prototype,"rasterArgumentNames",void 0),t([e()],Qn.prototype,"_normalizedWeights",null),Qn=t([s("esri.layers.support.rasterFunctions.GrayscaleFunction")],Qn);const tr=Qn;var er;const sr=new u({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),nr=new u({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let rr=er=class extends lt{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new er({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};t([e({type:Number,json:{write:!0}})],rr.prototype,"altitude",void 0),t([e({type:Number,json:{write:!0}})],rr.prototype,"azimuth",void 0),t([e(),l(sr)],rr.prototype,"hillshadeType",void 0),t([e({type:Number,json:{write:!0,name:"psPower"}})],rr.prototype,"pixelSizePower",void 0),t([e({type:Number,json:{write:!0,name:"psZFactor"}})],rr.prototype,"pixelSizeFactor",void 0),t([e(),l(nr)],rr.prototype,"slopeType",void 0),t([e({type:Number,json:{write:!0}})],rr.prototype,"zFactor",void 0),t([e({type:Boolean,json:{write:!0}})],rr.prototype,"removeEdgeEffect",void 0),rr=er=t([s("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],rr);const ir=rr;let or=class extends gt{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e)return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],i=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}),o=Q(this.functionArguments,i,this.isGCS),a=Z(e,o);return a.pixelType=this.outputPixelType,a}_getWebGLParameters(){const t=Q(this.functionArguments,{x:1,y:1},this.isGCS),e=J(t),{slopeType:s,zFactor:n,pixelSizeFactor:r,pixelSizePower:i}=this.functionArguments,o="scaled"===s,c=a(this.outputPixelType);return{...e,zFactor:n,gcsFactor:this.isGCS?Y:1,pixelSizeFactor:o?r:0,pixelSizePower:o?i:0,isOutputRounded:c}}};t([e({json:{write:!0,name:"rasterFunction"}})],or.prototype,"functionName",void 0),t([e({type:ir,json:{write:!0,name:"rasterFunctionArguments"}})],or.prototype,"functionArguments",void 0),t([e()],or.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],or.prototype,"isGCS",void 0),or=t([s("esri.layers.support.rasterFunctions.HillshadeFunction")],or);const ar=or;var cr;let ur=cr=class extends lt{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new cr({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:h(this.rasters)})}};t([e({json:{write:!0}})],ur.prototype,"operation",void 0),t([e({json:{write:!0}})],ur.prototype,"rasters",void 0),t([x("rasters")],ur.prototype,"writeRasters",null),t([e({json:{write:!0}})],ur.prototype,"processAsMultiband",void 0),ur=cr=t([s("esri.layers.support.rasterFunctions.LocalFunctionArguments")],ur);const lr=ur;let hr=class extends gt{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some((t=>t.bandCount!==s)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:i}=this.functionArguments,o=Mt[r];if(!(999===o||i.length===o||i.length<=1&&1===o))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${o}`};const a=e.clone();a.bandCount=999!==o||n?s:1,this._removeStatsHistColormapVAT(a),this._updateStatistics(a),this._updatePixelType(a),this.rasterInfo=a;return{success:!0,supportsGPU:1===a.bandCount&&o<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:Te(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=Mt[t],s=Object.keys(At).find((e=>At[e]===t))?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[r,i]=c(n);const o=a(n);return o&&(r-=1e-4,i+=1e-4),{imageCount:e,operationName:s,domainRange:[r,i],isOutputRounded:o}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,n=jt(s)?.domain;if(n){t.statistics=[];for(let e=0;e<t.bandCount;e++)t.statistics[e]={min:n[0],max:n[1],avg:(n[0]+n[1])/2,stddev:(n[0]+n[1])/10}}else 45===s&&e.statistics?.length&&(t.statistics=e.statistics.map((t=>({min:-t.max,max:-t.min,avg:null!=t.avg?-t.avg:void 0,stddev:null!=t.stddev?-t.stddev:void 0}))))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,{domain:r,isInteger:i}=jt(n)??{domain:null,isInteger:!1};let o="f32";if(r&&i)o=F(r[0],r[1]);else if(30===n){const t=e?.[0];o=t?F(t.min,t.max):a(s)?s:"s32"}else if(45===n&&a(s)){const t=e?.map((({max:t})=>-t)),n=e?.map((({min:t})=>-t)),r=t?.length?Math.min(...t):null,i=n?.length?Math.min(...n):null;o=null!=r&&null!=i?F(r,i):s.startsWith("s")?s.replace("s","u"):"u1"===s||"u2"===s||"u4"===s?"s8":"u8"===s?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(o)}};t([e({json:{write:!0,name:"rasterFunction"}})],hr.prototype,"functionName",void 0),t([e({type:lr,json:{write:!0,name:"rasterFunctionArguments"}})],hr.prototype,"functionArguments",void 0),t([e()],hr.prototype,"rasterArgumentNames",void 0),hr=t([s("esri.layers.support.rasterFunctions.LocalFunction")],hr);const fr=hr;var pr;let dr=pr=class extends lt{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=I.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const s=t.map((t=>{if("number"==typeof t)return e=!0,[t];if("string"==typeof t){const s=t.trim().split(" ").filter((t=>""!==t.trim())).map((t=>Number(t)));return e=e||s.length>0,0===s.length?null:s}return null}));return e?s:null}clone(){return new pr({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};t([e({json:{write:!0}})],dr.prototype,"includedRanges",void 0),t([e({json:{write:!0}})],dr.prototype,"noDataValues",void 0),t([e()],dr.prototype,"normalizedNoDataValues",null),t([e({json:{write:!0}})],dr.prototype,"noDataInterpretation",void 0),dr=pr=t([s("esri.layers.support.rasterFunctions.MaskFunctionArguments")],dr);const mr=dr;let gr=class extends gt{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let i=0;i<t.bandCount;i++){const t=_(e,s?.slice(2*i,2*i+2),n?.[i]);if(null==t){r=null;break}r.push(t)}this.lookups=r;const i=null!=n&&n.every((t=>t?.length===n[0]?.length));return{success:!0,supportsGPU:(!s||s.length<=2*G)&&(!n||i&&n[0].length<=G)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:r,noDataInterpretation:i,normalizedNoDataValues:o}=this.functionArguments,a=i===I.matchAll;return B(e,{includedRanges:r,noDataValues:o,outputPixelType:s,matchAll:a,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(G);s.fill(A),e?.[0]?.length&&s.set(e[0]);const n=new Float32Array(G);for(let e=0;e<n.length;e+=2)n[e]=t?.[e]??-A,n[e+1]=t?.[e+1]??A;return t?.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};t([e({json:{write:!0,name:"rasterFunction"}})],gr.prototype,"functionName",void 0),t([e({type:mr,json:{write:!0,name:"rasterFunctionArguments"}})],gr.prototype,"functionArguments",void 0),t([e()],gr.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],gr.prototype,"lookups",void 0),gr=t([s("esri.layers.support.rasterFunctions.MaskFunction")],gr);const yr=gr;var wr;let vr=wr=class extends lt{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new wr({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};t([e({json:{write:!0}})],vr.prototype,"visibleBandID",void 0),t([e({json:{write:!0}})],vr.prototype,"infraredBandID",void 0),t([e({json:{write:!0}})],vr.prototype,"scientificOutput",void 0),vr=wr=t([s("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],vr);const xr=vr;let br=class extends gt{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const n=this.sourceRasterInfos[0],r=Math.max(e,s);if(n.bandCount<2||r>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const i=n.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),i.bandCount=1,i.keyProperties={...i.keyProperties,BandProperties:void 0};const[o,a,c,u]=t?[-1,1,0,.1]:[0,200,100,10];return i.statistics=[{min:o,max:a,avg:c,stddev:u}],this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:r}=this.functionArguments;return Xe(e,s,n,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments,n=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:Ye(n),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map((e=>t[e]))}};t([e({json:{write:!0,name:"rasterFunction"}})],br.prototype,"functionName",void 0),t([e({type:xr,json:{write:!0,name:"rasterFunctionArguments"}})],br.prototype,"functionArguments",void 0),t([e()],br.prototype,"rasterArgumentNames",void 0),br=t([s("esri.layers.support.rasterFunctions.NDVIFunction")],br);const Fr=br;var Ar;let Nr=Ar=class extends lt{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Ar({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};t([e({json:{write:!0}})],Nr.prototype,"inputRanges",void 0),t([e({json:{write:!0}})],Nr.prototype,"outputValues",void 0),t([e({json:{write:!0}})],Nr.prototype,"noDataRanges",void 0),t([e({json:{write:!0}})],Nr.prototype,"allowUnmatched",void 0),t([e({json:{write:!0}})],Nr.prototype,"isLastInputRangeInclusive",void 0),Nr=Ar=t([s("esri.layers.support.rasterFunctions.RemapFunctionArguments")],Nr);const jr=Nr;let Mr=class extends gt{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.bandCount=1;const{statistics:s}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:n,outputValues:r,inputRanges:i,noDataRanges:o,isLastInputRangeInclusive:a}=this.functionArguments;if(null!=s&&s.length&&r?.length)if(n){const e=Math.min.apply(null,[...r,s[0].min]),n=Math.max.apply(null,[...r,s[0].max]);t.statistics=[{...s[0],min:e,max:n}]}else{let e=r[0],n=e;for(let t=0;t<r.length;t++)e=e>r[t]?r[t]:e,n=n>r[t]?n:r[t];t.statistics=[{...s[0],min:e,max:n}]}this.rasterInfo=t,this.lookup=n?null:D({srcPixelType:e,inputRanges:i,outputValues:r,noDataRanges:o,allowUnmatched:n,isLastInputRangeInclusive:a,outputPixelType:this.outputPixelType});return{success:!0,supportsGPU:(!r||r.length<=G)&&(!o||o.length<=G)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:s,outputPixelType:n}=this;if(s){const t=T(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return null!=t&&s.mask&&(t.mask=U(e.pixels[0],e.mask,s.mask,s.offset,"u8")),t}const{inputRanges:r,outputValues:i,noDataRanges:o,allowUnmatched:a,isLastInputRangeInclusive:c}=this.functionArguments;return z(e,{inputRanges:r,outputValues:i,noDataRanges:o,outputPixelType:n,allowUnmatched:a,isLastInputRangeInclusive:c})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(3*G),r=1e-5,i=this.functionArguments.inputRanges??[],o=this.functionArguments.outputValues??[],a=o.length;for(let t=0;t<G;t++)n[3*t]=i[2*t]??A-1,n[3*t+1]=i[2*t+1]??A,n[3*t+2]=o[t]??0,t<a&&(t>0&&(n[3*t]-=r),(t<a-1||!s)&&(n[3*t+1]-=r));const u=new Float32Array(2*G);u.fill(A),e?.length&&u.set(e);return{allowUnmatched:t,rangeMaps:n,noDataRanges:u,clampRange:c(this.outputPixelType)}}};t([e({json:{write:!0,name:"rasterFunction"}})],Mr.prototype,"functionName",void 0),t([e({type:jr,json:{write:!0,name:"rasterFunctionArguments"}})],Mr.prototype,"functionArguments",void 0),t([e()],Mr.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],Mr.prototype,"lookup",void 0),Mr=t([s("esri.layers.support.rasterFunctions.RemapFunction")],Mr);const Rr=Mr;var Pr;let kr=Pr=class extends ir{readColorRamp(t){if("string"==typeof t){const e=V.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return e?H(V.fromJSON(e)):null}return"toJSON"in t?t.toJSON():t}clone(){return new Pr({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};t([e({json:{write:!0}})],kr.prototype,"colorRamp",void 0),t([w("colorRamp")],kr.prototype,"readColorRamp",null),t([e({type:[[Number]],json:{write:!0}})],kr.prototype,"colormap",void 0),kr=Pr=t([s("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],kr);const Cr=kr;let Tr=class extends gt{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:e,colormap:s}=this.functionArguments;if(!e&&!s?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const n=t.clone();this._removeStatsHistColormapVAT(n),n.pixelType=this.outputPixelType,n.bandCount=3,n.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=n,this.isGCS=n.spatialReference?.isGeographic??!1,s?.length||(s=$(e,{interpolateAlpha:!0}));const{indexedColormap:r,offset:i}=P({colormap:s});if(!r?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const o=tt(r);return this.lookup={indexedColormap:r,offset:i,hsvMap:o},{success:!0,supportsGPU:q(r)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e||!this.lookup)return null;let s=t.primaryPixelSizes?.[0];if(null==s){const{extent:n}=t;s=n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1}}const n=Q(this.functionArguments,s,this.isGCS),r=Z(e,n),i=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return et(r,e,this.lookup.hsvMap,i),r.pixelType=this.outputPixelType,r}_getWebGLParameters(){const t=Q(this.functionArguments,{x:1,y:1},this.isGCS),e=J(t),{slopeType:s,zFactor:n,pixelSizeFactor:r,pixelSizePower:i}=this.functionArguments,o="scaled"===s,{indexedColormap:c,offset:u}=this.lookup,l=this.sourceRasterInfos[0].statistics?.[0],h=a(this.outputPixelType);return{...e,indexedColormap:c,offset:u,zFactor:n,gcsFactor:this.isGCS?Y:1,pixelSizeFactor:o?r:0,pixelSizePower:o?i:0,minValue:l?.min??0,maxValue:l?.max??8e3,isOutputRounded:h}}};t([e({json:{write:!0,name:"rasterFunction"}})],Tr.prototype,"functionName",void 0),t([e({type:Cr,json:{write:!0,name:"rasterFunctionArguments"}})],Tr.prototype,"functionArguments",void 0),t([e()],Tr.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],Tr.prototype,"isGCS",void 0),t([e({json:{write:!0}})],Tr.prototype,"lookup",void 0),Tr=t([s("esri.layers.support.rasterFunctions.ShadedReliefFunction")],Tr);const Sr=Tr;var Ir;const _r=new u({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let Gr=Ir=class extends lt{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new Ir({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};t([l(_r)],Gr.prototype,"slopeType",void 0),t([e({type:Number,json:{write:!0}})],Gr.prototype,"zFactor",void 0),t([e({type:Number,json:{name:"psPower",write:!0}})],Gr.prototype,"pixelSizePower",void 0),t([e({type:Number,json:{name:"psZFactor",write:!0}})],Gr.prototype,"pixelSizeFactor",void 0),t([e({type:Boolean,json:{write:!0}})],Gr.prototype,"removeEdgeEffect",void 0),Gr=Ir=t([s("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],Gr);const Br=Gr;let Dr=class extends gt{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:i}=this.functionArguments,{isGCS:o}=this,{extent:a,primaryPixelSizes:c}=t,u=c?.[0],l=u??(a?{x:a.width/e.width,y:a.height/e.height}:{x:1,y:1});return st(e,{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:i,isGCS:o,resolution:l})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Y:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0,isOutputRounded:a(this.outputPixelType)}}};t([e({json:{write:!0,name:"rasterFunction"}})],Dr.prototype,"functionName",void 0),t([e({type:Br,json:{write:!0,name:"rasterFunctionArguments"}})],Dr.prototype,"functionArguments",void 0),t([e()],Dr.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],Dr.prototype,"isGCS",void 0),Dr=t([s("esri.layers.support.rasterFunctions.SlopeFunction")],Dr);const Ur=Dr;const zr=new u({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function Or(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:i,mask:o,outBand:a}=t;if(s&&!o)return void a.set(n);const{statisticsType:c,kernelRows:u,kernelCols:l}=e,h="stddev"===c,f=r*i,p=new Float64Array(f),d=new Float64Array(f),m=new Uint32Array(f);for(let t=0;t<i;t++){const e=t*r;let s=0,i=0,a=0;for(let t=0;t<l;t++)o&&!o[e+t]||(s+=n[e+t],h&&(i+=n[e+t]**2),a++);p[e]=s,d[e]=i,m[e]=a;for(let t=1;t<=r-l;t++){const r=e+t-1,c=r+l;o?(o[r]&&(a--,s-=n[r],h&&(i-=n[r]**2)),o[c]&&(a++,s+=n[c],h&&(i+=n[c]**2))):(s-=n[r],s+=n[c],h&&(i-=n[r]**2,i+=n[c]**2)),p[e+t]=s,m[e+t]=a,h&&(d[e+t]=i)}}const g=new Float64Array(f),y=new Float64Array(f),w=new Uint32Array(f),v=u*r;for(let t=0;t<=r-l;t++){let e=0,s=0,n=0;for(let i=0;i<u;i++){const o=i*r+t;e+=p[o],n+=m[o],h&&(s+=d[o])}g[t]=e,y[t]=s,w[t]=n;for(let o=1;o<=i-u;o++){const i=(o-1)*r+t,a=i+v;e-=p[i],e+=p[a],n-=m[i],n+=m[a],h&&(s-=d[i],s+=d[a]),g[o*r+t]=e,y[o*r+t]=s,w[o*r+t]=n}}const x=Math.floor(u/2),b=Math.floor(l/2);for(let t=x;t<i-x;t++){const e=t*r;for(let n=b;n<r-b;n++){const i=(t-x)*r+n-b,c=w[i];if(0===c||s&&(!o||o[e+n]))continue;const u=g[i]/c,l=h?Math.sqrt((y[i]-g[i]*u)/c):u;a[e+n]=l,o&&(o[e+n]=255)}}}function Lr(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:i,mask:o,outBand:a}=t;if(s&&!o)return void a.set(n);const{kernelRows:c,kernelCols:u,statisticsType:l}=e,h=Math.floor(c/2),f=Math.floor(u/2),p="min"===l,d=a.slice(),m=new Uint32Array(r*i);for(let t=h;t<i-h;t++){const e=t*r;for(let t=f;t<r-f;t++){let s=p?Number.MAX_VALUE:-Number.MAX_VALUE,i=0;for(let a=0;a<c;a++)for(let c=0;c<u;c++){const u=e+t+(a-h)*r+c-f;o&&!o[u]||(s=p?Math.min(s,n[u]):Math.max(s,n[u]),i++)}o?(d[e+t]=0===i?0:s,m[e+t]=i):a[e+t]=0===i?0:s}}if(o)for(let t=h;t<i-h;t++){const e=t*r;for(let t=f;t<r-f;t++)if(m[e+t]){if(s&&o[e+t])continue;a[e+t]=d[e+t],o[e+t]=255}}}function Vr(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:i,mask:o,outBand:a}=t;if(s&&!o)return void a.set(n);const{kernelRows:c,kernelCols:u}=e,l=Math.floor(c/2),h=Math.floor(u/2),f=a.slice(),p=new Uint32Array(r*i);for(let t=l;t<i-l;t++){const e=t*r;for(let t=h;t<r-h;t++){if(s&&o?.[e+t])continue;const i=[];for(let s=0;s<c;s++)for(let a=0;a<u;a++){const c=e+t+(s-l)*r+a-h;o&&!o[c]||i.push(n[c])}i.length&&(i.sort(((t,e)=>t-e)),o?(f[e+t]=i[Math.floor((i.length-1)/2)],p[e+t]=i.length):a[e+t]=i[Math.floor((i.length-1)/2)])}}if(o)for(let t=l;t<i-l;t++){const e=t*r;for(let t=h;t<r-h;t++)if(p[e+t]){if(s&&o[e+t])continue;a[e+t]=f[e+t],o[e+t]=255}}}function Wr(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:i,mask:o,outBand:a}=t;if(s&&!o)return void a.set(n);const{kernelRows:c,kernelCols:u}=e,l=Math.floor(c/2),h=Math.floor(u/2),f="majority"===e.statisticsType,p=c*u,d=a.slice(),m=new Uint32Array(r*i);for(let t=l;t<i-l;t++){const e=t*r;for(let t=h;t<r-h;t++){if(s&&o?.[e+t])continue;const i=new Map;for(let s=0;s<c;s++)for(let a=0;a<u;a++){const c=e+t+(s-l)*r+a-h;if(o&&!o[c])continue;const u=n[c];i.set(u,i.has(u)?i.get(u)+1:1)}if(0===i.size)continue;let g=0,y=0,w=f?0:p+1;for(const t of i.keys())y=i.get(t),f===y>w&&(w=y,g=t);o?(d[e+t]=g,m[e+t]=i.size):a[e+t]=g}}if(o)for(let t=l;t<i-l;t++){const e=t*r;for(let t=h;t<r-h;t++)if(m[e+t]){if(s&&o[e+t])continue;a[e+t]=d[e+t],o[e+t]=255}}}function Er(t,e){const{mask:s}=t,{fillNoDataOnly:n}=e;if(n&&!s)return t;const{pixels:r,width:i,height:o,bandMasks:a,pixelType:c}=t,u=r.length,l=i*o,h=[],{kernelRows:f,kernelCols:p,statisticsType:d,mirrorEdges:m}=e;if(n&&!s)return t;const g=e.outputPixelType??c,y=[];for(let t=0;t<u;t++){const c=r[t],u=M.createEmptyBand(g,l);n&&u.set(c);const w=a?.[t]??s,v=w?.slice()??null,x={band:c,width:i,height:o,mask:v,outBand:u};switch(d){case"min":case"max":Lr(x,e);break;case"mean":case"stddev":Or(x,e);break;case"median":Vr(x,e);break;case"majority":case"minority":Wr(x,e)}m&&!n&&bn(u,i,o,f,p),h.push(u),v&&y.push(v)}let w=y[0]??s;y.length!==u&&(y.length=0),u>1&&a?.length&&(w=M.combineBandMasks(a));const v=new M({pixelType:g,width:i,height:o,pixels:h,bandMasks:a&&y.length?y:null,mask:w});return v.updateStatistics(),v}var $r;let Hr=$r=class extends lt{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new $r({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:h(this.raster)})}};t([e({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],Hr.prototype,"rows",void 0),t([e({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],Hr.prototype,"cols",void 0),t([e({json:{write:!0}})],Hr.prototype,"fillNoDataOnly",void 0),t([e({json:{read:{source:["statisticsType","type"],reader:(t,e)=>zr.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),l(zr)],Hr.prototype,"statisticsType",void 0),Hr=$r=t([s("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],Hr);const qr=Hr;let Kr=class extends gt{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:n}=this.functionArguments;"stddev"===n&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s;return{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{statisticsType:s,rows:n,cols:r,fillNoDataOnly:i}=this.functionArguments;return Er(e,{kernelRows:n,kernelCols:r,fillNoDataOnly:i,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:n}=this.functionArguments;return{fillNoDataOnly:n,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:c(this.outputPixelType)}}};t([e({json:{write:!0,name:"rasterFunction"}})],Kr.prototype,"functionName",void 0),t([e({type:qr,json:{write:!0,name:"rasterFunctionArguments"}})],Kr.prototype,"functionArguments",void 0),t([e()],Kr.prototype,"rasterArgumentNames",void 0),Kr=t([s("esri.layers.support.rasterFunctions.StatisticsFunction")],Kr);const Xr=Kr;var Yr;let Zr=Yr=class extends lt{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const s=[];return t.forEach((t=>{const e={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};s.push(e)})),s}writeStatistics(t,e,s){if(!t?.length)return;const n=[];t.forEach((t=>{const e={...t,mean:t.avg,standardDeviation:t.stddev};delete e.avg,delete e.stddev,n.push(e)})),e[s]=n}clone(){return new Yr({statistics:h(this.statistics),histograms:h(this.histograms)})}};t([e({json:{write:!0}})],Zr.prototype,"statistics",void 0),t([w("statistics")],Zr.prototype,"readStatistics",null),t([x("statistics")],Zr.prototype,"writeStatistics",null),t([e({json:{write:!0}})],Zr.prototype,"histograms",void 0),Zr=Yr=t([s("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Zr);const Jr=Zr;let Qr=class extends gt{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};t([e({json:{write:!0,name:"rasterFunction"}})],Qr.prototype,"functionName",void 0),t([e({type:Jr,json:{write:!0,name:"rasterFunctionArguments"}})],Qr.prototype,"functionArguments",void 0),t([e()],Qr.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],Qr.prototype,"indexedColormap",void 0),t([e()],Qr.prototype,"isNoopProcess",void 0),Qr=t([s("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],Qr);const ti=Qr;var ei;const si=new u({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let ni=ei=class extends lt{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[s]=t)}clone(){return new ei({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:h(this.statistics),gamma:h(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:h(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};t([e({type:Boolean,json:{write:!0}})],ni.prototype,"computeGamma",void 0),t([e({type:Boolean,json:{name:"dra",write:!0}})],ni.prototype,"dynamicRangeAdjustment",void 0),t([e({type:[Number],json:{write:!0}})],ni.prototype,"gamma",void 0),t([e()],ni.prototype,"histograms",void 0),t([e({type:Number,json:{write:!0}})],ni.prototype,"maxPercent",void 0),t([e({type:Number,json:{write:!0}})],ni.prototype,"minPercent",void 0),t([e({type:Number,json:{write:!0}})],ni.prototype,"numberOfStandardDeviations",void 0),t([e({type:Number,json:{name:"max",write:!0}})],ni.prototype,"outputMax",void 0),t([e({type:Number,json:{name:"min",write:!0}})],ni.prototype,"outputMin",void 0),t([e({type:Number,json:{write:!0}})],ni.prototype,"sigmoidStrengthLevel",void 0),t([e({json:{type:[[Number]],write:!0}})],ni.prototype,"statistics",void 0),t([x("statistics")],ni.prototype,"writeStatistics",null),t([l(si)],ni.prototype,"stretchType",void 0),t([e({type:Boolean,json:{write:!0}})],ni.prototype,"useGamma",void 0),ni=ei=t([s("esri.layers.support.rasterFunctions.StretchFunctionArguments")],ni);const ri=ni;let ii=class extends gt{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:r,useGamma:i}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const n=nt(s.toJSON(),{rasterInfo:t}),o=a(this.outputPixelType)?"round":"float";this.lookup=rt({pixelType:e,...n,gamma:i?r:null,rounding:o}),this.cutOffs=n}else n||(this.cutOffs=nt(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const o=t.clone();o.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(o),"u8"===this.outputPixelType&&(o.keyProperties.DataType="processed");const{outputMin:c=0,outputMax:u=255}=this.functionArguments;o.statistics=[];for(let t=0;t<o.bandCount;t++)o.statistics[t]={min:c,max:u};this.rasterInfo=o;return{success:!0,supportsGPU:!n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:s}=this;if(s)return T(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,r=this.cutOffs||nt(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),i=n.useGamma?n.gamma:null;return it(e,{...r,gamma:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,i=n&&s?.length?ot(r,s):[1,1,1],{minCutOff:o,maxCutOff:c}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===o.length&&(o[1]=o[2]=o[0],c[1]=c[2]=c[0]);const u=new Float32Array(r);let l;for(l=0;l<r;l++)u[l]=(e-t)/(c[l]-o[l]);const h=a(this.outputPixelType);return{bandCount:r,outMin:t,outMax:e,minCutOff:o,maxCutOff:c,factor:u,useGamma:n,gamma:n&&s?s:[1,1,1],gammaCorrection:n&&i?i:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:h,type:"stretch"}}};t([e({json:{write:!0,name:"rasterFunction"}})],ii.prototype,"functionName",void 0),t([e({type:ri,json:{write:!0,name:"rasterFunctionArguments"}})],ii.prototype,"functionArguments",void 0),t([e()],ii.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],ii.prototype,"lookup",void 0),t([e({json:{write:!0}})],ii.prototype,"cutOffs",void 0),ii=t([s("esri.layers.support.rasterFunctions.StretchFunction")],ii);const oi=ii;var ai;let ci=ai=class extends lt{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new ai({attributeTableAsRecordSet:h(this.attributeTableAsRecordSet)})}};t([e({json:{write:!0}})],ci.prototype,"attributeTableAsRecordSet",void 0),ci=ai=t([s("esri.layers.support.rasterFunctions.TableFunctionArguments")],ci);const ui=ci;let li=class extends gt{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,"thematic"!==s.dataType&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};t([e({json:{write:!0,name:"rasterFunction"}})],li.prototype,"functionName",void 0),t([e({type:ui,json:{write:!0,name:"rasterFunctionArguments"}})],li.prototype,"functionArguments",void 0),t([e()],li.prototype,"rasterArgumentNames",void 0),t([e()],li.prototype,"isNoopProcess",void 0),li=t([s("esri.layers.support.rasterFunctions.TableFunction")],li);const hi=li;const fi=new Map;function pi(t,e){const{rasterFunctionArguments:s}=t;if(!s)return;(s.rasters||[s.raster,s.raster2]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&pi(t,e))}))}function di(t,e){if(e=e??{},"function"in(t=h(t))&&"arguments"in t&&t.arguments){const s=Fi(t,new Map,e);if(Ni(s),!s.renderingRule)throw new N("raster-function-helper","Unsupported raster function json.");t=s.renderingRule}if("rasterFunction"in t)return wi(t=yi(t),e);throw new N("raster-function-helper","unsupported raster function json.")}function mi(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}function gi(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function yi(t){const{rasterFunction:e,rasterFunctionArguments:s}=t,n={};for(const t in s){let e=s[t];const r=t.toLowerCase();if("rasters"===r&&Array.isArray(e))n.rasters=e.map((t=>gi(t)?yi(t):t));else switch(gi(e)&&(e=yi(e)),r){case"dra":n.dra=e;break;case"pspower":n.psPower=e;break;case"pszfactor":n.psZFactor=e;break;case"bandids":n.bandIds=e;break;default:n[t[0].toLowerCase()+t.slice(1)]=e}}return"Local"!==e||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function wi(t,e){const{rasterFunction:s,rasterFunctionArguments:n}=t,r=t.outputPixelType?.toLowerCase();if(null==s||!fi.has(s))throw new N("raster-function-helper",`unsupported raster function: ${s}`);const i=fi.get(s),o=("function"==typeof i.ctor?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:r}),{rasterArgumentNames:a}=o,c=[],u=mi(n,a),l="rasters"===a[0]||a.length>1,h=[];for(let t=0;t<u.length;t++){const s=u[t];let n;null==s||"string"==typeof s&&s.startsWith("$")?c.push(e?.raster):"string"==typeof s?e[s]&&c.push(e[s]):"number"!=typeof s&&"rasterFunction"in s&&(n=wi(s,e),l||(o.functionArguments[a[t]]=n),c.push(n)),l&&h.push(n??s)}if(l&&("rasters"===a[0]?o.functionArguments.rasters=h:a.forEach(((t,e)=>{o.functionArguments[t]=h[e]}))),e){o.sourceRasters=c;const t=e.raster?.url;t&&(o.mainPrimaryRasterId=t)}return o}function vi(t,e){if(t&&e)for(const s in t){const n=t[s];n&&"object"==typeof n&&"type"in n&&("RasterFunctionTemplate"===n.type?vi(n.arguments,e):"RasterFunctionVariable"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function xi(t,e){if(!t||"object"!=typeof t)return t;const{value:s}=t;if(!s||"object"!=typeof s)return t.isDataset?"$$":s;if(Array.isArray(s))return 0===s.length?[]:s.map((t=>"object"==typeof t&&"RasterFunctionVariable"===t.type?xi(t,e):t));if("value"in s&&["number","string","boolean"].includes(typeof s.value))return s.value;if(t.isDataset&&"Scalar"!==s.type)return"$$";if(!("type"in s))return s;let n=s;switch(s.type){case"Scalar":n=s.value;break;case"AlgorithmicColorRamp":n=bi(s);break;case"MultiPartColorRamp":n={type:"multipart",colorRamps:s.ArrayOfColorRamp.map(bi)};break;case"ArgumentArray":if(s.elements?.length&&"RasterStatistics"!==s.elements[0].type){const t=[];for(let n=0;n<s.elements.length;n++){const r=s.elements[n],{type:i}=r;if(i)if("RasterFunctionTemplate"===i){const{renderingRule:s}=Fi(r,e);t.push(s),null!=r._object_id&&e.set(r._object_id,s)}else{if("RasterFunctionVariable"!==i)throw new N("raster-function-helper","unsupported raster function json.");{const s=xi(r,e);t.push(s),null!=r._object_id&&e.set(r._object_id,s)}}else t.push(r)}n=t}else n=s.elements}return null!=s._object_id&&e.set(s._object_id,n),n}function bi(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:s,ToColor:n}=t;if(!Array.isArray(s)){const{r:t,g:e,b:n}=j({h:s.Hue,s:s.Saturation,v:s.Value});s=[t,e,n,s.AlphaValue]}if(!Array.isArray(n)){const{r:t,g:e,b:s}=j({h:n.Hue,s:n.Saturation,v:n.Value});n=[t,e,s,n.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:s,toColor:n}}function Fi(t,e,s){s&&vi(t,s);const n={renderingRule:{},templates:e};return Ai(t,n),n}function Ai(t,e){if(!t||!e.renderingRule)return;const{renderingRule:s,templates:n}=e,{function:r,arguments:i,_object_id:o}=t;if(!r||!i)return;null!=o&&n.set(o,s),s.rasterFunction=r.type.replace("Function",""),s.outputPixelType=r.pixelType;const a={};s.rasterFunctionArguments=a;for(const t in i){if("type"===t||"object_id"===t||"_object_ref_id"===t)continue;const e=i[t];e&&"object"==typeof e&&"type"in e&&("RasterFunctionTemplate"===e.type||"RasterFunctionVariable"===e.type)?("RasterFunctionVariable"===e.type?a[t]=xi(e,n):(s.rasterFunctionArguments[t]={},Ai(e,{renderingRule:s.rasterFunctionArguments[t],templates:n})),null!=e._object_id&&n.set(e._object_id,a[t])):a[t]=e}switch(a.DEM&&!a.Raster&&(a.Raster=a.DEM,delete a.DEM),s.rasterFunction){case"Stretch":ji(a);break;case"Colormap":Mi(a);break;case"Convolution":Ri(a);break;case"Mask":Pi(a)}}function Ni(t){const{renderingRule:e,templates:s}=t;if("object"!=typeof e||!e?.rasterFunctionArguments||!s.size)return;const{rasterFunctionArguments:n}=e;for(const t in n){const e=n[t],r="_object_ref_id"===t?e:e&&"object"==typeof e&&"_object_ref_id"in e?e._object_ref_id:null;if(null==r)e&&"object"==typeof e&&(e.rasterFunctionArguments&&Ni({renderingRule:e,templates:s}),Array.isArray(e)&&e.forEach(((t,n)=>{if("object"==typeof t)if(null!=t._object_ref_id){if(!s.has(t._object_ref_id))throw new N("raster-function-helper",`unsupported raster function json. _object_ref_id: ${e} does not exist`);const i=s.get(r);i&&"object"==typeof i?Object.assign(t,i):e[n]=i}else Ni({renderingRule:t,templates:s})})));else{if(!s.has(r))throw new N("raster-function-helper",`unsupported raster function json. _object_ref_id: ${r} does not exist`);const e=s.get(r);"_object_ref_id"!==t?n[t]=e:e&&"object"==typeof e&&Object.assign(n,e)}}}function ji(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function Mi(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}function Ri(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function Pi(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}fi.set("Arithmetic",{desc:"Arithmetic Function",ctor:_e,rasterArgumentNames:["rasters"]}),fi.set("Aspect",{desc:"Aspect Function",ctor:ze,rasterArgumentNames:["raster"]}),fi.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:ws,rasterArgumentNames:["raster"]}),fi.set("Colormap",{desc:"Colormap Function",ctor:$s,rasterArgumentNames:["raster"]}),fi.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:Ys,rasterArgumentNames:["raster"]}),fi.set("CompositeBand",{desc:"CompositeBand Function",ctor:en,rasterArgumentNames:["rasters"]}),fi.set("ComputeChange",{desc:"ComputeChange Function",ctor:mn,rasterArgumentNames:["rasters"]}),fi.set("Convolution",{desc:"Convolution Function",ctor:_n,rasterArgumentNames:["raster"]}),fi.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:xn,rasterArgumentNames:["raster"]}),fi.set("ExtractBand",{desc:"ExtractBand Function",ctor:$n,rasterArgumentNames:["raster"]}),fi.set("Curvature",{desc:"Curvature Function",ctor:On,rasterArgumentNames:["raster"]}),fi.set("Hillshade",{desc:"Hillshade Function",ctor:ar,rasterArgumentNames:["raster"]}),fi.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:Sr,rasterArgumentNames:["raster"]}),fi.set("Grayscale",{desc:"Grayscale Function",ctor:tr,rasterArgumentNames:["raster"]}),fi.set("Clip",{desc:"Clip Function",ctor:Ts,rasterArgumentNames:["raster"]}),fi.set("Local",{desc:"Local Function",ctor:fr,rasterArgumentNames:["rasters"]}),fi.set("Mask",{desc:"Mask Function",ctor:yr,rasterArgumentNames:["raster"]}),fi.set("NDVI",{desc:"NDVI Function",ctor:Fr,rasterArgumentNames:["raster"]}),fi.set("Remap",{desc:"Remap Function",ctor:Rr,rasterArgumentNames:["raster"]}),fi.set("Slope",{desc:"Slope Function",ctor:Ur,rasterArgumentNames:["raster"]}),fi.set("Statistics",{desc:"Focal Statistics Function",ctor:Xr,rasterArgumentNames:["raster"]}),fi.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:ti,rasterArgumentNames:["raster"]}),fi.set("Stretch",{desc:"Stretch Function",ctor:oi,rasterArgumentNames:["raster"]}),fi.set("Table",{desc:"Attribute Table Function",ctor:hi,rasterArgumentNames:["raster"]});let ki=class extends n{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};t([e()],ki.prototype,"affectsPixelSize",null),t([e({json:{write:!0}})],ki.prototype,"spatialReference",void 0),ki=t([s("esri.layers.support.rasterTransforms.BaseRasterTransform")],ki);const Ci=ki;var Ti;let Si=Ti=class extends Ci{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return"point"===(t=t.clone()).type?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return"point"===(t=t.clone()).type?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}clone(){return new Ti({tolerance:this.tolerance})}};t([l({GCSShiftXform:"gcs-shift"})],Si.prototype,"type",void 0),t([e()],Si.prototype,"tolerance",void 0),Si=Ti=t([s("esri.layers.support.rasterTransforms.GCSShiftTransform")],Si);const Ii=Si;var _i;function Gi(t,e,s){const{x:n,y:r}=e;if(s<2){return{x:t[0]+n*t[2]+r*t[4],y:t[1]+n*t[3]+r*t[5]}}if(2===s){const e=n*n,s=r*r,i=n*r;return{x:t[0]+n*t[2]+r*t[4]+e*t[6]+i*t[8]+s*t[10],y:t[1]+n*t[3]+r*t[5]+e*t[7]+i*t[9]+s*t[11]}}const i=n*n,o=r*r,a=n*r,c=i*n,u=i*r,l=n*o,h=r*o;return{x:t[0]+n*t[2]+r*t[4]+i*t[6]+a*t[8]+o*t[10]+c*t[12]+u*t[14]+l*t[16]+h*t[18],y:t[1]+n*t[3]+r*t[5]+i*t[7]+a*t[9]+o*t[11]+c*t[13]+u*t[15]+l*t[17]+h*t[19]}}function Bi(t,e,s){const{xmin:n,ymin:r,xmax:i,ymax:o,spatialReference:a}=e;let c=[];if(s<2)c.push({x:n,y:o}),c.push({x:i,y:o}),c.push({x:n,y:r}),c.push({x:i,y:r});else{let t=10;for(let e=0;e<t;e++)c.push({x:n,y:r+(o-r)*e/(t-1)}),c.push({x:i,y:r+(o-r)*e/(t-1)});t=8;for(let e=1;e<=t;e++)c.push({x:n+(i-n)*e/t,y:r}),c.push({x:n+(i-n)*e/t,y:o})}c=c.map((e=>Gi(t,e,s)));const u=c.map((t=>t.x)),l=c.map((t=>t.y));return new d({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,l),ymax:Math.max.apply(null,l),spatialReference:a})}function Di(t){const[e,s,n,r,i,o]=t,a=n*o-i*r,c=i*r-n*o;return[(i*s-e*o)/a,(n*s-e*r)/c,o/a,r/c,-i/a,-n/c]}let Ui=_i=class extends Ci{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:s,coeffY:n}=e;if(!s?.length||!n?.length||s.length!==n.length)return null;const r=[];for(let t=0;t<s.length;t++)r.push(s[t]),r.push(n[t]);return r}writeForwardCoefficients(t,e,s){const n=[],r=[];for(let e=0;e<t?.length;e++)e%2==0?n.push(t[e]):r.push(t[e]);e.coeffX=n,e.coeffY=r}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=Di(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:s,inverseCoeffY:n}=e;if(!s?.length||!n?.length||s.length!==n.length)return null;const r=[];for(let t=0;t<s.length;t++)r.push(s[t]),r.push(n[t]);return r}writeInverseCoefficients(t,e,s){const n=[],r=[];for(let e=0;e<t?.length;e++)e%2==0?n.push(t[e]):r.push(t[e]);e.inverseCoeffX=n,e.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if("point"===t.type){const e=Gi(this.forwardCoefficients,t,this.polynomialOrder);return new g({x:e.x,y:e.y,spatialReference:t.spatialReference})}return Bi(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if("point"===t.type){const e=Gi(this.inverseCoefficients,t,this.polynomialOrder);return new g({x:e.x,y:e.y,spatialReference:t.spatialReference})}return Bi(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new _i({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};t([e({json:{write:!0}})],Ui.prototype,"polynomialOrder",void 0),t([e()],Ui.prototype,"forwardCoefficients",void 0),t([w("forwardCoefficients",["coeffX","coeffY"])],Ui.prototype,"readForwardCoefficients",null),t([x("forwardCoefficients")],Ui.prototype,"writeForwardCoefficients",null),t([e({json:{write:!0}})],Ui.prototype,"inverseCoefficients",null),t([w("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],Ui.prototype,"readInverseCoefficients",null),t([x("inverseCoefficients")],Ui.prototype,"writeInverseCoefficients",null),t([e()],Ui.prototype,"affectsPixelSize",null),t([l({PolynomialXform:"polynomial"})],Ui.prototype,"type",void 0),Ui=_i=t([s("esri.layers.support.rasterTransforms.PolynomialTransform")],Ui);const zi=Ui;export{di as T,Ci as a,Ii as c,Ns as h,ks as l,pi as w,zi as y};
//# sourceMappingURL=p-aefb8b57.js.map