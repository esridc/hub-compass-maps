import{a0 as t,lm as e,ln as n,eL as s,cL as l,lo as a,ji as r,T as o,lp as i,lq as u,lr as c,ls as f}from"./p-aad64c9f.js";import{m,B as h}from"./p-ca379176.js";let d=null;const p=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function M(t,e,n){return t.x<0?t.x+=e:t.x>n&&(t.x-=e),t}function b(l,a,r,o){const i=n(r)?s(r):null,u=i?Math.round((i.valid[1]-i.valid[0])/a.scale[0]):null;return l.map((n=>{const s=new t(n.geometry);return e(a,s,s),n.geometry=i?M(s,u??0,o[0]):s,n}))}function w(t,e=18,n,s,a){const r=new Float64Array(s*a);e=Math.round(l(e));let o=Number.POSITIVE_INFINITY,c=Number.NEGATIVE_INFINITY;const f=i(n);for(const{geometry:n,attributes:l}of t){const{x:t,y:i}=n,m=Math.max(0,t-e),h=Math.max(0,i-e),d=Math.min(a,i+e),p=Math.min(s,t+e),M=+f(l);for(let n=h;n<d;n++)for(let l=m;l<p;l++){const a=n*s+l,f=u(l-t,n-i,e)*M,m=r[a]+=f;o=Math.min(o,m),c=Math.max(c,m)}}return{min:o,max:c}}function y(t){const e=p.exec(t);if(!e)return null;const{hh:n,mm:s,ss:l,ms:r}=e.groups;return Number(n)*a.hours+Number(s)*a.minutes+Number(l)*a.seconds+Number(r||0)}async function $(t,e,n=!0){if(!e)return[];const{field:s,field2:l,field3:a,fieldDelimiter:i,fieldInfos:u,timeZone:p}=t,M=s&&u?.find((t=>t.name.toLowerCase()===s.toLowerCase())),b=!!M&&c(M),w=!!M&&f(M),$=t.valueExpression,N=t.normalizationType,g=t.normalizationField,j=t.normalizationTotal,x=[],F=t.viewInfoParams;let D=null,L=null;if($){if(!d){const{arcadeUtils:t}=await r();d=t}d.hasGeometryOperations($)&&await d.enableGeometryOperations(),D=d.createFunction($),L=F?d.getViewInfo({viewingMode:F.viewingMode,scale:F.scale,spatialReference:new o(F.spatialReference)}):null}const q=t.fieldInfos,v=!(e[0]&&"declaredClass"in e[0]&&"esri.Graphic"===e[0].declaredClass)&&q?{fields:q}:null;return e.forEach((t=>{const e=t.attributes;let r;if($){const e=v?{...t,layer:v}:t,n=d.createExecContext(e,L,p);r=d.executeFunction(D,n)}else e&&(r=e[s],l?(r=`${m(r)}${i}${m(e[l])}`,a&&(r=`${r}${i}${m(e[a])}`)):"string"==typeof r&&n&&(w?r=r?new Date(r).getTime():null:b&&(r=r?y(r):null)));if(N&&"number"==typeof r&&isFinite(r)){const t=e&&parseFloat(e[g]);r=h(r,N,t,j)}x.push(r)})),x}export{y as I,$ as b,w,b as x};
//# sourceMappingURL=p-bdd45e95.js.map