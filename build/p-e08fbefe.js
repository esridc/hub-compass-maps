import{U as e,s as t,r as i,p as s,oj as r,T as n,hx as a,E as o,kZ as l,k_ as c,b7 as h,q as u,v as d,ok as p,d as f,ol as y,om as v,n as m,on as w,ad as g,S,b as x,o as j}from"./p-aad64c9f.js";import{i as I}from"./p-f3c2956c.js";import{p as b,n as E}from"./p-9fbfb741.js";import{t as _}from"./p-cc72a972.js";async function R(i,s,r,n,a,o,l){let c=null;if(null!=r){const t=`${i}/nodepages/`,s=t+Math.floor(r.rootIndex/r.nodesPerPage);try{return{type:"page",rootPage:(await e(s,{query:{f:"json",...n,token:a},responseType:"json",signal:l})).data,rootIndex:r.rootIndex,pageSize:r.nodesPerPage,lodMetric:r.lodSelectionMetricType,urlPrefix:t}}catch(e){null!=o&&o.warn("#fetchIndexInfo()","Failed to load root node page. Falling back to node documents.",s,e),c=e}}if(!s)return null;const h=s?.split("/").pop(),u=`${i}/nodes/`,d=u+h;try{return{type:"node",rootNode:(await e(d,{query:{f:"json",...n,token:a},responseType:"json",signal:l})).data,urlPrefix:u}}catch(e){throw new t("sceneservice:root-node-missing","Root node missing.",{pageError:c,nodeError:e,url:d})}}let T=null;function N(){return T}const A=T=>{let A=class extends T{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=d((async(e,t,i)=>{switch(e){case L.SAVE:return this._save(t);case L.SAVE_AS:return this._saveAs(i,t)}}))}readSpatialReference(e,t){return P(t)}readFullExtent(e,t,i){if(null!=e&&"object"==typeof e){const s=null==e.spatialReference?{...e,spatialReference:P(t)}:e;return o.fromJSON(s,i)}const s=t.store,r=P(t);return null==r||null==s?.extent||!Array.isArray(s.extent)||s.extent.some((e=>e<k))?null:new o({xmin:s.extent[0],ymin:s.extent[1],xmax:s.extent[2],ymax:s.extent[3],spatialReference:r})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},i=e.split(".");return i.length>=2&&(t.major=parseInt(i[0],10),t.minor=parseInt(i[1],10)),t}readVersion(e,t){const i=t.store,s=null!=i.version?i.version.toString():"";return this.parseVersionString(s)}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const i=this.portalItem?.title;if("item-title"===this.sublayerTitleMode)return this.url?p(this.url,t.name):t.name;let s=t.name;if(!s&&this.url){const e=f(this.url);null!=e&&(s=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&i&&(s=i+" - "+s),y(s)}set url(e){if(null==e)return void this._set("url",e);const t=v({layer:this,url:e,nonStandardUrlAllowed:!1,logger:m.getLogger(this)});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,i,s){w(this,e,"layers",t,s)}get parsedUrl(){const e=this._get("url"),t=g(e);return t&&null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=R(this.parsedUrl?.path??"",this.rootNode,e,this.customParameters,this.apiKey,m.getLogger(this),t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){if("page"===e?.type){const i=e.rootIndex%e.pageSize,s=e.rootPage?.nodes?.[i];if(null==s?.obb?.center||null==s.obb.halfSize)throw new t("sceneservice:invalid-node-page","Invalid node page.");if(s.obb.center[0]<k||null==this.fullExtent||this.fullExtent.hasZ)return;const r=s.obb.halfSize,n=s.obb.center[2],a=Math.sqrt(r[0]*r[0]+r[1]*r[1]+r[2]*r[2]);this.fullExtent.zmin=n-a,this.fullExtent.zmax=n+a}else if("node"===e?.type){const t=e.rootNode?.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<k)return;const i=t[2],s=t[3],{fullExtent:r}=this;r&&(r.zmin=i-s,r.zmax=i+s)}}async _fetchService(e){if(null==this.url)throw new t("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(t){const i=await e(this.url??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t});if(i.data&&Array.isArray(i.data.layers)&&i.data.layers.length>0)return i.data.layers[0].id}async _fetchServiceLayer(t){const i=await e(this.parsedUrl?.path??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t});i.ssl&&this.url&&(this.url=this.url.replace(/^http:/i,"https:"));let s=!1;if(i.data.layerType&&"Voxel"===i.data.layerType&&(s=!0),s)return this._fetchVoxelServiceLayer();const r=i.data;this.read(r,this._getServiceContext()),this.validateLayer(r)}async _fetchVoxelServiceLayer(t){const i=(await e(this.parsedUrl?.path+"/layer",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t})).data;this.read(i,this._getServiceContext()),this.validateLayer(i)}_getServiceContext(){return{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}async _saveAs(e,i){const s={...$,...i};let r=S.from(e);if(!r)throw new t("sceneservice:portal-item-required","_saveAs() requires a portal item to save to");r.id&&(r=r.clone(),r.id=null);const n=r.portal||x.getDefault();await this._ensureLoadBeforeSave(),r.type=O,r.portal=n;const a=j(r,"portal-item",!0),o={layers:[this.write({},a)]};return await Promise.all(a.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(o,a,s),this.url&&(r.url=this.url),r.title||(r.title=this.title),U(r,s,q.newItem),await n.signIn(),await n.user.addItem({item:r,folder:s?.folder,data:o}),await b(this.resourceReferences,a),this.portalItem=r,I(a),a.portalItem=r,r}async _save(e){const i={...$,...e};if(!this.portalItem)throw new t("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(this.portalItem.type!==O)throw new t("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${O}"`);await this._ensureLoadBeforeSave();const s=j(this.portalItem,"portal-item",!0),r={layers:[this.write({},s)]};return await Promise.all(s.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(r,s,i),this.url&&(this.portalItem.url=this.url),this.portalItem.title||(this.portalItem.title=this.title),U(this.portalItem,i,q.existingItem),await E(this.portalItem,r,this.resourceReferences,s),I(s),this.portalItem}async _validateAgainstJSONSchema(e,i,s){const r=s?.validationOptions;_(i,{errorName:"sceneservice:save"},{ignoreUnsupported:r?.ignoreUnsupported,supplementalUnsupportedErrors:["scenemodification:unsupported"]});const n=r?.enabled,a=N();if(n&&a){const i=(await a()).validate(e,s.portalItemLayerType);if(!i.length)return;const n=`Layer item did not validate:\n${i.join("\n")}`;if(m.getLogger(this).error(`_validateAgainstJSONSchema(): ${n}`),"throw"===r.failPolicy){const e=i.map((e=>new t("sceneservice:schema-validation",e)));throw new t("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{validationErrors:e})}}}};return i([s(r)],A.prototype,"id",void 0),i([s({type:n})],A.prototype,"spatialReference",void 0),i([a("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],A.prototype,"readSpatialReference",null),i([s({type:o})],A.prototype,"fullExtent",void 0),i([a("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],A.prototype,"readFullExtent",null),i([s({readOnly:!0,type:l})],A.prototype,"heightModelInfo",void 0),i([s({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],A.prototype,"minScale",void 0),i([s({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],A.prototype,"maxScale",void 0),i([s({readOnly:!0})],A.prototype,"version",void 0),i([a("version",["store.version"])],A.prototype,"readVersion",null),i([s({type:String,json:{read:{source:"copyrightText"}}})],A.prototype,"copyright",void 0),i([s({type:String,json:{read:!1}})],A.prototype,"sublayerTitleMode",void 0),i([s({type:String})],A.prototype,"title",void 0),i([a("portal-item","title")],A.prototype,"readTitlePortalItem",null),i([a("service","title",["name"])],A.prototype,"readTitleService",null),i([s({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],A.prototype,"layerId",void 0),i([s(c)],A.prototype,"url",null),i([h("url")],A.prototype,"writeUrl",null),i([s()],A.prototype,"parsedUrl",null),i([s({readOnly:!0})],A.prototype,"store",void 0),i([s({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],A.prototype,"rootNode",void 0),A=i([u("esri.layers.mixins.SceneService")],A),A},k=-1e38;function P(e){if(null!=e.spatialReference)return n.fromJSON(e.spatialReference);const t=e.store,i=t.indexCRS||t.geographicCRS,s=i&&parseInt(i.slice(i.lastIndexOf("/")+1),10);return null!=s?new n(s):null}function U(e,t,i){e.typeKeywords||(e.typeKeywords=[]);const s=t.getTypeKeywords();for(const t of s)e.typeKeywords.push(t);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,i)=>i.indexOf(e)===t)),i===q.newItem&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}var q;!function(e){e[e.existingItem=0]="existingItem",e[e.newItem=1]="newItem"}(q||(q={}));const O="Scene Service",$={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var L;!function(e){e[e.SAVE=0]="SAVE",e[e.SAVE_AS=1]="SAVE_AS"}(L||(L={}));export{A as R,L as V,R as r};
//# sourceMappingURL=p-e08fbefe.js.map