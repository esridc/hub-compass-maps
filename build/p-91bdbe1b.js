import{av as t,g0 as e,s,cH as n,b4 as i,hh as o,aO as a,hi as l,a as r,cl as c,f5 as u,gu as h,b3 as f,dD as w,du as m,hj as p,e0 as y,d$ as d,hk as v,hl as x}from"./p-028496e2.js";import"./p-3b51db5e.js";const g=()=>s.getLogger("esri.layers.support.ElevationSampler");class T{queryElevation(t){return E(t.clone(),this)}on(){return n()}projectIfRequired(t,e){return M(t,e)}}class q extends T{get spatialReference(){return this.extent.spatialReference}constructor(t,s,n){super(),this.tile=t,this.noDataValue=n;const o=t.tile.extent;this.extent=e(o,s.spatialReference),this.extent.zmin=t.zmin,this.extent.zmax=t.zmax,this._aaExtent=o;const a=i(s.spatialReference),l=s.lodAt(t.tile.level).resolution*a;this.demResolution={min:l,max:l}}contains(t){const e=this.projectIfRequired(t,this.spatialReference);return null!=e&&this.containsAt(e.x,e.y)}containsAt(t,e){return o(this._aaExtent,t,e)}elevationAt(t,e){if(!this.containsAt(t,e)){const s=this.extent,n=`${s.xmin}, ${s.ymin}, ${s.xmax}, ${s.ymax}`;return g().warn("#elevationAt()",`Point used to sample elevation (${t}, ${e}) is outside of the sampler extent (${n})`),this.noDataValue}return this.tile.sample(t,e)??this.noDataValue}}class _ extends T{get spatialReference(){return this.extent.spatialReference}constructor(t,s,n){let i;super(),"number"==typeof s?(this.noDataValue=s,i=null):(i=s,this.noDataValue=n),this.samplers=i?t.map((t=>new q(t,i,this.noDataValue))):t;const o=this.samplers[0];if(o){this.extent=o.extent.clone();const{min:t,max:e}=o.demResolution;this.demResolution={min:t,max:e};for(let t=1;t<this.samplers.length;t++){const e=this.samplers[t];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max)}}else this.extent=e(a(),i.spatialReference),this.demResolution={min:0,max:0}}elevationAt(t,e){let s,n=!1;for(const i of this.samplers)if(i.containsAt(t,e)&&(n=!0,s=i.elevationAt(t,e),s!==i.noDataValue))return s;return null!=s?s:(n||g().warn("#elevationAt()",`Point used to sample elevation (${t}, ${e}) is outside of the sampler`),this.noDataValue)}}function E(t,e){const s=M(t,e.spatialReference);if(!s)return null;switch(t.type){case"point":I(t,s,e);break;case"polyline":$(t,s,e);break;case"multipoint":A(t,s,e)}return t}function M(t,e){if(null==t)return null;const s=t.spatialReference;if(s.equals(e))return t;const n=l(t,e);return n||g().error(`Cannot project geometry spatial reference (wkid:${s.wkid}) to elevation sampler spatial reference (wkid:${e.wkid})`),n}function I(t,e,s){t.z=s.elevationAt(e.x,e.y)}function $(t,e,s){C.spatialReference=e.spatialReference;const n=t.hasM&&!t.hasZ;for(let i=0;i<t.paths.length;i++){const o=t.paths[i],a=e.paths[i];for(let t=0;t<o.length;t++){const e=o[t],i=a[t];C.x=i[0],C.y=i[1],n&&(e[3]=e[2]),e[2]=s.elevationAt(C.x,C.y)}}t.hasZ=!0}function A(t,e,s){C.spatialReference=e.spatialReference;const n=t.hasM&&!t.hasZ;for(let i=0;i<t.points.length;i++){const o=t.points[i],a=e.points[i];C.x=a[0],C.y=a[1],n&&(o[3]=o[2]),o[2]=s.elevationAt(C.x,C.y)}t.hasZ=!0}const C=new t;class D{constructor(t,e){this.data=t,this.safeWidth=.99999999*(t.width-1),this.dx=(t.width-1)/(e[2]-e[0]),this.dy=(t.width-1)/(e[3]-e[1]),this.x0=e[0],this.y1=e[3]}}class R{constructor(t,e=null){if(this.tile=t,null!=e&&null!=t){const s=t.extent;this._samplerData=new D(e,s)}}get zmin(){return null!=this._samplerData?this._samplerData.data.minValue:0}get zmax(){return null!=this._samplerData?this._samplerData.data.maxValue:0}get hasNoDataValues(){return!!this._samplerData?.data.hasNoDataValues}sample(t,e){if(null==this._samplerData)return;const{safeWidth:s,data:n,dx:i,dy:o,y1:a,x0:l}=this._samplerData,{width:r,values:c,noDataValue:u}=n,h=b(o*(a-e),0,s),f=b(i*(t-l),0,s),w=Math.floor(h),m=Math.floor(f),p=w*r+m,y=p+r,d=c[p],v=c[y],x=c[p+1],g=c[y+1];if(d!==u&&v!==u&&x!==u&&g!==u){const t=f-m,e=d+(x-d)*t;return e+(v+(g-v)*t-e)*(h-w)}}}function b(t,e,s){return t<e?e:t>s?s:t}class F{async queryAll(t,e,s){if(!(t=s&&s.ignoreInvisibleLayers?t.filter((t=>t.visible)):t.slice()).length)throw new r("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=S.fromGeometry(e);let i=!1;s&&s.returnSampleInfo||(i=!0);const o={...V,...s,returnSampleInfo:!0},a=await this.query(t[t.length-1],n,o),l=await this._queryAllContinue(t,a,o);return l.geometry=l.geometry.export(),i&&delete l.sampleInfo,l}async query(t,e,s){if(!t)throw new r("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!e||!(e instanceof S)&&"point"!==e.type&&"multipoint"!==e.type&&"polyline"!==e.type)throw new r("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...V,...s},i=new L(t,e.spatialReference,n),o=n.signal;return await t.load({signal:o}),await this._createGeometryDescriptor(i,e,o),await this._selectTiles(i,o),await this._populateElevationTiles(i,o),this._sampleGeometryWithElevation(i),this._createQueryResult(i,o)}async createSampler(t,e,s){if(!t)throw new r("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!e||"extent"!==e.type)throw new r("elevation-query:invalid-extent","Invalid or undefined extent");const n={...V,...s};return this._createSampler(t,e,n)}async createSamplerAll(t,e,s){if(!(t=s&&s.ignoreInvisibleLayers?t.filter((t=>t.visible)):t.slice()).length)throw new r("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!e||"extent"!==e.type)throw new r("elevation-query:invalid-extent","Invalid or undefined extent");const n={...V,...s,returnSampleInfo:!0},i=await this._createSampler(t[t.length-1],e,n);return this._createSamplerAllContinue(t,e,i,n)}async _createSampler(t,e,s,n){const i=s.signal;await t.load({signal:i});const o=e.spatialReference,a=t.tileInfo.spatialReference;o.equals(a)||(await c([{source:o,dest:a}],{signal:i}),e=u(e,a));const l=new j(t,e,s,n);return await this._selectTiles(l,i),await this._populateElevationTiles(l,i),new _(l.elevationTiles,l.layer.tileInfo,l.options.noDataValue)}async _createSamplerAllContinue(t,e,s,n){if(t.pop(),!t.length)return s;const i=s.samplers.filter((t=>!t.tile.hasNoDataValues)).map((t=>h(t.extent))),o=await this._createSampler(t[t.length-1],e,n,i);if(0===o.samplers.length)return s;const a=s.samplers.concat(o.samplers),l=new _(a,n.noDataValue);return this._createSamplerAllContinue(t,e,l,n)}async _queryAllContinue(t,e,s){const n=t.pop(),i=e.geometry.coordinates,o=e.sampleInfo;f(o);const a=[],l=[];for(let e=0;e<i.length;e++){const s=o[e];s.demResolution>=0?s.source||(s.source=n):t.length&&(a.push(i[e]),l.push(e))}if(!t.length||0===a.length)return e;const r=e.geometry.clone(a),c=await this.query(t[t.length-1],r,s),u=c.sampleInfo;if(!u)throw new Error("no sampleInfo");return l.forEach(((t,e)=>{i[t].z=c.geometry.coordinates[e].z,o[t].demResolution=u[e].demResolution})),this._queryAllContinue(t,e,s)}async _createQueryResult(t,e){const s=await t.geometry.project(t.outSpatialReference,e);f(s);const n={geometry:s.export(),noDataValue:t.options.noDataValue};return t.options.returnSampleInfo&&(n.sampleInfo=this._extractSampleInfo(t)),t.geometry.coordinates.forEach((t=>{t.tile=null,t.elevationTile=null})),n}async _createGeometryDescriptor(t,e,s){let n;const i=t.layer.tileInfo.spatialReference;if(e instanceof S?n=await e.project(i,s):(await c([{source:e.spatialReference,dest:i}],{signal:s}),n=u(e,i)),!n)throw new r("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${e.spatialReference.wkid}' on an elevation service in '${i.wkid}'`);t.geometry=S.fromGeometry(n)}async _selectTiles(t,e){"geometry"===t.type&&this._preselectOutsideLayerExtent(t);const s=t.options.demResolution;if("number"==typeof s)this._selectTilesClosestResolution(t,s);else if("finest-contiguous"===s)await this._selectTilesFinestContiguous(t,e);else{if("auto"!==s)throw new r("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${s}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(t,e)}}_preselectOutsideLayerExtent(t){if(null==t.layer.fullExtent)return;const e=new R(null);e.sample=()=>t.options.noDataValue,t.outsideExtentTile=e;const s=t.layer.fullExtent;t.geometry.coordinates.forEach((t=>{const n=t.x,i=t.y;(n<s.xmin||n>s.xmax||i<s.ymin||i>s.ymax)&&(t.elevationTile=e)}))}_selectTilesClosestResolution(t,e){const s=this._findNearestDemResolutionLODIndex(t,e);t.selectTilesAtLOD(s)}_findNearestDemResolutionLODIndex(t,e){const{tileInfo:s,tilemapCache:n}=t.layer,o=e/i(s.spatialReference),a=Z(s,n);let l=a[0],r=0;for(let t=1;t<a.length;t++){const e=a[t];Math.abs(e.resolution-o)<Math.abs(l.resolution-o)&&(l=e,r=t)}return r}async _selectTilesFinestContiguous(t,e){const{tileInfo:s,tilemapCache:n}=t.layer,i=P(s,n,t.options.minDemResolution);await this._selectTilesFinestContiguousAt(t,i,e)}async _selectTilesFinestContiguousAt(t,e,s){const n=t.layer;if(t.selectTilesAtLOD(e),e<0)return;const i=n.tilemapCache,o=t.getTilesToFetch();try{if(i&&!G(i))await w(Promise.all(o.map((t=>i.fetchAvailability(t.level,t.row,t.col,{signal:s})))),s);else if(await this._populateElevationTiles(t,s),!t.allElevationTilesFetched())throw t.clearElevationTiles(),new r("elevation-query:has-unavailable-tiles")}catch(n){m(n),await this._selectTilesFinestContiguousAt(t,e-1,s)}}async _populateElevationTiles(t,e){const s=t.getTilesToFetch(),n={},i=t.options.cache,o=t.options.noDataValue,a=s.map((async s=>{if(null==s.id)return;const a=`${t.layer.uid}:${s.id}:${o}`,l=null!=i?i.get(a):null,r=null!=l?l:await t.layer.fetchTile(s.level,s.row,s.col,{noDataValue:o,signal:e});null!=i&&i.put(a,r),n[s.id]=new R(s,r)}));await w(Promise.allSettled(a),e),t.populateElevationTiles(n)}async _selectTilesAuto(t,e){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const s=t.layer.tilemapCache;if(!s||G(s))return this._selectTilesAutoPrefetchUpsample(t,e);const n=t.getTilesToFetch(),i={},o=n.map((async t=>{const n=new x(null,0,0,0,a()),o=await p(s.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:e}));!1!==o.ok?null!=t.id&&(i[t.id]=n):m(o.error)}));await w(Promise.all(o),e),t.remapTiles(i)}_reduceTilesForMaximumRequests(t){const e=t.layer.tileInfo;let s=0;const n={},i=t=>{null!=t.id&&(t.id in n?n[t.id]++:(n[t.id]=1,s++))},o=t=>{if(null==t.id)return;const e=n[t.id];1===e?(delete n[t.id],s--):n[t.id]=e-1};t.forEachTileToFetch(i,o);let a=!0;for(;a&&(a=!1,t.forEachTileToFetch((n=>{s<=t.options.maximumAutoTileRequests||(o(n),e.upsampleTile(n)&&(a=!0),i(n))}),o),a););}_selectTilesAutoFinest(t){const{tileInfo:e,tilemapCache:s}=t.layer,n=P(e,s,t.options.minDemResolution);t.selectTilesAtLOD(n,t.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(t,e){const s=t.layer.tileInfo;await this._populateElevationTiles(t,e);let n=!1;t.forEachTileToFetch(((t,e)=>{s.upsampleTile(t)?n=!0:e()})),n&&await this._selectTilesAutoPrefetchUpsample(t,e)}_sampleGeometryWithElevation(t){t.geometry.coordinates.forEach((e=>{const s=e.elevationTile;let n=t.options.noDataValue;if(s){const t=s.sample(e.x,e.y);null!=t?n=t:e.elevationTile=null}e.z=n}))}_extractSampleInfo(t){const e=t.layer.tileInfo,s=i(e.spatialReference);return t.geometry.coordinates.map((n=>{let i=-1;if(n.elevationTile&&n.elevationTile!==t.outsideExtentTile){i=e.lodAt(n.elevationTile.tile.level).resolution*s}return{demResolution:i}}))}}class S{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(t){const e=new S;return e.geometry=this.geometry,e.spatialReference=this.spatialReference,e.coordinates=t||this.coordinates.map((t=>t.clone())),e._exporter=this._exporter,e}async project(t,e){if(this.spatialReference.equals(t))return this.clone();await c([{source:this.spatialReference,dest:t}],{signal:e});const s=new y({spatialReference:this.spatialReference,points:this.coordinates.map((t=>[t.x,t.y]))}),n=u(s,t);if(!n)return null;const i=this.coordinates.map(((t,e)=>{const s=t.clone(),i=n.points[e];return s.x=i[0],s.y=i[1],s})),o=this.clone(i);return o.spatialReference=t,o}static fromGeometry(e){const s=new S;if(s.geometry=e,s.spatialReference=e.spatialReference,e instanceof S)s.coordinates=e.coordinates.map((t=>t.clone())),s._exporter=(t,s)=>{const n=e.clone(t);return n.spatialReference=s,n};else switch(e.type){case"point":{const n=e,{hasZ:i,hasM:o}=n;s.coordinates=i&&o?[new k(n.x,n.y,n.z,n.m)]:i?[new k(n.x,n.y,n.z)]:o?[new k(n.x,n.y,null,n.m)]:[new k(n.x,n.y)],s._exporter=(s,n)=>e.hasM?new t(s[0].x,s[0].y,s[0].z,s[0].m,n):new t(s[0].x,s[0].y,s[0].z,n);break}case"multipoint":{const t=e,{hasZ:n,hasM:i}=t;s.coordinates=n&&i?t.points.map((t=>new k(t[0],t[1],t[2],t[3]))):n?t.points.map((t=>new k(t[0],t[1],t[2]))):i?t.points.map((t=>new k(t[0],t[1],null,t[2]))):t.points.map((t=>new k(t[0],t[1]))),s._exporter=(t,s)=>e.hasM?new y({points:t.map((t=>[t.x,t.y,t.z,t.m])),hasZ:!0,hasM:!0,spatialReference:s}):new y(t.map((t=>[t.x,t.y,t.z])),s);break}case"polyline":{const t=e,n=[],i=[],{hasZ:o,hasM:a}=e;let l=0;for(const e of t.paths)if(i.push([l,l+e.length]),l+=e.length,o&&a)for(const t of e)n.push(new k(t[0],t[1],t[2],t[3]));else if(o)for(const t of e)n.push(new k(t[0],t[1],t[2]));else if(a)for(const t of e)n.push(new k(t[0],t[1],null,t[2]));else for(const t of e)n.push(new k(t[0],t[1]));s.coordinates=n,s._exporter=(t,s)=>{const n=e.hasM?t.map((t=>[t.x,t.y,t.z,t.m])):t.map((t=>[t.x,t.y,t.z])),o=i.map((t=>n.slice(t[0],t[1])));return new d({paths:o,hasM:e.hasM,hasZ:!0,spatialReference:s})};break}}return s}}class k{constructor(t,e,s=null,n=null,i=null,o=null){this.x=t,this.y=e,this.z=s,this.m=n,this.tile=i,this.elevationTile=o}clone(){return new k(this.x,this.y,this.z,this.m)}}class O{constructor(t,e){this.layer=t,this.options=e}}class L extends O{constructor(t,e,s){super(t,s),this.outSpatialReference=e,this.type="geometry"}selectTilesAtLOD(t){if(t<0)this.geometry.coordinates.forEach((t=>t.tile=null));else{const{tileInfo:e,tilemapCache:s}=this.layer,n=Z(e,s)[t].level;this.geometry.coordinates.forEach((t=>t.tile=e.tileAt(n,t.x,t.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((t=>!t.elevationTile))}clearElevationTiles(){for(const t of this.geometry.coordinates)t.elevationTile!==this.outsideExtentTile&&(t.elevationTile=null)}populateElevationTiles(t){for(const e of this.geometry.coordinates)!e.elevationTile&&e.tile?.id&&(e.elevationTile=t[e.tile.id])}remapTiles(t){for(const e of this.geometry.coordinates){const s=e.tile?.id;e.tile=s?t[s]:null}}getTilesToFetch(){const t={},e=[];for(const s of this.geometry.coordinates){const n=s.tile;if(!n)continue;const i=s.tile?.id;s.elevationTile||!i||t[i]||(t[i]=n,e.push(n))}return e}forEachTileToFetch(t){for(const e of this.geometry.coordinates)e.tile&&!e.elevationTile&&t(e.tile,(()=>{e.tile=null}))}}class j extends O{constructor(t,e,s,n){super(t,s),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=e.clone().intersection(t.fullExtent),this.maskExtents=n}selectTilesAtLOD(t,e){const s=this._maximumLodForRequests(e),n=Math.min(s,t);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(t){const{tileInfo:e,tilemapCache:s}=this.layer,n=Z(e,s);if(!t)return n.length-1;const i=this.extent;if(null==i)return-1;for(let s=n.length-1;s>=0;s--){const o=n[s],a=o.resolution*e.size[0],l=o.resolution*e.size[1];if(Math.ceil(i.width/a)*Math.ceil(i.height/l)<=t)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(t){for(const e of this._candidateTiles){const s=e.id&&t[e.id];s&&(this._fetchedCandidates.add(e),this.elevationTiles.push(s))}}remapTiles(t){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((e=>t[e.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(t,e){const s=this._candidateTiles;this._candidateTiles=[],s.forEach((s=>{if(this._fetchedCandidates.has(s))return void(e&&e(s));let n=!1;t(s,(()=>n=!0)),n?e&&e(s):this._candidateTiles.push(s)})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,e)}_uniqueNonOverlappingTiles(t,e){const s={},n=[];for(const i of t){const t=i.id;t&&!s[t]?(s[t]=i,n.push(i)):e&&e(i)}const i=n.sort(((t,e)=>t.level-e.level));return i.filter(((t,s)=>{for(let n=0;n<s;n++){const s=i[n].extent;if(s&&t.extent&&v(s,t.extent))return e&&e(t),!1}return!0}))}_selectCandidateTilesCoveringExtentAt(t){this._candidateTiles.length=0;const e=this.extent;if(null==e)return;const{tileInfo:s,tilemapCache:n}=this.layer,i=Z(s,n)[t],o=s.tileAt(i.level,e.xmin,e.ymin),a=o.extent;if(null==a)return;const l=i.resolution*s.size[0],r=i.resolution*s.size[1],c=Math.ceil((e.xmax-a[0])/l),u=Math.ceil((e.ymax-a[1])/r);for(let t=0;t<u;t++)for(let e=0;e<c;e++){const n=new x(null,o.level,o.row-t,o.col+e);s.updateTileInfo(n),this._tileIsMasked(n)||this._candidateTiles.push(n)}}_tileIsMasked(t){return!!this.maskExtents&&this.maskExtents.some((e=>t.extent&&v(e,t.extent)))}}function P(t,e,s=0){const n=Z(t,e);let o=n.length-1;if(s>0){const e=s/i(t.spatialReference),a=n.findIndex((t=>t.resolution<e));0===a?o=0:a>0&&(o=a-1)}return o}const V={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};function Z(t,e){const s=t.lods;if(G(e)){const{effectiveMinLOD:t,effectiveMaxLOD:n}=e;return s.filter((e=>e.level>=t&&e.level<=n))}return s}function G(t){return null!=t?.tileInfo}export{F as ElevationQuery,S as GeometryDescriptor,P as getFinestLodIndex};
//# sourceMappingURL=p-91bdbe1b.js.map