import{r as t,p as e,bZ as n,q as r,_ as i,s,a7 as o,n as l,jS as a,m as f,x as c,a3 as h,fl as u,E as p,eL as w,ah as d}from"./p-aad64c9f.js";class y{constructor(t=null,e=null,n=null){this.minValue=t,this.maxValue=e,this.noDataValue=n}}var M;let m=M=class extends i{static createEmptyBand(t,e){return new(M.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let r=0;r<t.length;r++){const i=t[r];for(let t=0;t<e;t++)i[t]||(n[t]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new s("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new y)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>x(t,this.mask)));const t=this.mask;let e=0;if(null!=t)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;const[e,n]=a(t),r=this.pixels,i=this.width*this.height,s=r.length;let o,l,f;const c=[];for(let a=0;a<s;a++){f=M.createEmptyBand(t,i),o=r[a];for(let t=0;t<i;t++)l=o[t],f[t]=l>n?n:l<e?e:l;c.push(f)}this.pixels=c,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(null==t||0===t.length||!e||0===e.length)return this;const r=e.length,i=t.some((t=>t>=e.length)),s=r===t.length&&!t.some(((t,e)=>t!==e));if(i||s)return this;const o=this.bandMasks?.length===r?t.map((t=>this.bandMasks[t])):void 0;let{mask:l,validPixelCount:a}=this;const{width:f,height:c}=this;return o?.length&&(l=M.combineBandMasks(o),a=l.filter((t=>!!t)).length),new M({pixelType:this.pixelType,width:f,height:c,mask:l,bandMasks:o,validPixelCount:a,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:n&&t.map((t=>n[t]))})}clone(){const t=new M({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;null!=this.mask&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map((t=>new Uint8Array(t))));const n=M.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const r=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=r?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=o(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:r,pixels:i}=this;if(!t||!i?.length)return void l.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,o,a,f;s=o=a=i[0],i.length>=3?(o=i[1],a=i[2]):2===i.length&&(o=i[1]);const c=new Uint32Array(t),h=this.width*this.height;if(s.length===h)if(null!=e&&e.length===h)if(n)for(f=0;f<h;f++){const t=e[f];if(t){const e=t/255;c[f]=r?t<<24|a[f]*e<<16|o[f]*e<<8|s[f]*e:t<<24|a[f]<<16|o[f]<<8|s[f]}}else for(f=0;f<h;f++)e[f]&&(c[f]=255<<24|a[f]<<16|o[f]<<8|s[f]);else for(f=0;f<h;f++)c[f]=255<<24|a[f]<<16|o[f]<<8|s[f];else l.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:r}=this;if(!t||!e?.length)return void l.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const i=this.pixelType;let s=1,o=0,a=1;if(r&&r.length>0){for(const t of r)if(null!=t.minValue&&(o=Math.min(o,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;a=Math.max(a,e)}s=255/a}else{let t=255;"s8"===i?(o=-128,t=127):"u16"===i?t=65535:"s16"===i?(o=-32768,t=32767):"u32"===i?t=4294967295:"s32"===i?(o=-2147483648,t=2147483647):"f32"===i?(o=-34e38,t=34e38):"f64"===i&&(o=-Number.MAX_VALUE,t=Number.MAX_VALUE),s=255/(t-o)}const f=new Uint32Array(t),c=this.width*this.height;let h,u,p,w,d;if(h=u=p=e[0],h.length!==c)return l.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(u=e[1],e.length>=3&&(p=e[2]),null!=n&&n.length===c)for(w=0;w<c;w++)n[w]&&(f[w]=255<<24|(p[w]-o)*s<<16|(u[w]-o)*s<<8|(h[w]-o)*s);else for(w=0;w<c;w++)f[w]=255<<24|(p[w]-o)*s<<16|(u[w]-o)*s<<8|(h[w]-o)*s;else if(null!=n&&n.length===c)for(w=0;w<c;w++)d=(h[w]-o)*s,n[w]&&(f[w]=255<<24|d<<16|d<<8|d);else for(w=0;w<c;w++)d=(h[w]-o)*s,f[w]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e?.length)return l.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let r,i,s,o;r=i=s=e[0],e.length>=3?(i=e[1],s=e[2]):2===e.length&&(i=e[1]);const a=this.width*this.height;if(r.length!==a)return l.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let f=0;if(null!=n&&n.length===a)for(o=0;o<a;o++)t[f++]=r[o],t[f++]=i[o],t[f++]=s[o],t[f++]=1&n[o];else for(o=0;o<a;o++)t[f++]=r[o],t[f++]=i[o],t[f++]=s[o],t[f++]=1}};function x(t,e){let n=1/0,r=-1/0;const i=t.length;let s,o=0;if(null!=e)for(s=0;s<i;s++)e[s]&&(o=t[s],n=o<n?o:n,r=o>r?o:r);else for(s=0;s<i;s++)o=t[s],n=o<n?o:n,r=o>r?o:r;return new y(n,r)}t([e({json:{write:!0}})],m.prototype,"width",void 0),t([e({json:{write:!0}})],m.prototype,"height",void 0),t([e({json:{write:!0}})],m.prototype,"pixelType",void 0),t([n("pixelType")],m.prototype,"castPixelType",null),t([e({json:{write:!0}})],m.prototype,"validPixelCount",void 0),t([e({json:{write:!0}})],m.prototype,"mask",void 0),t([e({json:{write:!0}})],m.prototype,"maskIsAlpha",void 0),t([e({json:{write:!0}})],m.prototype,"pixels",void 0),t([e()],m.prototype,"premultiplyAlpha",void 0),t([e({json:{write:!0}})],m.prototype,"statistics",void 0),t([e({json:{write:!0}})],m.prototype,"depthCount",void 0),t([e({json:{write:!0}})],m.prototype,"noDataValues",void 0),t([e({json:{write:!0}})],m.prototype,"bandMasks",void 0),m=M=t([r("esri.layers.support.PixelBlock")],m);const A=m;var g,k;!function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"}(g||(g={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(k||(k={}));const b=6;function v(t){return null!=t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function U(t){if(!t?.length||t.some((t=>!v(t))))return null;if(1===t.length)return t[0]?.clone()??null;const e=t,{width:n,height:r,pixelType:i}=e[0];if(e.some((t=>t.width!==n||t.height!==r)))return null;const s=e.map((({mask:t})=>t)).filter((t=>null!=t));let o=null;s.length&&(o=new Uint8Array(n*r),o.set(s[0]),s.length>1&&j(s.slice(1),o));const l=[];e.forEach((({pixels:t})=>l.push(...t)));const a=e.map((({statistics:t})=>t)).filter((t=>t?.length)),f=[];return a.forEach((t=>f.push(...t))),new A({pixelType:i,width:n,height:r,mask:o,pixels:l,statistics:f.length?f:null})}function F(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let r=0;n[0][0]<0&&(r=n[0][0]);const i=Math.max(256,n[n.length-1][0]-r+1),s=new Uint8Array(4*i),o=[];let l,a=0,f=0;const c=5===n[0].length;if(i>65536)return n.forEach((t=>{o[t[0]-r]=c?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:o,offset:r,alphaSpecified:c};if(t.fillUnspecified)for(l=n[f],a=l[0]-r;a<i;a++)s[4*a]=l[1],s[4*a+1]=l[2],s[4*a+2]=l[3],s[4*a+3]=c?l[4]:255,a===l[0]-r&&(l=f===n.length-1?l:n[++f]);else for(a=0;a<n.length;a++)l=n[a],f=4*(l[0]-r),s[f]=l[1],s[f+1]=l[2],s[f+2]=l[3],s[f+3]=c?l[4]:255;return{indexedColormap:s,offset:r,alphaSpecified:c}}function T(t,e){if(!v(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),r=n.pixels;let i=n.mask;const s=n.width*n.height;if(1!==r.length)return t;const{indexedColormap:o,indexed2DColormap:l,offset:a,alphaSpecified:f}=e;let c=0;const h=r[0],u=new Uint8Array(h.length),p=new Uint8Array(h.length),w=new Uint8Array(h.length);let d,y=0;if(o){const t=o.length-1;if(null!=i)for(c=0;c<s;c++)i[c]&&(y=4*(h[c]-a),y<a||y>t?i[c]=0:(u[c]=o[y],p[c]=o[y+1],w[c]=o[y+2],i[c]=o[y+3]));else{for(i=new Uint8Array(s),c=0;c<s;c++)y=4*(h[c]-a),y<a||y>t?i[c]=0:(u[c]=o[y],p[c]=o[y+1],w[c]=o[y+2],i[c]=o[y+3]);n.mask=i}}else if(l)if(null!=i)for(c=0;c<s;c++)i[c]&&(d=l[h[c]],u[c]=d[0],p[c]=d[1],w[c]=d[2],i[c]=d[3]);else{for(i=new Uint8Array(s),c=0;c<s;c++)d=l[h[c]],u[c]=d[0],p[c]=d[1],w[c]=d[2],i[c]=d[3];n.mask=i}return n.pixels=[u,p,w],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=f,n}function _(t,e){if(!v(t))return null;const{pixels:n,mask:r}=t,i=n.length;let s=e.lut;const{offset:o}=e;s&&1===s[0].length&&(s=n.map((()=>s)));const l=[],a=e.outputPixelType||"u8";for(let t=0;t<i;t++){const e=I(n[t],r,s[t],o||0,a);l.push(e)}const f=new A({width:t.width,height:t.height,pixels:l,mask:r,pixelType:a});return f.updateStatistics(),f}function I(t,e,n,r,i){const s=t.length,o=A.createEmptyBand(i,s);if(e)for(let i=0;i<s;i++)e[i]&&(o[i]=n[t[i]-r]);else for(let e=0;e<s;e++)o[e]=n[t[e]-r];return o}function B(t,e){if(!v(t))return null;const n=t.clone(),{pixels:r}=n,i=n.width*n.height,s=e.length,o=Math.floor(s/2),l=e[Math.floor(o)],a=r[0];let f,c,h,u,p,w,d=!1;const y=new Uint8Array(i),M=new Uint8Array(i),m=new Uint8Array(i);let x=n.mask;const A=4===e[0].mappedColor.length;for(x||(x=new Uint8Array(i),x.fill(A?255:1),n.mask=x),p=0;p<i;p++)if(x[p]){for(f=a[p],d=!1,w=o,c=l,h=0,u=s-1;u-h>1;){if(f===c.value){d=!0;break}f>c.value?h=w:u=w,w=Math.floor((h+u)/2),c=e[Math.floor(w)]}d||(f===e[h].value?(c=e[h],d=!0):f===e[u].value?(c=e[u],d=!0):f<e[h].value?(d=!1,c=null):f>e[h].value&&(f<e[u].value?(c=e[h],d=!0):u===s-1?(d=!1,c=null):(c=e[u],d=!0))),d?(y[p]=c.mappedColor[0],M[p]=c.mappedColor[1],m[p]=c.mappedColor[2],x[p]=c.mappedColor[3]):y[p]=M[p]=m[p]=x[p]=0}return n.pixels=[y,M,m],n.mask=x,n.pixelType="u8",n.maskIsAlpha=A,n}function P(t,e){if(!v(t))return null;const{width:n,height:r}=t,{inputRanges:i,outputValues:s,outputPixelType:o,noDataRanges:l,allowUnmatched:f,isLastInputRangeInclusive:c}=e,h=t.pixels[0],u=A.createEmptyBand(o,h.length),p=t.mask,w=new Uint8Array(n*r);p?w.set(p):w.fill(255);const d=t.pixelType.startsWith("f")?1e-6:0,y=i.map((t=>t-d));y[0]=i[0],y[y.length-1]=i[i.length-1]+(c?1e-6:0);const M=i.length/2,[m,x]=a(o);for(let t=0;t<r;t++)for(let e=0;e<n;e++){const r=t*n+e;if(w[r]){const t=h[r];let e=!1;for(let n=M-1;n>=0;n--)if(t===y[2*n]||t>y[2*n]&&t<y[2*n+1]){u[r]=s[n],e=!0;break}e||(f?u[r]=t>x?x:t<m?m:t:w[r]=0)}}const g=l?.length;if(g)for(let t=0;t<r;t++)for(let e=0;e<n;e++){const r=t*n+e;if(!p||p[r]){const t=h[r];for(let e=0;e<g;e+=2)if(t>=l[e]&&t<=l[e+1]){u[r]=0,w[r]=0;break}}}return new A({width:n,height:r,pixelType:o,pixels:[u],mask:w})}function D(t,e,n,r){const i=null!=n&&n.length>=2?new Set(n):null,s=1===n?.length?n[0]:null,o=!!e?.length;for(let n=0;n<t.length;n++)if(r[n]){const l=t[n];if(o){let t=!1;for(let n=0;n<e.length;n+=2)if(l>=e[n]&&l<=e[n+1]){t=!0;break}t||(r[n]=0)}r[n]&&(l===s||i?.has(l))&&(r[n]=0)}}function R(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][r]){n=!0;break}n||(e[r]=0)}}function j(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][r]){n=!0;break}n&&(e[r]=0)}}function S(t,e){if(!v(t))return null;const{width:n,height:r,pixels:i}=t,s=n*r,o=new Uint8Array(s);t.mask?o.set(t.mask):o.fill(255);const l=i.length,{includedRanges:a,noDataValues:f,outputPixelType:c,matchAll:h,lookups:u}=e;if(u){const t=[];for(let e=0;e<l;e++){const n=u[e],r=I(i[e],o,n.lut,n.offset||0,"u8");t.push(r)}1===t.length?o.set(t[0]):h?R(t,o):j(t,o)}else if(h){const t=[];for(let e=0;e<l;e++){const n=new Uint8Array(s);n.set(o),D(i[e],a?.slice(2*e,2*e+2),f?.[e],n),t.push(n)}1===t.length?o.set(t[0]):R(t,o)}else for(let t=0;t<l;t++)D(i[t],a?.slice(2*t,2*t+2),f?.[t],o);return new A({width:n,height:r,pixelType:c,pixels:i,mask:o})}function G(t){const{srcPixelType:e,inputRanges:n,outputValues:r,allowUnmatched:i,noDataRanges:s,isLastInputRangeInclusive:o,outputPixelType:l}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const f=e.includes("16")?65536:256,c=e.includes("s")?-f/2:0,h=A.createEmptyBand(l,f),u=new Uint8Array(f);i&&u.fill(255);const[p,w]=a(l);if(n?.length&&r?.length){const t=1e-6,e=n.map((e=>e-t));e[0]=n[0],o&&(e[e.length-1]=n[n.length-1]);for(let t=0;t<e.length;t++){const n=r[t]>w?w:r[t]<p?p:r[t],i=Math.ceil(e[2*t]-c),s=Math.floor(e[2*t+1]-c);for(let t=i;t<=s;t++)h[t]=n,u[t]=255}}if(s?.length)for(let t=0;t<s.length;t++){const e=Math.ceil(s[2*t]-c),n=Math.floor(s[2*t+1]-c);for(let t=e;t<=n;t++)u[t]=0}return{lut:h,offset:c,mask:u}}function C(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const r=t.includes("16")?65536:256,i=t.includes("s")?-r/2:0,s=new Uint8Array(r);if(e)for(let t=0;t<e.length;t++){const n=Math.ceil(e[2*t]-i),r=Math.floor(e[2*t+1]-i);for(let t=n;t<=r;t++)s[t]=255}else s.fill(255);if(n)for(let t=0;t<n.length;t++)s[n[t]-i]=0;return{lut:s,offset:i}}function N(t,e,n,r,i,s,o,l){return{xmin:i<=n*t?0:i<n*t+t?i-n*t:t,ymin:s<=r*e?0:s<r*e+e?s-r*e:e,xmax:i+o<=n*t?0:i+o<n*t+t?i+o-n*t:t,ymax:s+l<=r*e?0:s+l<r*e+e?s+l-r*e:e}}function V(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(null==n?.pixelBlock)return null;const r=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,i=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,s=.01*Math.min(r,i),o=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0)),l=Math.min.apply(null,o.map((t=>t.extent.xmin))),a=Math.min.apply(null,o.map((t=>t.extent.ymin))),f=Math.max.apply(null,o.map((t=>t.extent.xmax))),c=Math.max.apply(null,o.map((t=>t.extent.ymax))),h={x:Math.round((e.xmin-l)/r),y:Math.round((c-e.ymax)/i)},u={width:Math.round((f-l)/r),height:Math.round((c-a)/i)},p={width:Math.round((e.xmax-e.xmin)/r),height:Math.round((e.ymax-e.ymin)/i)};if(Math.round(u.width/n.pixelBlock.width)*Math.round(u.height/n.pixelBlock.height)!==o.length||h.x<0||h.y<0||u.width<p.width||u.height<p.height)return null;return{extent:e,pixelBlock:z(o.map((t=>t.pixelBlock)),u,{clipOffset:h,clipSize:p})}}function W(t,e,n,r,i,s){const{width:o,height:l}=n.block,{x:a,y:f}=n.offset,{width:c,height:h}=n.mosaic,u=N(o,l,r,i,a,f,c,h);let p=0,w=0;if(s){const t=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,e=o*s.resolutionX,n=s.startX+r*e;n<t&&n+e>t?w=s.rightPadding:n>=t&&(p=s.leftMargin-s.rightPadding,w=0)}if(u.xmax-=w,"number"!=typeof e)for(let n=u.ymin;n<u.ymax;n++){const s=(i*l+n-f)*c+(r*o-a)+p,h=n*o;for(let n=u.xmin;n<u.xmax;n++)t[s+n]=e[h+n]}else for(let n=u.ymin;n<u.ymax;n++){const s=(i*l+n-f)*c+(r*o-a)+p;for(let n=u.xmin;n<u.xmax;n++)t[s+n]=e}}function z(t,e,n={}){const{clipOffset:r,clipSize:i,alignmentInfo:s,blockWidths:o}=n;if(o)return L(t,e,{blockWidths:o});const l=t.find((t=>v(t)));if(null==l)return null;const a=i?i.width:e.width,f=i?i.height:e.height,c=l.width,h=l.height,u=e.width/c,p=e.height/h,w={offset:r||{x:0,y:0},mosaic:i||e,block:{width:c,height:h}},d=l.pixelType,y=A.getPixelArrayConstructor(d),M=l.pixels.length,m=[];let x,g;for(let e=0;e<M;e++){g=new y(a*f);for(let n=0;n<p;n++)for(let r=0;r<u;r++){const i=t[n*u+r];v(i)&&(x=i.pixels[e],W(g,x,w,r,n,s))}m.push(g)}const k=t.some((t=>null==t||null!=t.mask&&t.mask.length>0)),b=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),U=k?new Uint8Array(a*f):void 0,F=b?[]:void 0;if(U){for(let e=0;e<p;e++)for(let n=0;n<u;n++){const r=t[e*u+n],i=null!=r?r.mask:null;W(U,null!=i?i:r?255:0,w,n,e,s)}if(F)for(let e=0;e<M;e++){const n=new Uint8Array(a*f);for(let r=0;r<p;r++)for(let i=0;i<u;i++){const o=t[r*u+i],l=o?.bandMasks?.[e]??o?.mask;W(n,null!=l?l:o?255:0,w,i,r,s)}F.push(n)}}const T=new A({width:a,height:f,pixels:m,pixelType:d,bandMasks:F,mask:U});return T.updateStatistics(),T}function L(t,e,n){const r=t.find((t=>null!=t));if(null==r)return null;const i=t.some((t=>null==t||!!t.mask)),{width:s,height:o}=e,l=i?new Uint8Array(s*o):null,{blockWidths:a}=n,f=[],c=r.getPlaneCount(),h=A.getPixelArrayConstructor(r.pixelType);if(i)for(let e=0,n=0;e<t.length;n+=a[e],e++){const r=t[e];if(!v(r))continue;const i=r.mask;for(let t=0;t<o;t++)for(let o=0;o<a[e];o++)l[t*s+o+n]=null==i?255:i[t*r.width+o]}const u=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),p=u?[]:void 0,w=s*o;for(let e=0;e<c;e++){const n=new h(w),r=u?new Uint8Array(w):void 0;for(let i=0,l=0;i<t.length;l+=a[i],i++){const f=t[i];if(!v(f))continue;const c=f.pixels[e];if(null!=c){for(let t=0;t<o;t++)for(let e=0;e<a[i];e++)n[t*s+e+l]=c[t*f.width+e];if(r){const t=f.bandMasks?.[e]??f.mask;for(let e=0;e<o;e++)for(let n=0;n<a[i];n++)r[e*s+n+l]=t?t[e*f.width+n]:255}}}f.push(n),p&&r&&p.push(r)}const d=new A({width:s,height:o,mask:l,bandMasks:p,pixels:f,pixelType:r.pixelType});return d.updateStatistics(),d}function q(t,e,n){if(!v(t))return null;const{width:r,height:i}=t,s=e.x,o=e.y,l=n.width+s,a=n.height+o;if(s<0||o<0||l>r||a>i)return t;if(0===s&&0===o&&l===r&&a===i)return t;t.mask||(t.mask=new Uint8Array(r*i));const f=t.mask;for(let t=0;t<i;t++){const e=t*r;for(let n=0;n<r;n++)f[e+n]=t<o||t>=a||n<s||n>=l?0:1}return t.updateStatistics(),t}function O(t){if(!v(t))return null;const e=t.clone(),{width:n,height:r,pixels:i}=t,s=i[0],o=e.pixels[0],l=t.mask;for(let t=2;t<r-1;t++){const e=new Map;for(let r=t-2;r<t+2;r++)for(let t=0;t<4;t++){const i=r*n+t;H(e,s[i],l?l[i]:1)}o[t*n]=$(e),o[t*n+1]=o[t*n+2]=o[t*n];let r=3;for(;r<n-1;r++){let i=(t-2)*n+r+1;H(e,s[i],l?l[i]:1),i=(t-1)*n+r+1,H(e,s[i],l?l[i]:1),i=t*n+r+1,H(e,s[i],l?l[i]:1),i=(t+1)*n+r+1,H(e,s[i],l?l[i]:1),i=(t-2)*n+r-3,E(e,s[i],l?l[i]:1),i=(t-1)*n+r-3,E(e,s[i],l?l[i]:1),i=t*n+r-3,E(e,s[i],l?l[i]:1),i=(t+1)*n+r-3,E(e,s[i],l?l[i]:1),o[t*n+r]=$(e)}o[t*n+r+1]=o[t*n+r]}for(let t=0;t<n;t++)o[t]=o[n+t]=o[2*n+t],o[(r-1)*n+t]=o[(r-2)*n+t];return e.updateStatistics(),e}function $(t){if(0===t.size)return 0;let e=0,n=-1,r=0;const i=t.keys();let s=i.next();for(;!s.done;)r=t.get(s.value),r>e&&(n=s.value,e=r),s=i.next();return n}function E(t,e,n){if(0===n)return;const r=t.get(e);1===r?t.delete(e):t.set(e,r-1)}function H(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function K(t,e,n){let{x:r,y:i}=e;const{width:s,height:o}=n;if(0===r&&0===i&&o===t.height&&s===t.width)return t;const{width:l,height:a}=t,f=Math.max(0,i),c=Math.max(0,r),h=Math.min(r+s,l),u=Math.min(i+o,a);if(h<0||u<0||!v(t))return null;r=Math.max(0,-r),i=Math.max(0,-i);const{pixels:p}=t,w=s*o,d=p.length,y=[];for(let e=0;e<d;e++){const n=p[e],o=A.createEmptyBand(t.pixelType,w);for(let t=f;t<u;t++){const e=t*l;let a=(t+i-f)*s+r;for(let t=c;t<h;t++)o[a++]=n[e+t]}y.push(o)}const M=new Uint8Array(w),m=t.mask;for(let t=f;t<u;t++){const e=t*l;let n=(t+i-f)*s+r;for(let t=c;t<h;t++)M[n++]=m?m[e+t]:1}const x=new A({width:n.width,height:n.height,pixelType:t.pixelType,pixels:y,mask:M});return x.updateStatistics(),x}function Z(t,e=!0){if(!v(t))return null;const{pixels:n,width:r,height:i,mask:s,pixelType:o}=t,l=[],a=Math.round(r/2),f=Math.round(i/2),c=i-1,h=r-1;for(let t=0;t<n.length;t++){const s=n[t],u=A.createEmptyBand(o,a*f);let p=0;for(let t=0;t<i;t+=2)for(let n=0;n<r;n+=2){const i=s[t*r+n];if(e){const e=n===h?i:s[t*r+n+1],o=t===c?i:s[t*r+n+r],l=n===h?o:t===c?e:s[t*r+n+r+1];u[p++]=(i+e+o+l)/4}else u[p++]=i}l.push(u)}let u=null;if(null!=s){u=new Uint8Array(a*f);let t=0;for(let n=0;n<i;n+=2)for(let i=0;i<r;i+=2){const o=s[n*r+i];if(e){const e=i===h?o:s[n*r+i+1],l=n===c?o:s[n*r+i+r],a=i===h?l:n===c?e:s[n*r+i+r+1];u[t++]=o*e*l*a?1:0}else u[t++]=o}}return new A({width:a,height:f,pixelType:o,pixels:l,mask:u})}function J(t,e,n=0,r=!0){if(!v(t))return null;const{width:i,height:s}=e;let{width:o,height:l}=t;const a=new Map,f={x:0,y:0},c=1+n;let h=t;for(let t=0;t<c;t++){const n=Math.ceil(o/i),u=Math.ceil(l/s);for(let r=0;r<u;r++){f.y=r*s;for(let s=0;s<n;s++){f.x=s*i;const n=K(h,f,e);a.set(`${t}/${r}/${s}`,n)}}t<c-1&&(h=Z(h,r)),o=Math.round(o/2),l=Math.round(l/2)}return a}function Q(t){const{pixelBlock:e,tileSize:n,level:r,row:i,col:s,useBilinear:o}=t;if(!v(e))return null;const{width:l,height:a}=n,f=2**r,c=f*l,h=f*a;let u=K(e,{y:i*h,x:s*c},{width:c,height:h});if(!u)return null;for(let t=r;t>0;t--)u=Z(u,o);return u}function X(t,e,n,r,i=0){const{width:s,height:o}=t,{width:l,height:a}=e,f=r.cols,c=r.rows,h=Math.ceil(l/f-.1/f),u=Math.ceil(a/c-.1/c);let p,w,d,y,M,m,x;const A=h*f,g=A*u*c,k=new Float32Array(g),b=new Float32Array(g),v=new Uint32Array(g),U=new Uint32Array(g);let F,T,_=0;for(let t=0;t<u;t++)for(let e=0;e<h;e++){p=12*(t*h+e),w=n[p],d=n[p+1],y=n[p+2],M=n[p+3],m=n[p+4],x=n[p+5];for(let n=0;n<c;n++){_=(t*c+n)*A+e*f,T=(n+.5)/c;for(let t=0;t<n;t++)F=(t+.5)/f,k[_+t]=(w*F+d*T+y)*s+i,b[_+t]=(M*F+m*T+x)*o+i,v[_+t]=Math.floor(k[_+t]),U[_+t]=Math.floor(b[_+t])}p+=6,w=n[p],d=n[p+1],y=n[p+2],M=n[p+3],m=n[p+4],x=n[p+5];for(let n=0;n<c;n++){_=(t*c+n)*A+e*f,T=(n+.5)/c;for(let t=n;t<f;t++)F=(t+.5)/f,k[_+t]=(w*F+d*T+y)*s+i,b[_+t]=(M*F+m*T+x)*o+i,v[_+t]=Math.floor(k[_+t]),U[_+t]=Math.floor(b[_+t])}}return{offsets_x:k,offsets_y:b,offsets_xi:v,offsets_yi:U,gridWidth:A}}function Y(t,e){const{coefficients:n,spacing:r}=e,{offsets_x:i,offsets_y:s,gridWidth:o}=X(t,t,n,{rows:r[0],cols:r[1]}),{width:l,height:a}=t,f=new Float32Array(l*a),c=180/Math.PI;for(let t=0;t<a;t++)for(let e=0;e<l;e++){const n=t*o+e,r=0===t?n:n-o,h=t===a-1?n:n+o,u=i[r]-i[h],p=s[h]-s[r];if(isNaN(u)||isNaN(p))f[t*l+e]=90;else{let n=Math.atan2(p,u)*c;n=(360+n)%360,f[t*l+e]=n}}return f}function tt(t,e,n,r,i="nearest"){if(!v(t))return null;"majority"===i&&(t=O(t));const{pixels:s,mask:o,bandMasks:l,pixelType:a}=t,f=t.width,c=t.height,h=A.getPixelArrayConstructor(a),u=s.length,{width:p,height:w}=e;let d=!1;for(let t=0;t<n.length;t+=3)-1===n[t]&&-1===n[t+1]&&-1===n[t+2]&&(d=!0);const{offsets_x:y,offsets_y:M,offsets_xi:m,offsets_yi:x,gridWidth:g}=X({width:f,height:c},e,n,r,"majority"===i?.5:0);let k;const b=(t,e,n,r)=>{const i=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let s=0;s<w;s++){k=s*g;for(let o=0;o<p;o++){if(y[k]<0||M[k]<0)t[s*p+o]=0;else if(r)t[s*p+o]=e[m[k]+x[k]*f];else{const r=Math.floor(y[k]),l=Math.floor(M[k]),a=Math.ceil(y[k]),c=Math.ceil(M[k]),h=y[k]-r,u=M[k]-l;if(!n||n[r+l*f]&&n[a+l*f]&&n[r+c*f]&&n[a+c*f]){const n=(1-h)*e[r+l*f]+h*e[a+l*f],w=(1-h)*e[r+c*f]+h*e[a+c*f];t[s*p+o]=(1-u)*n+u*w+i}else t[s*p+o]=e[m[k]+x[k]*f]}k++}}},U=[];let F;const T=l?.length===u,_=[];for(let t=0;t<u;t++){if(T){const e=new Uint8Array(p*w);b(e,l[t],l[t],!0),_.push(e)}F=new h(p*w),b(F,s[t],T?l[t]:o,"nearest"===i||"majority"===i),U.push(F)}const I=new A({width:p,height:w,pixelType:a,pixels:U,bandMasks:T?_:void 0});if(null!=o)I.mask=new Uint8Array(p*w),b(I.mask,o,o,!0);else if(d){I.mask=new Uint8Array(p*w);for(let t=0;t<p*w;t++)I.mask[t]=y[t]<0||M[t]<0?0:1}return I.updateStatistics(),I}const et=new Map;et.set("meter-per-second",1),et.set("kilometer-per-hour",.277778),et.set("knots",.514444),et.set("feet-per-second",.3048),et.set("mile-per-hour",.44704);const nt=180/Math.PI,rt=5,it=new f({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function st(t,e){return et.get(t)/et.get(e)||1}function ot(t){return(450-t)%360}function lt(t,e="geographic"){const[n,r]=t,i=Math.sqrt(n*n+r*r);let s=Math.atan2(r,n)*nt;return s=(360+s)%360,"geographic"===e&&(s=ot(s)),[i,s]}function at(t,e="geographic"){let n=t[1];"geographic"===e&&(n=ot(n)),n%=360;const r=t[0];return[r*Math.cos(n/nt),r*Math.sin(n/nt)]}function ft(t,e,n,r="geographic"){if(!v(t)||null==n)return t;const i="vector-magdir"===e?t.clone():ct(t,e),s=i.pixels[1];for(let t=0;t<s.length;t++)s[t]="geographic"===r?(s[t]+n[t]+270)%360:(s[t]+360-n[t])%360;return"vector-magdir"===e?i:ct(i,"vector-magdir")}function ct(t,e,n="geographic",r=1){if(!v(t))return t;const{pixels:i,width:s,height:o}=t,l=s*o,a=i[0],f=i[1],c=t.pixelType.startsWith("f")?t.pixelType:"f32",h=A.createEmptyBand(c,l),u=A.createEmptyBand(c,l);let p=0;for(let t=0;t<o;t++)for(let t=0;t<s;t++)"vector-uv"===e?([h[p],u[p]]=lt([a[p],f[p]],n),h[p]*=r):([h[p],u[p]]=at([a[p],f[p]],n),h[p]*=r,u[p]*=r),p++;const w=new A({pixelType:c,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[h,u]});return w.updateStatistics(),w}function ht(t,e,n=1){if(1===n||!v(t))return t;const r=t.clone(),{pixels:i,width:s,height:o}=r,l=i[0],a=i[1];let f=0;for(let t=0;t<o;t++)for(let t=0;t<s;t++)"vector-uv"===e?(l[f]*=n,a[f]*=n):l[f]*=n,f++;return r.updateStatistics(),r}function ut(t,e,n,r,i){if(null==i||!i.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/r),height:Math.round(n/r),resolution:t.width/e};const s=i.xmin,o=i.ymax,l=(t.xmax-t.xmin)/e*r,a=(t.ymax-t.ymin)/n*r,f=(l+a)/2;return t.xmin=s+Math.floor((t.xmin-s)/l)*l,t.xmax=s+Math.ceil((t.xmax-s)/l)*l,t.ymin=o+Math.floor((t.ymin-o)/a)*a,t.ymax=o+Math.ceil((t.ymax-o)/a)*a,{extent:t,width:Math.round(t.width/l),height:Math.round(t.height/a),resolution:f}}const pt=wt(0,0,0);function wt(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const i=r?-1:1,s=13*i,o=-7*i,l=-2*i,a=-16*i,f=21.75,[c,h]=yt(0,e+s,n,f),[u,p]=yt(t-5.5,e+o,n,f),[w,d]=yt(t+5.5,e+o,n,f),[y,M]=yt(t-1.5,e+l,n,f),[m,x]=yt(t+1.5,e+l,n,f),[A,g]=yt(t-1.5,e+a,n,f),[k,b]=yt(t+1.5,e+a,n,f);return[c,h,u,p,y,M,m,x,w,d,A,g,k,b]}function dt(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,i=n?-1:1,s=5*i,o=20*i,l=25*i,a=45,f=0,c=0,h=2,u=0,p=h*i,w=n?1:-1,d=r/2*w;let[y,M]=[f+d,c-o],[m,x]=[y+h*w,M],[A,g]=[m-u*w,x+p],[k,b]=[f-d,c-l],[v,U]=[k+u*w,b-p],F=Math.ceil(t/rt),T=Math.floor(F/10);F-=8*T;const _=[],I=[];for(let t=0;t<F/2;t++,T--){T<=0&&F%2==1&&t===(F-1)/2&&(k=f,v=k+u*w,b=(b+M)/2,U=b-p);const[n,r]=yt(k,b,e,a);if(T>0){const[t,i]=yt(m,b,e,a),[s,o]=yt(y,M,e,a);_.push(t),_.push(i),_.push(n),_.push(r),_.push(s),_.push(o)}else{const[t,i]=yt(m,x,e,a),[s,o]=yt(A,g,e,a),[l,f]=yt(v,U,e,a);I.push(n),I.push(r),I.push(l),I.push(f),I.push(s),I.push(o),I.push(t),I.push(i)}b+=s,M+=s,x+=s,g+=s,U+=s}const[B,P]=yt(f+d,c+o,e,a),D=(r/2+h)*w,[R,j]=yt(f+D,c+o,e,a),[S,G]=yt(f+d,c-l,e,a),[C,N]=yt(f+D,c-l,e,a);return{pennants:_,barbs:I,shaft:[B,P,R,j,S,G,C,N]}}function yt(t,e,n,r=1){const i=Math.sqrt(t*t+e*e)/r,s=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[i,(2*Math.PI+s-n)%(2*Math.PI)]}const Mt=[0,1,3,6,10,16,21,27,33,40,47,55,63],mt=[0,.5,1,1.5,2],xt=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function At(t,e,n,r){const i=st(r||"knots",n);let s;for(s=1;s<e.length;s++)if(s===e.length-1){if(t<e[s]*i)break}else if(t<=e[s]*i)break;return Math.min(s-1,e.length-2)}function gt(t,e,n,r,i){let s=0;switch(e){case"beaufort_kn":s=At(t,Mt,"knots",n);break;case"beaufort_km":s=At(t,Mt,"kilometer-per-hour",n);break;case"beaufort_ft":s=At(t,Mt,"feet-per-second",n);break;case"beaufort_m":s=At(t,Mt,"meter-per-second",n);break;case"classified_arrow":s=At(t,i??[],r,n);break;case"ocean_current_m":s=At(t,mt,"meter-per-second",n);break;case"ocean_current_kn":s=At(t,xt,"knots",n)}return s}function kt(t,e){const{style:n,inputUnit:r,outputUnit:i,breakValues:s}=e,o=it.fromJSON(r),l=it.fromJSON(i),a=7*6,f=15;let c=0,h=0;const{width:u,height:p,mask:w}=t,d=t.pixels[0],y=t.pixels[1],M=null!=w?w.filter((t=>t>0)).length:u*p,m=new Float32Array(M*a),x=new Uint32Array(f*M),A=e.invertDirection?wt(0,0,0,!1):pt;for(let t=0;t<p;t++)for(let e=0;e<u;e++){const r=t*u+e;if(!w||w[t*u+e]){const i=(y[r]+360)%360/180*Math.PI,f=gt(d[r],n,o,l,s);for(let n=0;n<A.length;n+=2)m[c++]=(e+.5)/u,m[c++]=(t+.5)/p,m[c++]=A[n],m[c++]=A[n+1]+i,m[c++]=f,m[c++]=d[r];const w=7*(c/a-1);x[h++]=w,x[h++]=w+1,x[h++]=w+2,x[h++]=w+0,x[h++]=w+4,x[h++]=w+3,x[h++]=w+0,x[h++]=w+2,x[h++]=w+3,x[h++]=w+2,x[h++]=w+5,x[h++]=w+3,x[h++]=w+5,x[h++]=w+6,x[h++]=w+3}}return{vertexData:m,indexData:x}}const bt=[];function vt(t,e){if(0===bt.length)for(let t=0;t<30;t++)bt.push(dt(5*t,0,!e.invertDirection));const n=st(it.fromJSON(e.inputUnit),"knots"),{width:r,height:i,mask:s}=t,o=t.pixels[0],l=t.pixels[1],a=6,f=[],c=[];let h=0,u=0;for(let t=0;t<i;t++)for(let e=0;e<r;e++){const p=t*r+e,w=o[p]*n;if((!s||s[t*r+e])&&w>=rt){const n=(l[p]+360)%360/180*Math.PI,{pennants:s,barbs:o,shaft:d}=bt[Math.min(Math.floor(w/5),29)];if(s.length+o.length===0)continue;let y=f.length/a;const M=(e+.5)/r,m=(t+.5)/i;for(let t=0;t<s.length;t+=2)f[h++]=M,f[h++]=m,f[h++]=s[t],f[h++]=s[t+1]+n,f[h++]=0,f[h++]=w;for(let t=0;t<o.length;t+=2)f[h++]=M,f[h++]=m,f[h++]=o[t],f[h++]=o[t+1]+n,f[h++]=0,f[h++]=w;for(let t=0;t<d.length;t+=2)f[h++]=M,f[h++]=m,f[h++]=d[t],f[h++]=d[t+1]+n,f[h++]=0,f[h++]=w;for(let t=0;t<s.length/6;t++)c[u++]=y,c[u++]=y+1,c[u++]=y+2,y+=3;for(let t=0;t<o.length/8;t++)c[u++]=y,c[u++]=y+1,c[u++]=y+2,c[u++]=y+1,c[u++]=y+2,c[u++]=y+3,y+=4;c[u++]=y+0,c[u++]=y+1,c[u++]=y+2,c[u++]=y+1,c[u++]=y+3,c[u++]=y+2,y+=4}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(c)}}function Ut(t,e){const n=4*6;let r=0,i=0;const{width:s,height:o,mask:l}=t,a=t.pixels[0],f=[],c=[],h=st(it.fromJSON(e.inputUnit),"knots"),u="wind_speed"===e.style?rt:Number.MAX_VALUE;for(let t=0;t<o;t++)for(let e=0;e<s;e++){const p=a[t*s+e]*h;if((!l||l[t*s+e])&&p<u){for(let n=0;n<4;n++)f[r++]=(e+.5)/s,f[r++]=(t+.5)/o,f[r++]=n<2?-.5:.5,f[r++]=n%2==0?-.5:.5,f[r++]=0,f[r++]=p;const l=4*(r/n-1);c[i++]=l,c[i++]=l+1,c[i++]=l+2,c[i++]=l+1,c[i++]=l+2,c[i++]=l+3}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(c)}}function Ft(t,e){return"simple_scalar"===e.style?Ut(t,e):"wind_speed"===e.style?vt(t,e):kt(t,e)}function Tt(t,e,n,r=[0,0],i=.5){const{width:s,height:o,mask:l}=t,[a,f]=t.pixels,[c,h]=r,u=Math.round((s-c)/n),p=Math.round((o-h)/n),w=u*p,d=new Float32Array(w),y=new Float32Array(w),M=new Uint8Array(w),m="vector-uv"===e;for(let t=0;t<p;t++)for(let e=0;e<u;e++){let r=0;const p=t*u+e,w=Math.max(0,t*n+h),x=Math.max(0,e*n+c),A=Math.min(o,w+n),g=Math.min(s,x+n);for(let t=w;t<A;t++)for(let e=x;e<g;e++){const n=t*s+e;if(!l||l[n]){r++;const t=m?[a[n],f[n]]:[a[n],(360+f[n])%360],[e,i]=m?t:at(t);d[p]+=e,y[p]+=i}}if(r>=(A-w)*(g-x)*(1-i)){M[p]=1;const[t,e]=lt([d[p]/r,y[p]/r]);d[p]=t,y[p]=e}else M[p]=0,d[p]=0,y[p]=0}const x=new A({width:u,height:p,pixels:[d,y],mask:M});return x.updateStatistics(),x}const _t=()=>l.getLogger("esri.views.2d.engine.flow.dataUtils"),It=10;async function Bt(t,e,n,r){const i=performance.now(),s=Pt(e,n),o=performance.now(),l=Rt(e,s,n.width,n.height),a=performance.now(),f=St(l,!0),u=performance.now(),p="Streamlines"===t?Gt(f,It):Ct(f),w=performance.now();return c("esri-2d-profiler")&&(_t().info("I.1","_createFlowFieldFromData (ms)",Math.round(o-i)),_t().info("I.2","_getStreamlines (ms)",Math.round(a-o)),_t().info("I.3","createAnimatedLinesData (ms)",Math.round(u-a)),_t().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(w-u)),_t().info("I.5","createFlowMesh (ms)",Math.round(w-i)),_t().info("I.6","Mesh size (bytes)",p.vertexData.buffer.byteLength+p.indexData.buffer.byteLength)),await Promise.resolve(),h(r),p}function Pt(t,e){const n=jt(e.data,e.width,e.height,t.smoothing);if(t.interpolate){return(t,r)=>{const i=Math.floor(t),s=Math.floor(r);if(i<0||i>=e.width)return[0,0];if(s<0||s>=e.height)return[0,0];const o=t-i,l=r-s,a=i,f=s,c=i<e.width-1?i+1:i,h=s<e.height-1?s+1:s,u=n[2*(f*e.width+a)],p=n[2*(f*e.width+c)],w=n[2*(h*e.width+a)],d=n[2*(h*e.width+c)],y=n[2*(f*e.width+a)+1],M=n[2*(f*e.width+c)+1];return[(u*(1-l)+w*l)*(1-o)+(p*(1-l)+d*l)*o,(y*(1-l)+n[2*(h*e.width+a)+1]*l)*(1-o)+(M*(1-l)+n[2*(h*e.width+c)+1]*l)*o]}}return(t,r)=>{const i=Math.round(t),s=Math.round(r);return i<0||i>=e.width||s<0||s>=e.height?[0,0]:[n[2*(s*e.width+i)],n[2*(s*e.width+i)+1]]}}function Dt(t,e,n,r,i,s,o,l,a){const f=[];let c=n,h=r,u=0,[p,w]=e(c,h);p*=t.velocityScale,w*=t.velocityScale;const d=Math.sqrt(p*p+w*w);let y,M;f.push({x:c,y:h,t:u,speed:d});for(let n=0;n<t.verticesPerLine;n++){let[n,r]=e(c,h);n*=t.velocityScale,r*=t.velocityScale;const p=Math.sqrt(n*n+r*r);if(p<t.minSpeedThreshold)return f;const w=n/p,d=r/p;c+=w*t.segmentLength,h+=d*t.segmentLength;if(u+=t.segmentLength/p,Math.acos(w*y+d*M)>t.maxTurnAngle)return f;if(t.collisions){const t=Math.round(c*a),e=Math.round(h*a);if(t<0||t>o-1||e<0||e>l-1)return f;const n=s[e*o+t];if(-1!==n&&n!==i)return f;s[e*o+t]=i}f.push({x:c,y:h,t:u,speed:p}),y=w,M=d}return f}function Rt(t,e,n,r){const i=[],s=new u,o=1/Math.max(t.lineCollisionWidth,1),l=Math.round(n*o),a=Math.round(r*o),f=new Int32Array(l*a);for(let t=0;t<f.length;t++)f[t]=-1;const c=[];for(let e=0;e<r;e+=t.lineSpacing)for(let r=0;r<n;r+=t.lineSpacing)c.push({x:r,y:e,sort:s.getFloat()});c.sort(((t,e)=>t.sort-e.sort));for(const{x:n,y:r}of c)if(s.getFloat()<t.density){const s=Dt(t,e,n,r,i.length,f,l,a,o);if(s.length<2)continue;i.push(s)}return i}function jt(t,e,n,r){if(0===r)return t;const i=Math.round(3*r),s=new Array(2*i+1);let o=0;for(let t=-i;t<=i;t++){const e=Math.exp(-t*t/(r*r));s[t+i]=e,o+=e}for(let t=-i;t<=i;t++)s[t+i]/=o;const l=new Float32Array(t.length);for(let r=0;r<n;r++)for(let n=0;n<e;n++){let o=0,a=0;for(let l=-i;l<=i;l++){if(n+l<0||n+l>=e)continue;const f=s[l+i];o+=f*t[2*(r*e+(n+l))],a+=f*t[2*(r*e+(n+l))+1]}l[2*(r*e+n)]=o,l[2*(r*e+n)+1]=a}const a=new Float32Array(t.length);for(let t=0;t<e;t++)for(let r=0;r<n;r++){let o=0,f=0;for(let a=-i;a<=i;a++){if(r+a<0||r+a>=n)continue;const c=s[a+i];o+=c*l[2*((r+a)*e+t)],f+=c*l[2*((r+a)*e+t)+1]}a[2*(r*e+t)]=o,a[2*(r*e+t)+1]=f}return a}function St(t,e){const n=new u,r=t.reduce(((t,e)=>t+e.length),0),i=new Float32Array(4*r),s=new Array(t.length);let o=0,l=0;for(const r of t){const t=o;for(const t of r)i[4*o]=t.x,i[4*o+1]=t.y,i[4*o+2]=t.t,i[4*o+3]=t.speed,o++;s[l++]={startVertex:t,numberOfVertices:r.length,totalTime:r[r.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:i,lineDescriptors:s}}function Gt(t,e){const n=9,{lineVertices:r,lineDescriptors:i}=t;let s=0,o=0;for(const t of i){s+=2*t.numberOfVertices;o+=6*(t.numberOfVertices-1)}const l=new Float32Array(s*n),a=new Uint32Array(o);let f=0,c=0;function h(){a[c++]=f-2,a[c++]=f,a[c++]=f-1,a[c++]=f,a[c++]=f+1,a[c++]=f-1}function u(t,e,r,i,s,o,a,c){const h=f*n;let u=0;l[h+u++]=t,l[h+u++]=e,l[h+u++]=1,l[h+u++]=r,l[h+u++]=o,l[h+u++]=a,l[h+u++]=i/2,l[h+u++]=s/2,l[h+u++]=c,f++,l[h+u++]=t,l[h+u++]=e,l[h+u++]=-1,l[h+u++]=r,l[h+u++]=o,l[h+u++]=a,l[h+u++]=-i/2,l[h+u++]=-s/2,l[h+u++]=c,f++}for(const t of i){const{totalTime:n,timeSeed:i}=t;let s=null,o=null,l=null,a=null,f=null,c=null;for(let p=0;p<t.numberOfVertices;p++){const w=r[4*(t.startVertex+p)],d=r[4*(t.startVertex+p)+1],y=r[4*(t.startVertex+p)+2],M=r[4*(t.startVertex+p)+3];let m=null,x=null,A=null,g=null;if(p>0){m=w-s,x=d-o;const t=Math.sqrt(m*m+x*x);if(m/=t,x/=t,p>1){let t=m+f,n=x+c;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const i=Math.min(1/(t*m+n*x),e);t*=i,n*=i,A=-n,g=t}else A=-x,g=m;null!==A&&null!==g&&(u(s,o,l,A,g,n,i,M),h())}s=w,o=d,l=y,f=m,c=x,a=M}u(s,o,l,-c,f,n,i,a)}return{vertexData:l,indexData:a}}function Ct(t){const e=16,n=1,r=2,{lineVertices:i,lineDescriptors:s}=t;let o=0,l=0;for(const t of s){const e=t.numberOfVertices-1;o+=4*e*2,l+=6*e*2}const a=new Float32Array(o*e),f=new Uint32Array(l);let c,h,u,p,w,d,y,M,m,x,A,g,k,b,v=0,U=0;function F(){f[U++]=v-8,f[U++]=v-7,f[U++]=v-6,f[U++]=v-7,f[U++]=v-5,f[U++]=v-6,f[U++]=v-4,f[U++]=v-3,f[U++]=v-2,f[U++]=v-3,f[U++]=v-1,f[U++]=v-2}function T(t,i,s,o,l,f,c,h,u,p,w,d,y,M){const m=v*e;let x=0;for(const e of[n,r])for(const n of[1,2,3,4])a[m+x++]=t,a[m+x++]=i,a[m+x++]=s,a[m+x++]=o,a[m+x++]=c,a[m+x++]=h,a[m+x++]=u,a[m+x++]=p,a[m+x++]=e,a[m+x++]=n,a[m+x++]=y,a[m+x++]=M,a[m+x++]=l/2,a[m+x++]=f/2,a[m+x++]=w/2,a[m+x++]=d/2,v++}function _(t,e){let n=m+A,r=x+g;const i=Math.sqrt(n*n+r*r);n/=i,r/=i;const s=m*n+x*r;n/=s,r/=s;let o=A+k,l=g+b;const a=Math.sqrt(o*o+l*l);o/=a,l/=a;const f=A*o+g*l;o/=f,l/=f,T(c,h,u,p,-r,n,w,d,y,M,-l,o,t,e),F()}function I(t,e,n,r,i,s){if(m=A,x=g,A=k,g=b,null==m&&null==x&&(m=A,x=g),null!=w&&null!=d){k=t-w,b=e-d;const n=Math.sqrt(k*k+b*b);k/=n,b/=n}null!=m&&null!=x&&_(i,s),c=w,h=d,u=y,p=M,w=t,d=e,y=n,M=r}function B(t,e){m=A,x=g,A=k,g=b,null==m&&null==x&&(m=A,x=g),null!=m&&null!=x&&_(t,e)}for(const t of s){c=null,h=null,u=null,p=null,w=null,d=null,y=null,M=null,m=null,x=null,A=null,g=null,k=null,b=null;const{totalTime:e,timeSeed:n}=t;for(let r=0;r<t.numberOfVertices;r++){I(i[4*(t.startVertex+r)],i[4*(t.startVertex+r)+1],i[4*(t.startVertex+r)+2],i[4*(t.startVertex+r)+3],e,n)}B(e,n)}return{vertexData:a,indexData:f}}function Nt(t,e){const n=e.pixels,{width:r,height:i}=e,s=new Float32Array(r*i*2),o=e.mask||new Uint8Array(r*i*2);if(e.mask||o.fill(255),"vector-uv"===t)for(let t=0;t<r*i;t++)s[2*t]=n[0][t],s[2*t+1]=-n[1][t];else if("vector-magdir"===t)for(let t=0;t<r*i;t++){const e=n[0][t],r=d(n[1][t]),i=Math.cos(r-Math.PI/2),o=Math.sin(r-Math.PI/2);s[2*t]=i*e,s[2*t+1]=o*e}return{data:s,mask:o,width:r,height:i}}async function Vt(t,e,n,r,i,s){const o=performance.now(),l=w(e.spatialReference);if(!l){const l=await Wt(t,e,n,r,i,s);return c("esri-2d-profiler")&&_t().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-o)),c("esri-2d-profiler")&&_t().info("I.9","Number of parts",1),l}const[a,f]=l.valid,h=f-a,u=Math.ceil(e.width/h),d=e.width/u,y=Math.round(n/u);let M=e.xmin;const m=[],x=performance.now();for(let n=0;n<u;n++){const n=new p({xmin:M,xmax:M+d,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(Wt(t,n,y,r,i,s)),M+=d}const A=await Promise.all(m);c("esri-2d-profiler")&&_t().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-x)),c("esri-2d-profiler")&&_t().info("I.9","Number of parts",A.length);const g={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let k=0;for(const t of A){for(let e=0;e<t.height;e++)for(let r=0;r<t.width;r++)k+r>=n||(g.data[2*(e*n+k+r)]=t.data[2*(e*t.width+r)],g.data[2*(e*n+k+r)+1]=t.data[2*(e*t.width+r)+1],g.mask[e*n+k+r]=t.mask[e*t.width+r]);k+=t.width}return c("esri-2d-profiler")&&_t().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-o)),g}async function Wt(t,e,n,r,i,s){const o={requestProjectedLocalDirections:!0,signal:s};if(null!=i&&(o.timeExtent=i),"imagery"===t.type){await t.load({signal:s});const i=t.rasterInfo.dataType,l=await t.fetchImage(e,n,r,o);return null==l?.pixelData?.pixelBlock?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:Nt(i,l.pixelData.pixelBlock)}await t.load({signal:s});const l=t.serviceRasterInfo.dataType,a=await t.fetchPixels(e,n,r,o);return null==a?.pixelBlock?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:Nt(l,a.pixelBlock)}export{tt as D,Q as E,V as M,Y as R,Tt as S,q as T,Ft as U,J as W,Ut as _,A as a,z as b,B as c,_ as d,F as e,ct as f,Vt as g,T as h,k as i,b as j,S as k,y as l,ut as m,g as n,v as o,I as p,P as q,U as r,Bt as s,lt as t,ft as u,it as v,C as w,st as x,G as y,ht as z};
//# sourceMappingURL=p-54df2e8e.js.map