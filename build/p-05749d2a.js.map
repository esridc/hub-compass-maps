{"version":3,"names":["interceptedClick","disabled","this","HTMLElement","prototype","click","call","onPointerDown","event","interactiveElement","target","preventDefault","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","updateHostInteraction","component","el","setAttribute","contains","document","activeElement","blur","blockInteraction","restoreInteraction","removeAttribute","addInteractionListeners","element","addEventListener","forEach","removeInteractionListeners","removeEventListener","CSS","container","InteractiveContainer","children","h","class","inert"],"sources":["./node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/interactive.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { h } from '@stencil/core/internal/client';\n\nfunction interceptedClick() {\n    const { disabled } = this;\n    if (!disabled) {\n        HTMLElement.prototype.click.call(this);\n    }\n}\nfunction onPointerDown(event) {\n    const interactiveElement = event.target;\n    if (interactiveElement.disabled) {\n        // prevent click from moving focus on host\n        event.preventDefault();\n    }\n}\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\nfunction onNonBubblingWhenDisabledMouseEvent(event) {\n    const interactiveElement = event.target;\n    // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n    // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n    if (interactiveElement.disabled) {\n        event.stopImmediatePropagation();\n        event.preventDefault();\n    }\n}\nconst captureOnlyOptions = { capture: true };\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nfunction updateHostInteraction(component) {\n    if (component.disabled) {\n        component.el.setAttribute(\"aria-disabled\", \"true\");\n        if (component.el.contains(document.activeElement)) {\n            document.activeElement.blur();\n        }\n        blockInteraction(component);\n        return;\n    }\n    restoreInteraction(component);\n    component.el.removeAttribute(\"aria-disabled\");\n}\nfunction blockInteraction(component) {\n    component.el.click = interceptedClick;\n    addInteractionListeners(component.el);\n}\nfunction addInteractionListeners(element) {\n    element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n    nonBubblingWhenDisabledMouseEvents.forEach((event) => element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions));\n}\nfunction restoreInteraction(component) {\n    delete component.el.click; // fallback on HTMLElement.prototype.click\n    removeInteractionListeners(component.el);\n}\nfunction removeInteractionListeners(element) {\n    element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n    nonBubblingWhenDisabledMouseEvents.forEach((event) => element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions));\n}\nconst CSS = {\n    container: \"interaction-container\",\n};\nconst InteractiveContainer = ({ disabled }, children) => (h(\"div\", { class: CSS.container, inert: disabled }, ...children));\n\nexport { InteractiveContainer as I, updateHostInteraction as u };\n\n//# sourceMappingURL=interactive.js.map"],"mappings":";;;;;GAOA,SAASA,IACL,MAAMC,SAAEA,GAAaC,KACrB,IAAKD,EAAU,CACXE,YAAYC,UAAUC,MAAMC,KAAKJ,KACzC,CACA,CACA,SAASK,EAAcC,GACnB,MAAMC,EAAqBD,EAAME,OACjC,GAAID,EAAmBR,SAAU,CAE7BO,EAAMG,gBACd,CACA,CACA,MAAMC,EAAqC,CAAC,YAAa,UAAW,SACpE,SAASC,EAAoCL,GACzC,MAAMC,EAAqBD,EAAME,OAGjC,GAAID,EAAmBR,SAAU,CAC7BO,EAAMM,2BACNN,EAAMG,gBACd,CACA,CACA,MAAMI,EAAqB,CAAEC,QAAS,MAatC,SAASC,EAAsBC,GAC3B,GAAIA,EAAUjB,SAAU,CACpBiB,EAAUC,GAAGC,aAAa,gBAAiB,QAC3C,GAAIF,EAAUC,GAAGE,SAASC,SAASC,eAAgB,CAC/CD,SAASC,cAAcC,MACnC,CACQC,EAAiBP,GACjB,MACR,CACIQ,EAAmBR,GACnBA,EAAUC,GAAGQ,gBAAgB,gBACjC,CACA,SAASF,EAAiBP,GACtBA,EAAUC,GAAGd,MAAQL,EACrB4B,EAAwBV,EAAUC,GACtC,CACA,SAASS,EAAwBC,GAC7BA,EAAQC,iBAAiB,cAAevB,EAAeQ,GACvDH,EAAmCmB,SAASvB,GAAUqB,EAAQC,iBAAiBtB,EAAOK,EAAqCE,IAC/H,CACA,SAASW,EAAmBR,UACjBA,EAAUC,GAAGd,MACpB2B,EAA2Bd,EAAUC,GACzC,CACA,SAASa,EAA2BH,GAChCA,EAAQI,oBAAoB,cAAe1B,EAAeQ,GAC1DH,EAAmCmB,SAASvB,GAAUqB,EAAQI,oBAAoBzB,EAAOK,EAAqCE,IAClI,CACA,MAAMmB,EAAM,CACRC,UAAW,yBAEV,MAACC,EAAuB,EAAGnC,YAAYoC,IAAcC,EAAE,MAAO,CAAEC,MAAOL,EAAIC,UAAWK,MAAOvC,MAAeoC,U"}