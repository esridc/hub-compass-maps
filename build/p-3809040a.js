import{an as t,ao as e,ap as s,dG as n,e7 as r,jT as o,g6 as i,b5 as a,dF as u,g as c,fu as l,b$ as f,jU as h,fx as p,jV as d,fv as m,jW as g,jX as y,a as v,gV as w,av as b,cB as x}from"./p-3013819f.js";import{u as F,o as A,r as j,d as N,l as P,n as R,w as k,i as I,j as M,y as C,k as T,p as S}from"./p-dd344c44.js";import{a as _,b as G,c as D,C as B,w as U,B as O,d as z,l as L,u as V,s as W,e as E,p as $,f as X,M as q,x as H}from"./p-0ad1433d.js";let K=class extends n{constructor(){super(...arguments),this.raster=void 0}};t([e({json:{write:!0}})],K.prototype,"raster",void 0),K=t([s("esri.layers.support.rasterFunctions.AspectFunctionArguments")],K);const Y=K;var Z;let J=Z=class extends Y{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new Z({raster:this.raster,raster2:this.raster2,operation:this.operation})}};t([e({json:{write:!0}})],J.prototype,"operation",void 0),t([e({json:{write:!0}})],J.prototype,"raster2",void 0),t([e({readOnly:!0})],J.prototype,"rasters",null),J=Z=t([s("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],J);const Q=J;const tt=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let et=class extends n{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){e.unshift(...n);const t=[];for(let e=0;e<n.length;e++){const{parameters:s}=n[e],r=s.rasters||s.raster&&[s.raster];r?.length&&t.push(...r)}n=t}for(let t=e.length-1;t>=0;t--)e[t].isNoopProcess&&e.splice(t,1);let r=!1;for(let t=0;t<e.length;t++){const s=e[t];s.id=e.length-t-1;const{rasters:n}=s.parameters;r=r||null!=n&&n.length>1}const o=e.some((({name:t})=>tt.has(t.toLowerCase()))),{rawSourceRasterInfos:i}=this;return{functions:e,hasBranches:r,hasFocalFunction:o,isSourceSingleBand:1===i?.[0]?.bandCount}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let r=!0;for(let s=0;s<n.length;s++){const o=n[s];if(null!=o&&this._isRasterFunctionValue(o)){const n=o.bind(t,e,this.id+s);if(!n.success)return this._bindingResult=n,n;r=r&&n.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map((e=>this._readRasterValue(e,t)));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const e=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=e,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,e)=>t!==e));const s=t.filter((t=>"ExtractBand"===t.functionName));return s.length&&s.forEach(((t,e)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[e,e,e]})),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let s=0;s<t;s++)e.push(s)}const n=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=n.some(((t,e)=>t!==e)),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():"number"==typeof t?{name:"Constant",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];"Clip"===this.functionName&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach((e=>{if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}}));else if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}return t}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.flatMap((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(0===e.length)return s;const r=e.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&n.includes(t)?s[n.indexOf(t)]:"number"!=typeof t?s[0]:void 0)),o=r.find((t=>t))??s[0];return r.forEach(((t,e)=>{void 0===t&&(r[e]=o)})),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const r=t.sourceRasters[n];if("number"!=typeof r)if("bind"in r)this._getPrimaryRasters(r,e,s);else{const t=r,n=this._getPrimaryRasterId(t);if(null==n)continue;s.includes(n)||(this.mainPrimaryRasterId===n?(e.unshift(t),s.unshift(n)):(e.push(t),s.push(n)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(null==t||"$$"===t){const t=s[0];return null==t?null:t.clone()}if("string"==typeof t){const n=e.primaryRasterIds.indexOf(t);return-1===n?null:s[n]}if("number"==typeof t){const e=s[0];if(null==e)return null;const{width:n,height:r,pixelType:o}=e,i=new Float32Array(n*r);i.fill(t);const a=this.sourceRasterInfos[0].bandCount,u=new Array(a).fill(i);return new F({width:n,height:r,pixelType:o,pixels:u})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:s,statistics:n,histograms:r}=t,o=s.BandProperties;o&&o.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),n&&n.length!==e&&(t.statistics=n.length>e?n.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:"string"==typeof s.BAND_COUNT?String(e):e})}};t([e({json:{write:!0}})],et.prototype,"functionName",void 0),t([e({json:{write:!0}})],et.prototype,"functionArguments",void 0),t([e()],et.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}}),r((t=>t?.toLowerCase()))],et.prototype,"outputPixelType",void 0),t([e({json:{write:!0}})],et.prototype,"mainPrimaryRasterId",void 0),t([e()],et.prototype,"sourceRasters",void 0),t([e({type:[_],json:{write:!0}})],et.prototype,"sourceRasterInfos",void 0),t([e({json:{write:!0}})],et.prototype,"rasterInfo",void 0),t([e({json:{write:!0}})],et.prototype,"readingBufferSize",void 0),t([e({json:{write:!0}})],et.prototype,"id",void 0),t([e()],et.prototype,"isNoopProcess",void 0),t([e()],et.prototype,"supportsGPU",null),t([e()],et.prototype,"rawInputBandIds",void 0),t([e()],et.prototype,"rawSourceRasterInfos",void 0),t([e()],et.prototype,"isInputBandIdsSwizzled",void 0),t([e()],et.prototype,"swizzledBandSelection",void 0),t([e()],et.prototype,"isBranch",void 0),t([e({readOnly:!0})],et.prototype,"flatWebGLFunctionChain",null),t([e()],et.prototype,"_bindingResult",void 0),et=t([s("esri.layers.support.rasterFunctions.BaseRasterFunction")],et);const st=et;const nt={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},rt={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},ot={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},it={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},at={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},ut={setNull:50,conditional:78},ct={...rt,...ot,...it,...at,...ut};const lt=new Map([[it.acos,{domain:[0,Math.PI],isInteger:!1}],[it.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[it.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[it.cos,{domain:[-1,1],isInteger:!1}],[it.sin,{domain:[-1,1],isInteger:!1}],[ot.booleanAnd,{domain:[0,1],isInteger:!0}],[ot.booleanNot,{domain:[0,1],isInteger:!0}],[ot.booleanOr,{domain:[0,1],isInteger:!0}],[ot.booleanXOr,{domain:[0,1],isInteger:!0}],[ot.equalTo,{domain:[0,1],isInteger:!0}],[ot.notEqual,{domain:[0,1],isInteger:!0}],[ot.greaterThan,{domain:[0,1],isInteger:!0}],[ot.greaterThanEqual,{domain:[0,1],isInteger:!0}],[ot.lessThan,{domain:[0,1],isInteger:!0}],[ot.lessThanEqual,{domain:[0,1],isInteger:!0}],[ot.isNull,{domain:[0,1],isInteger:!0}]]);function ft(t){return lt.get(t)}const ht=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function pt(t,e=!1){const s=t.map((t=>t.mask)),n=s.filter((t=>null!=t)),r=t[0].pixels[0].length;if(0===n.length||e&&n.length!==s.length)return new Uint8Array(r).fill(255);const o=n[0],i=new Uint8Array(o);if(1===n.length)return i;if(!e){for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<i.length;t++)i[t]&&(i[t]=e[t]?255:0)}return i}for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<i.length;t++)0===i[t]&&(i[t]=e[t]?255:0)}return i}function dt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]+r[t]);return i}function mt(t,e,s){const[n]=t,r=n.length,o=F.createEmptyBand("f32",r);return o.set(n),o}function gt(t,e,s){const[n]=t,r=n.length,o=F.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=n[t]*n[t]);return o}function yt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]-r[t]);return i}function vt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]*r[t]);return i}function wt(t,e,s){const[n]=t,r=n.length,o=F.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=Math.sign(n[t])*Math.floor(Math.abs(n[t])));return o}function bt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]/r[t]);return i}function xt(t,e,s){return bt(t,e,"f32")}function Ft(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=Math.floor(n[t]/r[t]));return i}function At(t,e,s,n){const r=t[0],o=r.length,i=F.createEmptyBand(s,o);if(n===it.atanh){for(let t=0;t<o;t++)if(e[t]){const s=r[t];Math.abs(s)>=1?e[t]=0:i[t]=Math.atanh(s)}return i}const a=n===it.asin?Math.asin:Math.acos;for(let t=0;t<o;t++)if(e[t]){const s=r[t];Math.abs(s)>1?e[t]=0:i[t]=a(s)}return i}function jt(t,e,s,n){const[r]=t,o=r.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n(r[t]));return i}function Nt(t,e,s,n){const[r,o]=t,i=r.length,a=F.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(a[t]=n(r[t],o[t]));return a}function Pt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]&r[t]);return i}function Rt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<<r[t]);return i}function kt(t,e,s){const[n]=t,r=n.length,o=F.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=~n[t]);return o}function It(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]|r[t]);return i}function Mt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>>r[t]);return i}function Ct(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]^r[t]);return i}function Tt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]&&r[t]?1:0);return i}function St(t,e,s){const[n]=t,r=n.length,o=F.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=n[t]?0:1);return o}function _t(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]||r[t]?1:0);return i}function Gt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=(n[t]?1:0)^(r[t]?1:0));return i}function Dt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]===r[t]?1:0);return i}function Bt(t,e,s,n){const[r]=t,o=r.length,i=F.createEmptyBand(s,o),a=n===Math.E;for(let t=0;t<o;t++)e&&!e[t]||(i[t]=a?Math.exp(r[t]):n**r[t]);return i}function Ut(t,e,s){return Bt(t,e,s,10)}function Ot(t,e,s){return Bt(t,e,s,2)}function zt(t,e,s){return Bt(t,e,s,Math.E)}function Lt(t,e,s,n){const[r]=t,o=r.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(r[t]<=0?e[t]=0:i[t]=n(r[t]));return i}function Vt(t,e,s){return Lt(t,e,s,Math.log10)}function Wt(t,e,s){return Lt(t,e,s,Math.log2)}function Et(t,e,s){return Lt(t,e,s,Math.log)}function $t(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>r[t]?1:0);return i}function Xt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>=r[t]?1:0);return i}function qt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<r[t]?1:0);return i}function Ht(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<=r[t]?1:0);return i}function Kt(t,e,s){const[n]=t,r=n.length,o=F.createEmptyBand(s,r);if(!e)return o;for(let t=0;t<r;t++)o[t]=e[t]?0:1;return o}function Yt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]%r[t]);return i}function Zt(t,e,s){const[n]=t,r=n.length,o=F.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=-n[t]);return o}function Jt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]===r[t]?0:1);return i}function Qt(t,e,s){const[n,r]=t,o=n.length,i=F.createEmptyBand(s,o),a=new Uint8Array(o);for(let t=0;t<o;t++)null!=e&&!e[t]||0!==n[t]||(i[t]=r[t],a[t]=255);return{band:i,mask:a}}function te(t,e,s){const[n,r,o]=t,i=n.length,a=F.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(a[t]=n[t]?r[t]:o[t]);return a}function ee(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=F.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e<n&&(e=n)}i[s]=e}return i}function se(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=F.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e>n&&(e=n)}i[s]=e}return i}function ne(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=F.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s],o=e;for(let r=1;r<n;r++){const n=t[r][s];o<n?o=n:e>n&&(e=n)}i[s]=o-e}return i}function re(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=F.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=0;for(let r=0;r<n;r++)e+=t[r][s];i[s]=e/n}return i}function oe(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=F.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s])for(let e=0;e<n;e++){const n=t[e];i[s]+=n[s]}return i}function ie(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=F.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){const e=new Float32Array(n);let r=0;for(let o=0;o<n;o++){const n=t[o];r+=n[s],e[o]=n[s]}r/=n;let o=0;for(let t=0;t<n;t++)o+=(e[t]-r)**2;i[s]=Math.sqrt(o/n)}return i}function ae(t,e,s){const n=t.length;if(n<2)return t[0];const r=Math.floor(n/2),[o]=t,i=o.length,a=F.createEmptyBand(s,i),u=new Float32Array(n),c=n%2==1;for(let s=0;s<i;s++)if(!e||e[s]){for(let e=0;e<n;e++)u[e]=t[e][s];u.sort(),a[s]=c?u[r]:(u[r]+u[r-1])/2}return a}function ue(t,e,s){const[n,r]=t;if(null==r)return n;const o=n.length,i=F.createEmptyBand(s,o);for(let t=0;t<o;t++)e[t]&&(n[t]===r[t]?i[t]=n[t]:e[t]=0);return i}function ce(t,e,s){const n=t.length;if(n<=2)return ue(t,e,s);const r=t[0].length,o=F.createEmptyBand(s,r),i=new Map;for(let s=0;s<r;s++)if(!e||e[s]){let e;i.clear();for(let r=0;r<n;r++)e=t[r][s],i.set(e,i.has(e)?i.get(e)+1:1);let r=0,a=0;for(const t of i.keys())r=i.get(t),r>a&&(a=r,e=t);o[s]=e}return o}function le(t,e,s){const n=t.length;if(n<=2)return ue(t,e,s);const r=t[0].length,o=F.createEmptyBand(s,r),i=new Map;for(let s=0;s<r;s++)if(!e||e[s]){let e;i.clear();for(let r=0;r<n;r++)e=t[r][s],i.set(e,i.has(e)?i.get(e)+1:1);let r=0,a=t.length;for(const t of i.keys())r=i.get(t),r<a&&(a=r,e=t);o[s]=e}return o}function fe(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=F.createEmptyBand(s,o),a=new Set;for(let s=0;s<o;s++)if(!e||e[s]){let e;a.clear();for(let r=0;r<n;r++)e=t[r][s],a.add(e);i[s]=a.size}return i}const he=new Map,pe=new Map,de=new Map,me=new Map;function ge(){he.size||(he.set(4,Math.sqrt),he.set(6,Math.acos),he.set(7,Math.asin),he.set(8,Math.atan),he.set(9,Math.atanh),he.set(10,Math.abs),he.set(21,Math.cos),he.set(22,Math.cosh),he.set(48,Math.floor),he.set(49,Math.ceil),he.set(51,Math.sin),he.set(52,Math.sinh),he.set(56,Math.tan),he.set(57,Math.tanh),he.set(59,Math.acosh),he.set(60,Math.asinh),he.set(65,Math.floor),pe.set(5,Math.pow),pe.set(61,Math.atan2),de.set(1,dt),de.set(2,yt),de.set(3,vt),de.set(11,Pt),de.set(12,Rt),de.set(13,kt),de.set(14,It),de.set(15,Mt),de.set(16,Ct),de.set(17,Tt),de.set(18,St),de.set(19,_t),de.set(20,Gt),de.set(23,bt),de.set(24,Dt),de.set(25,zt),de.set(26,Ut),de.set(27,Ot),de.set(28,$t),de.set(29,Xt),de.set(30,wt),de.set(31,Kt),de.set(32,mt),de.set(33,qt),de.set(34,Ht),de.set(35,Et),de.set(36,Vt),de.set(37,Wt),de.set(44,Yt),de.set(45,Zt),de.set(46,Jt),de.set(53,gt),de.set(64,xt),de.set(65,Ft),de.set(76,te),de.set(78,te),me.set(38,ce),me.set(39,ee),me.set(40,re),me.set(41,ae),me.set(42,se),me.set(43,le),me.set(47,ne),me.set(54,ie),me.set(55,oe),me.set(58,fe),me.set(66,ce),me.set(67,ee),me.set(68,re),me.set(69,ae),me.set(70,se),me.set(71,le),me.set(72,ne),me.set(73,ie),me.set(74,oe),me.set(75,fe))}function ye(t,e,s,n){let[r,a]=i(s);const u=o(s);u&&(r-=1e-5,a+=1e-5);for(let s=0;s<e.length;s++)if(e[s]){const o=t[s];isNaN(o)||o<r||o>a?e[s]=0:n[s]=u?Math.round(o):o}}function ve(t,e,s={}){ge();let n=pt(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=s,o=!me.has(e)||s.processAsMultiband,i=o?t[0].pixels.length:1,a=[];for(let s=0;s<i;s++){const i=me.has(e)&&!o?t.flatMap((t=>t.pixels)):t.map((t=>t.pixels[s]));let u,c=!0;if(e===ut.setNull){const t=Qt(i,n,r);u=t.band,n=t.mask,c=!1}else if(de.has(e)){u=de.get(e)(i,n,"f64")}else if(he.has(e))u=e===it.asin||e===it.acos||e===it.atanh?At(i,n,"f64",e):jt(i,n,"f64",he.get(e));else if(pe.has(e))u=Nt(i,n,"f64",pe.get(e));else if(me.has(e)){u=me.get(e)(i,n,"f64")}else u=i[0],c=!1;if(c&&e!==ot.isNull&&!lt.has(e)){const t=F.createEmptyBand(r,u.length);n||(n=new Uint8Array(u.length).fill(255)),ye(u,n,r,t),u=t}a.push(u)}const u=t[0];return new F({width:u.width,height:u.height,pixelType:r,mask:e===ot.isNull?null:n,pixels:a})}function we(t,e,s){return ve(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:s})}let be=class extends st{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e;return{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e?.[0]||null==e?.[1]?null:we(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[n,r]=i(s);const a=o(s);return a&&(n-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[n,r],isOutputRounded:a}}};t([e({json:{write:!0,name:"rasterFunction"}})],be.prototype,"functionName",void 0),t([e({type:Q,json:{write:!0,name:"rasterFunctionArguments"}})],be.prototype,"functionArguments",void 0),t([e()],be.prototype,"rasterArgumentNames",void 0),be=t([s("esri.layers.support.rasterFunctions.ArithmeticFunction")],be);const xe=be;var Fe;let Ae=Fe=class extends Y{clone(){return new Fe({raster:this.raster})}};Ae=Fe=t([s("esri.layers.support.rasterFunctions.AspectFunctionArguments")],Ae);const je=Ae;let Ne=class extends st{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],o=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return G(e,{resolution:o})}};t([e({json:{write:!0,name:"rasterFunction"}})],Ne.prototype,"functionName",void 0),t([e({type:je,json:{write:!0,name:"rasterFunctionArguments"}})],Ne.prototype,"functionArguments",void 0),t([e()],Ne.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],Ne.prototype,"isGCS",void 0),Ne=t([s("esri.layers.support.rasterFunctions.AspectFunction")],Ne);const Pe=Ne;const Re=new Set(["+","-","*","/","(",")"]);function ke(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1,t.length));const s=t.split(""),n=[],r=[];let o="";for(let t=0;t<s.length;t++){const i=s[t];Re.has(i)?(o.length&&r.push(Ie(o,e)),n.push(i),o=""):o=o.concat(i)}return o.length&&r.push(Ie(o,e)),{ops:n,nums:r}}function Ie(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function Me(t,e,s,n){if("number"==typeof s&&"number"==typeof n)return s+n;let r,o,i;"number"==typeof s?(i=n,r=i.length,o=new Float32Array(r),o.fill(s)):(r=s.length,o=s,n.constructor===Number?(i=new Float32Array(r),i.fill(n)):i=n);const a=new Float32Array(r);switch(e){case"+":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]+i[e]);break;case"-":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]-i[e]);break;case"*":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]*i[e]);break;case"/":for(let e=0;e<r;e++)(null==t||t[e])&&i[e]&&(a[e]=o[e]/i[e]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return a}function Ce(t,e){t.splice(e,1);let s=0,n=0;do{s=0,n=0;for(let e=0;e<t.length;e++)if("("===t[e])s=e;else if(")"===t[e]){n=e;break}n===s+1&&t.splice(s,2)}while(n===s+1);return t}function Te(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,s=0;for(let n=0;n<t.length;n++)if("("===t[n])e=n;else if(")"===t[n]){s=n;break}const n=0===s?t:t.slice(e+1,s);let r=-1;for(let t=0;t<n.length;t++)if("*"===n[t]||"/"===n[t]){r=t;break}if(r>-1)s>0&&(r+=e+1);else{for(let t=0;t<n.length;t++)if("+"===n[t]||"-"===n[t]){r=t;break}s>0&&(r+=e+1)}let o=0;for(let e=0;e<r;e++)"("===t[e]&&o++;return{opIndex:r,numIndex:r-o}}function Se(t,e,s){let n,{ops:r,nums:o}=ke(s,e);if(0===r.length){const t=1===o.length?o[0]:e[0];if(t instanceof Float32Array)return[t];const s=new Float32Array(e[0].length);return"number"==typeof t?s.fill(t):s.set(t),[s]}for(;r.length>0;){const{numIndex:e,opIndex:s}=Te(r);if(n=Me(t,r[s],o[e],o[e+1]),1===r.length)break;r=Ce(r,s),o.splice(e,2,n)}return[n]}const _e=new a({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Ge(t,e){if(!A(t))return t;const{equation:s,method:n}=e,r=e.bandIndexes.map((t=>t-1)),{pixels:o,mask:i}=t;let a;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":a=Ue(i,o[r[0]],o[r[1]]);break;case"ndwi":a=Ue(i,o[r[1]],o[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":a=Oe(i,o[r[0]],o[r[1]]);break;case"ci-g":case"ci-re":a=ze(i,o[r[0]],o[r[1]]);break;case"savi":a=Le(i,o[r[0]],o[r[1]],r[2]+1);break;case"tsavi":a=Ve(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":a=We(i,o[r[0]],o[r[1]]);break;case"gemi":a=Ee(i,o[r[0]],o[r[1]]);break;case"pvi":a=$e(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1);break;case"gvitm":a=Xe(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"sultan":a=qe(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]]]);break;case"vari":a=He(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"mtvi2":a=Ke(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"rtvi-core":a=Ye(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"evi":a=Ze(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"wndwi":a=Je(i,[o[r[0]],o[r[1]],o[r[2]]],r[3]?r[3]+1:.5);break;case"bai":a=Qe(i,o[r[0]],o[r[1]]);break;case"custom":a=Se(i,o,s);break;default:return t}const u=null!=i?new Uint8Array(i.length):null;null!=i&&null!=u&&u.set(i);const c=new F({width:t.width,height:t.height,pixelType:"f32",pixels:a,mask:u});return c.updateStatistics(),c}function De(t,e,s,n){const{mask:r,pixels:o,width:i,height:a}=t,u=o[s],c=o[e],l=c.length,f=n?new Uint8Array(l):new Float32Array(l),h=n?100:1,p=n?100.5:0;for(let t=0;t<l;t++)if(null==r||r[t]){const e=u[t],s=c[t],n=e+s;n&&(f[t]=(e-s)/n*h+p)}const d=new F({width:i,height:a,mask:r,pixelType:n?"u8":"f32",pixels:[f]});return d.updateStatistics(),d}function Be(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function Ue(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o],i=t+n;i&&(r[o]=(t-n)/i)}return[r]}function Oe(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n)}return[r]}function ze(t,e,s){const n=e.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n-1)}return[r]}function Le(t,e,s,n){const r=s.length,o=new Float32Array(r);for(let i=0;i<r;i++)if(null==t||t[i]){const t=s[i],r=e[i],a=r+t+n;a&&(o[i]=(r-t)/a*(1+n))}return[o]}function Ve(t,e,s,n,r,o){const i=s.length,a=new Float32Array(i),u=-r*n+o*(1+n*n);for(let o=0;o<i;o++)if(null==t||t[o]){const t=s[o],i=e[o],c=r*i+t+u;c&&(a[o]=n*(i-n*t-r)/c)}return[a]}function We(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o],i=2*n+1;r[o]=.5*(i-Math.sqrt(i*i-8*(n-t)))}return[r]}function Ee(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o];if(1!==t&&n+t+.5!==0){const e=(2*(n*n-t*t)+1.5*n+.5*t)/(n+t+.5);r[o]=e*(1-.25*e)-(t-.125)/(1-t)}}return[r]}function $e(t,e,s,n,r){const o=s.length,i=new Float32Array(o),a=1/Math.sqrt(1+n*n);for(let u=0;u<o;u++)if(null==t||t[u]){const t=s[u],o=e[u];i[u]=(o-n*t-r)*a}return[i]}function Xe(t,e){const[s,n,r,o,i,a]=e,u=s.length,c=new Float32Array(u);for(let e=0;e<u;e++)(null==t||t[e])&&(c[e]=-.2848*s[e]-.2435*n[e]-.5436*r[e]+.7243*o[e]+.084*i[e]-.18*a[e]);return[c]}function qe(t,e){const[s,n,r,o,i]=e,a=s.length,u=new Float32Array(a),c=new Float32Array(a),l=new Float32Array(a);for(let e=0;e<a;e++)(null==t||t[e])&&(u[e]=i[e]?o[e]/i[e]*100:0,c[e]=s[e]?o[e]/s[e]*100:0,l[e]=r[e]?n[e]/r[e]*(o[e]/r[e])*100:0);return[u,c,l]}function He(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=o+t-r[e];a&&(i[e]=(o-t)/a)}return[i]}function Ke(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=r[e],u=Math.sqrt((2*t+1)**2-(6*t-5*Math.sqrt(o))-.5);if(u){const s=1.5*(1.2*(t-a)-2.5*(o-a));i[e]=s/u}}return[i]}function Ye(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=r[e];i[e]=100*(t-o)-10*(t-a)}return[i]}function Ze(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=t+6*o-7.5*r[e]+1;a&&(i[e]=2.5*(t-o)/a)}return[i]}function Je(t,e,s=.5){const[n,r,o]=e,i=r.length,a=new Float32Array(i);for(let e=0;e<i;e++)if(null==t||t[e])for(e=0;e<i;e++){const t=n[e],i=r[e],u=o[e],c=t+s*i+(1-s)*u;c&&(a[e]=(t-s*i-(1-s)*u)/c)}return[a]}function Qe(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o])for(o=0;o<n;o++){const t=(.1-e[o])**2+(.06-s[o])**2;t&&(r[o]=1/t)}return[r]}var ts;let es=ts=class extends Y{constructor(){super(...arguments),this.method="custom"}clone(){return new ts({method:this.method,bandIndexes:this.bandIndexes,raster:c(this.raster)})}};t([e({json:{type:String,write:!0}})],es.prototype,"bandIndexes",void 0),t([u(_e)],es.prototype,"method",void 0),es=ts=t([s("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],es);const ss=es;const ns=new Set(["vari","mtvi2","rtvi-core","evi"]);let rs=class extends st{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();e.pixelType=this.outputPixelType,e.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e;return{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:s,bandIndexes:n}=this.functionArguments,r=n.split(" ").map((t=>parseFloat(t)));return Ge(e,{method:s,bandIndexes:r,equation:n})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const r=new Float32Array(3),{method:o}=this.functionArguments;switch(o){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=Be([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=Be([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=Be([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=Be([e[0],e[1],0]),n="ci";break;case"savi":s=Be([e[0],e[1],0]),n="savi",r[0]=t[2]+1;break;case"tsavi":s=Be([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":s=Be([e[0],e[1],0]),n="msavi";break;case"gemi":s=Be([e[0],e[1],0]),n="gemi";break;case"pvi":s=Be([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":s=Be([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=Be([e[0],e[1],e[2]]),n="mtvi";break;case"rtvi-core":s=Be([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=Be([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=Be([e[0],e[1],0]),n="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":s=Be([e[1],e[0],0]),n="bai";break;default:s=Be([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:r}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1)),s=t.length,n=e.map((t=>t>=s?s-1:t)),r=ns.has(this.functionArguments.method)?3:2,o=n.slice(0,r).map((e=>t[e]));return 2===o.length&&o.push(0),o}};t([e({json:{write:!0,name:"rasterFunction"}})],rs.prototype,"functionName",void 0),t([e({type:ss,json:{write:!0,name:"rasterFunctionArguments"}})],rs.prototype,"functionArguments",void 0),t([e()],rs.prototype,"rasterArgumentNames",void 0),rs=t([s("esri.layers.support.rasterFunctions.BandArithmeticFunction")],rs);const os=rs;var is;const as=new a({1:"outside",2:"inside"},{useNumericKeys:!0});let us=is=class extends Y{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new is({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};t([e({types:l,json:{read:f,write:!0}})],us.prototype,"clippingGeometry",void 0),t([e({json:{read:as.read,write:as.write}})],us.prototype,"clippingType",void 0),us=is=t([s("esri.layers.support.rasterFunctions.ClipFunctionArguments")],us);const cs=us;let ls=class extends st{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};t([e({json:{write:!0,name:"rasterFunction"}})],ls.prototype,"functionName",void 0),t([e({type:cs,json:{write:!0,name:"rasterFunctionArguments"}})],ls.prototype,"functionArguments",void 0),t([e()],ls.prototype,"rasterArgumentNames",void 0),t([e()],ls.prototype,"isNoopProcess",void 0),ls=t([s("esri.layers.support.rasterFunctions.ClipFunction")],ls);const fs=ls;var hs;let ps=hs=class extends Y{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return B.includes(e)?e:null}readColorRamp(t){return d(t)}readColorRampName(t,e){if(!t)return null;const s=D.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return s?D.fromJSON(s):null}clone(){return new hs({colormap:c(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};t([e({type:[[Number]],json:{write:!0}})],ps.prototype,"colormap",void 0),t([e({type:String,json:{write:!0}})],ps.prototype,"colormapName",void 0),t([r("colormapName")],ps.prototype,"castColormapName",null),t([e({types:h,json:{write:!0}})],ps.prototype,"colorRamp",void 0),t([p("colorRamp")],ps.prototype,"readColorRamp",null),t([e({type:D.apiValues,json:{type:D.jsonValues,write:D.write}})],ps.prototype,"colorRampName",void 0),t([p("colorRampName")],ps.prototype,"readColorRampName",null),ps=hs=t([s("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],ps);const ds=ps;const ms=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],gs=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function ys(t,e){const s=[],n=[];for(let e=0;e<t.length-1;e++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[e].slice(1),toColor:t[e+1].slice(1)}),n.push(t[e+1][0]-t[e][0]);const r=t[t.length-1][0];return U({type:"multipart",colorRamps:s},{numColors:r,weights:e=e??n})}function vs(){return ys([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function ws(){const t=ys([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}function bs(){return U({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function xs(){const t=[];for(let e=0;e<256;e++){const e=[];for(let t=0;t<3;t++)e.push(Math.round(255*Math.random()));t.push(e)}return t}function Fs(){return ys([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function As(t){let e;switch(t){case"elevation":e=vs();break;case"gray":e=bs();break;case"hillshade":e=Fs();break;case"ndvi":e=ms;break;case"ndvi2":e=ws();break;case"ndvi3":e=gs;break;case"random":e=xs()}return e?(e=e.map(((t,e)=>[e,...t])),e):null}let js=class extends st{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:r}=this.functionArguments;if(!e?.length)if(n)e=O(n,{interpolateAlpha:!0});else if(r){const t=z(r);t&&(e=O(t))}else s&&(e=As(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const o=this._getOutputPixelType(t.pixelType);this.outputPixelType=o.startsWith("f")?"s32":o;const i=t.clone();return i.pixelType=this.outputPixelType,i.colormap=e,i.bandCount=1,this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||o(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};t([e({json:{write:!0,name:"rasterFunction"}})],js.prototype,"functionName",void 0),t([e({type:ds,json:{write:!0,name:"rasterFunctionArguments"}})],js.prototype,"functionArguments",void 0),t([e()],js.prototype,"rasterArgumentNames",void 0),t([e()],js.prototype,"isNoopProcess",void 0),t([e({json:{write:!0}})],js.prototype,"indexedColormap",void 0),js=t([s("esri.layers.support.rasterFunctions.ColormapFunction")],js);const Ns=js;var Ps;let Rs=Ps=class extends Y{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Ps({rasters:c(this.rasters)})}};t([e({json:{write:!0}})],Rs.prototype,"rasters",void 0),t([m("rasters")],Rs.prototype,"writeRasters",null),Rs=Ps=t([s("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],Rs);const ks=Rs;let Is=class extends st{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map((({bandCount:t})=>t)).reduce(((t,e)=>t+e)),t.every((({statistics:t})=>null!=t&&t.length))){const e=[];t.forEach((({statistics:t})=>null!=t&&e.push(...t))),s.statistics=e}if(t.every((({histograms:t})=>null!=t&&t.length))){const e=[];t.forEach((({histograms:t})=>null!=t&&e.push(...t))),s.histograms=e}s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=t.every((t=>t.keyProperties.BandProperties?.length))?t.flatMap((t=>t.keyProperties.BandProperties)):void 0;s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s;return{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;if(!e)return null;const s=e?.[0];return null==s?null:j(e)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};t([e({json:{write:!0,name:"rasterFunction"}})],Is.prototype,"functionName",void 0),t([e({type:ks,json:{write:!0,name:"rasterFunctionArguments"}})],Is.prototype,"functionArguments",void 0),t([e()],Is.prototype,"rasterArgumentNames",void 0),Is=t([s("esri.layers.support.rasterFunctions.CompositeBandFunction")],Is);const Ms=Is;var Cs;let Ts=Cs=class extends Y{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new Cs({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};t([e({json:{write:!0}})],Ts.prototype,"contrastOffset",void 0),t([e({json:{write:!0}})],Ts.prototype,"brightnessOffset",void 0),Ts=Cs=t([s("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],Ts);const Ss=Ts;let _s=class extends st{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if("u8"!==e.pixelType)return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:n,brightnessOffset:r}=this.functionArguments;return this.lookup=L(n,r),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:N(e,{lut:e.pixels.map((()=>this.lookup)),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};t([e({json:{write:!0,name:"rasterFunction"}})],_s.prototype,"functionName",void 0),t([e({type:Ss,json:{write:!0,name:"rasterFunctionArguments"}})],_s.prototype,"functionArguments",void 0),t([e()],_s.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],_s.prototype,"lookup",void 0),_s=t([s("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],_s);const Gs=_s;function Ds(t,e,s,n,r){const o=Math.floor(n/2);for(let n=0;n<o;n++)for(let o=0;o<e;o++)t[n*e+o]=t[(r-1-n)*e+o],t[(s-1-n)*e+o]=t[(s-r+n)*e+o];const i=Math.floor(r/2);for(let n=0;n<s;n++){const s=n*e;for(let n=0;n<i;n++)t[s+n]=t[s+r-1-n],t[s+e-n-1]=t[s+e+n-r]}}const Bs=new Map;function Us(t){const e=Math.sqrt(t.length),s=t.slice(0,e),n=[1];for(let s=1;s<e;s++){let r=null;for(let n=0;n<e;n++){const o=t[n+s*e],i=t[n];if(null==r)if(0===i){if(o)return{separable:!1,row:null,col:null}}else r=o/i;else if(o/i!==r)return{separable:!1,row:null,col:null}}if(null==r)return{separable:!1,row:null,col:null};n.push(r)}return{separable:!0,row:s,col:n}}function Os(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=o.length,c=i?0:n,l=i?n:0,f=i?1:e;for(let i=c;i<s-c;i++){const s=i*e;for(let i=l;i<e-l;i++){if(r&&!r[s+i])continue;let e=0;for(let r=0;r<u;r++)e+=t[s+i+(r-n)*f]*o[r];a[s+i]=e}}return a}function zs(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=Math.floor(n/2),c=Math.floor(r/2);for(let l=u;l<s-u;l++){const s=l*e;for(let l=c;l<e-c;l++){if(o&&!o[s+l])continue;let f=0;for(let o=0;o<n;o++)for(let n=0;n<r;n++)f+=t[s+l+(o-u)*e+n-c]*i[o*r+n];a[s+l]=f}}return a}function Ls(t,e,s=!0){const{pixels:n,width:r,height:o,pixelType:i,mask:a}=t,u=n.length,c=[],{kernel:l,rows:f,cols:h}=e;for(let t=0;t<u;t++){const e=zs(n[t],r,o,f,h,a,l);s&&Ds(e,r,o,f,h),c.push(e)}return new F({width:r,height:o,pixelType:i,pixels:c,mask:a})}function Vs(t,e,s,n=!0){const{pixels:r,width:o,height:i,pixelType:a,mask:u}=t,c=r.length,l=[],f=e.length,h=s.length,p=Math.floor(f/2),d=Math.floor(h/2);for(let t=0;t<c;t++){let a=Os(r[t],o,i,p,u,e,!0);a=Os(a,o,i,d,u,s,!1),n&&Ds(a,o,i,f,h),l.push(a)}return new F({width:o,height:i,pixelType:a,pixels:l,mask:u})}function Ws(t,e){const s=Us(e.kernel),n=!1!==e.mirrorEdges,r=s.separable?Vs(t,s.row,s.col,n):Ls(t,e,n),{outputPixelType:o}=e;return o&&r.clamp(o),r}Bs.set(nt.none,[0,0,0,0,1,0,0,0,0]),Bs.set(nt.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),Bs.set(nt.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),Bs.set(nt.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),Bs.set(nt.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),Bs.set(nt.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),Bs.set(nt.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),Bs.set(nt.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),Bs.set(nt.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),Bs.set(nt.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),Bs.set(nt.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),Bs.set(nt.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),Bs.set(nt.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),Bs.set(nt.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),Bs.set(nt.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),Bs.set(nt.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),Bs.set(nt.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),Bs.set(nt.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),Bs.set(nt.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),Bs.set(nt.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),Bs.set(nt.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),Bs.set(nt.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),Bs.set(nt.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var Es;let $s=Es=class extends Y{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=Bs.get(t);if(!e||t===nt.userDefined||t===nt.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new Es({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:c(this.raster)})}};t([e({json:{type:Number,write:!0}})],$s.prototype,"rows",void 0),t([e({json:{type:Number,write:!0}})],$s.prototype,"cols",void 0),t([e({json:{name:"type",type:Number,write:!0}})],$s.prototype,"convolutionType",null),t([e({json:{type:[Number],write:!0}})],$s.prototype,"kernel",void 0),$s=Es=t([s("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],$s);const Xs=$s;const qs=25;let Hs=class extends st{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce(((t,e)=>t+e));return-1===e||0===s||1===s?t:t.map((t=>t/s))}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(nt).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==nt.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const o=r.clone();o.pixelType=this.outputPixelType;const i=[nt.none,nt.sharpen,nt.sharpen2,nt.sharpening3x3,nt.sharpening5x5];(-1===t||"u8"!==this.outputPixelType&&!i.includes(t))&&(o.statistics=null,o.histograms=null),o.colormap=null,o.attributeTable=null,this.rasterInfo=o;return{success:!0,supportsGPU:n.length<=qs}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===nt.none)return e;const{rows:s,cols:n}=this.functionArguments,{_normalizedKernel:r}=this;return Ws(e,{kernel:r,rows:s,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(qs);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:i(this.outputPixelType)}}};t([e({json:{write:!0,name:"rasterFunction"}})],Hs.prototype,"functionName",void 0),t([e({type:Xs,json:{write:!0,name:"rasterFunctionArguments"}})],Hs.prototype,"functionArguments",void 0),t([e()],Hs.prototype,"rasterArgumentNames",void 0),t([e()],Hs.prototype,"_normalizedKernel",null),Hs=t([s("esri.layers.support.rasterFunctions.ConvolutionFunction")],Hs);const Ks=Hs;var Ys;const Zs=new a({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let Js=Ys=class extends Y{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return Zs.fromJSON(e.type??e.curvatureType??0)}clone(){return new Ys({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};t([e({json:{write:{target:"type"}}}),u(Zs)],Js.prototype,"curvatureType",void 0),t([p("curvatureType",["type","curvatureType"])],Js.prototype,"readCurvatureType",null),t([e({type:Number,json:{write:!0}})],Js.prototype,"zFactor",void 0),Js=Ys=t([s("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Js);const Qs=Js;let tn=class extends st{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:r,primaryPixelSizes:o}=t,i=o?.[0],a=i??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),u=this.isGCS&&s>=1?s*W:s;return V(e,{zFactor:u,curvatureType:n,resolution:a})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*W:t}}};t([e({json:{write:!0,name:"rasterFunction"}})],tn.prototype,"functionName",void 0),t([e({type:Qs,json:{write:!0,name:"rasterFunctionArguments"}})],tn.prototype,"functionArguments",void 0),t([e()],tn.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],tn.prototype,"isGCS",void 0),tn=t([s("esri.layers.support.rasterFunctions.CurvatureFunction")],tn);const en=tn;var sn;let nn=sn=class extends Y{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=P.bestMatch}clone(){return new sn({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};t([e({json:{write:!0}})],nn.prototype,"bandIds",void 0),t([e({json:{write:!0}})],nn.prototype,"bandNames",void 0),t([e({json:{write:!0}})],nn.prototype,"bandWavelengths",void 0),t([u({0:"name",1:"wavelength",2:"id"})],nn.prototype,"method",void 0),t([e({json:{write:!0}})],nn.prototype,"missingBandAction",void 0),t([e({json:{write:!0}})],nn.prototype,"wavelengthMatchTolerance",void 0),nn=sn=t([s("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],nn);const rn=nn;let on=class extends st{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:n,bandNames:r,bandWavelengths:o,bandIds:i,missingBandAction:a}=t,u=r?.length&&("name"===n||"id"!==n&&!i?.length),c=o?.length&&("wavelength"===n||"id"!==n&&!i?.length),l=a===P.fail,f=u?this._matchBandNames(s,r):c?this._matchBandWavelengths(s,o,l):this._matchBandIds(s,i,l);if(null==f){return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":c?"band wavelengths":"band ids"} for the imagery data source`}}this.functionArguments.bandIds=f,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const h=s.clone();h.pixelType=this.outputPixelType,h.bandCount=f.length;const{statistics:p,histograms:d}=h;null!=p&&p.length&&(h.statistics=f.map((t=>p[t]||p[p.length-1]))),null!=d&&d.length&&(h.histograms=f.map((t=>d[t]||d[d.length-1])));let m=h.keyProperties?.BandProperties;m?.length&&(m=f.map((t=>t>=m.length?m[m.length-1]:m[t])),h.keyProperties={...h.keyProperties,BandProperties:m}),this.rasterInfo=h;return{success:!0,supportsGPU:h.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map((t=>t>=s?s-1:t));return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:Be(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}_matchBandNames(t,e){const s=t.bandInfos.map((({name:t})=>t.toLowerCase())),n=[];for(let t=0;t<e.length;t++){const r=e[t].toLowerCase();let o=s.indexOf(r);if(-1===o&&"nearinfrared"===r&&(o=s.findIndex((t=>t.startsWith("nearinfrared_1"))),-1===o&&(o=s.findIndex((t=>t.startsWith("nearinfrared"))))),-1===o)return null;n.push(o)}return n}_matchBandIds(t,e,s){const{bandCount:n}=t;return!e?.length||s&&e.some((t=>t<0||t>=n))?null:e}_matchBandWavelengths(t,e,s){const{bandInfos:n}=t,r=[];for(let t=0;t<n.length;t++){const{minWavelength:e,maxWavelength:s}=n[t];if(!e||!s)return null;r.push({minWavelength:e,maxWavelength:s})}const{wavelengthMatchTolerance:o}=this.functionArguments,i=[];for(let t=0;t<e.length;t++){const n=e[t];let a=!1,u=-1,c=Number.MAX_VALUE;for(let t=0;t<r.length;t++){const e=r[t],s=n>=e.minWavelength&&n<=e.maxWavelength,o=Math.abs(n-(e.minWavelength+e.maxWavelength)/2);s?o<c&&(a=!0,u=t,c=o):!a&&o<c&&(u=t,c=o)}if(!a&&o&&c<o&&(a=!0),!a&&s)return null;i.push(u)}return i}};t([e({json:{write:!0,name:"rasterFunction"}})],on.prototype,"functionName",void 0),t([e({type:rn,json:{write:!0,name:"rasterFunctionArguments"}})],on.prototype,"functionArguments",void 0),t([e()],on.prototype,"rasterArgumentNames",void 0),on=t([s("esri.layers.support.rasterFunctions.ExtractBandFunction")],on);const an=on;function un(t,e,s){const{pixels:n,width:r,height:o,mask:a,bandMasks:u}=t,c=r*o,l=u?.length?F.combineBandMasks(u):a,f=Math.min(e.length,n.length),h=s.startsWith("f"),p=!h&&s!==t.pixelType,[d,m]=i(s),g=F.createEmptyBand(s,c);for(let t=0;t<o;t++){let s=t*r;for(let t=0;t<r;t++,s++)if(!l||l[s]){let t=0;for(let r=0;r<f;r++)t+=e[r]*n[r][s];h||(t=Math.round(t),p&&(t=t>m?m:t<d?d:t)),g[s]=t}}const y=new F({width:r,height:o,pixels:[g],pixelType:s,mask:l});return y.updateStatistics(),y}var cn;let ln=cn=class extends Y{clone(){return new cn({conversionParameters:[...this.conversionParameters],raster:this.raster})}};t([e({type:[Number],json:{write:!0}})],ln.prototype,"conversionParameters",void 0),ln=cn=t([s("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],ln);const fn=ln;let hn=class extends st{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce(((t,e)=>t+e));return t.map((t=>t/e))}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=3===t.length||3===e.bandCount&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:un(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};t([e({json:{write:!0,name:"rasterFunction"}})],hn.prototype,"functionName",void 0),t([e({type:fn,json:{write:!0,name:"rasterFunctionArguments"}})],hn.prototype,"functionArguments",void 0),t([e()],hn.prototype,"rasterArgumentNames",void 0),t([e()],hn.prototype,"_normalizedWeights",null),hn=t([s("esri.layers.support.rasterFunctions.GrayscaleFunction")],hn);const pn=hn;var dn;let mn=dn=class extends Y{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new dn({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:c(this.rasters)})}};t([e({json:{write:!0}})],mn.prototype,"operation",void 0),t([e({json:{write:!0}})],mn.prototype,"rasters",void 0),t([m("rasters")],mn.prototype,"writeRasters",null),t([e({json:{write:!0}})],mn.prototype,"processAsMultiband",void 0),mn=dn=t([s("esri.layers.support.rasterFunctions.LocalFunctionArguments")],mn);const gn=mn;let yn=class extends st{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some((t=>t.bandCount!==s)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:o}=this.functionArguments,i=ht[r];if(!(999===i||o.length===i||o.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};const a=e.clone();a.bandCount=999!==i||n?s:1,this._removeStatsHistColormapVAT(a),this._updateStatistics(a),this._updatePixelType(a),this.rasterInfo=a;return{success:!0,supportsGPU:1===a.bandCount&&i<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:ve(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=ht[t],s=Object.keys(ct).find((e=>ct[e]===t))?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[r,a]=i(n);const u=o(n);return u&&(r-=1e-4,a+=1e-4),{imageCount:e,operationName:s,domainRange:[r,a],isOutputRounded:u}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,n=ft(s)?.domain;if(n){t.statistics=[];for(let e=0;e<t.bandCount;e++)t.statistics[e]={min:n[0],max:n[1],avg:(n[0]+n[1])/2,stddev:(n[0]+n[1])/10}}else 45===s&&e.statistics?.length&&(t.statistics=e.statistics.map((t=>({min:-t.max,max:-t.min,avg:null!=t.avg?-t.avg:void 0,stddev:null!=t.stddev?-t.stddev:void 0}))))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,{domain:r,isInteger:i}=ft(n)??{domain:null,isInteger:!1};let a="f32";if(r&&i)a=g(r[0],r[1]);else if(30===n){const t=e?.[0];a=t?g(t.min,t.max):o(s)?s:"s32"}else if(45===n&&o(s)){const t=e?.map((({max:t})=>-t)),n=e?.map((({min:t})=>-t)),r=t?.length?Math.min(...t):null,o=n?.length?Math.min(...n):null;a=null!=r&&null!=o?g(r,o):s.startsWith("s")?s.replace("s","u"):"u1"===s||"u2"===s||"u4"===s?"s8":"u8"===s?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(a)}};t([e({json:{write:!0,name:"rasterFunction"}})],yn.prototype,"functionName",void 0),t([e({type:gn,json:{write:!0,name:"rasterFunctionArguments"}})],yn.prototype,"functionArguments",void 0),t([e()],yn.prototype,"rasterArgumentNames",void 0),yn=t([s("esri.layers.support.rasterFunctions.LocalFunction")],yn);const vn=yn;var wn;let bn=wn=class extends Y{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=R.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const s=t.map((t=>{if("number"==typeof t)return e=!0,[t];if("string"==typeof t){const s=t.trim().split(" ").filter((t=>""!==t.trim())).map((t=>Number(t)));return e=e||s.length>0,0===s.length?null:s}return null}));return e?s:null}clone(){return new wn({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};t([e({json:{write:!0}})],bn.prototype,"includedRanges",void 0),t([e({json:{write:!0}})],bn.prototype,"noDataValues",void 0),t([e()],bn.prototype,"normalizedNoDataValues",null),t([e({json:{write:!0}})],bn.prototype,"noDataInterpretation",void 0),bn=wn=t([s("esri.layers.support.rasterFunctions.MaskFunctionArguments")],bn);const xn=bn;let Fn=class extends st{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let o=0;o<t.bandCount;o++){const t=k(e,s?.slice(2*o,2*o+2),n?.[o]);if(null==t){r=null;break}r.push(t)}this.lookups=r;const o=null!=n&&n.every((t=>t?.length===n[0]?.length));return{success:!0,supportsGPU:(!s||s.length<=2*I)&&(!n||o&&n[0].length<=I)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:r,noDataInterpretation:o,normalizedNoDataValues:i}=this.functionArguments,a=o===R.matchAll;return M(e,{includedRanges:r,noDataValues:i,outputPixelType:s,matchAll:a,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(I);s.fill(y),e?.[0]?.length&&s.set(e[0]);const n=new Float32Array(I);for(let e=0;e<n.length;e+=2)n[e]=t?.[e]??-y,n[e+1]=t?.[e+1]??y;return t&&t.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};t([e({json:{write:!0,name:"rasterFunction"}})],Fn.prototype,"functionName",void 0),t([e({type:xn,json:{write:!0,name:"rasterFunctionArguments"}})],Fn.prototype,"functionArguments",void 0),t([e()],Fn.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],Fn.prototype,"lookups",void 0),Fn=t([s("esri.layers.support.rasterFunctions.MaskFunction")],Fn);const An=Fn;var jn;let Nn=jn=class extends Y{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new jn({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};t([e({json:{write:!0}})],Nn.prototype,"visibleBandID",void 0),t([e({json:{write:!0}})],Nn.prototype,"infraredBandID",void 0),t([e({json:{write:!0}})],Nn.prototype,"scientificOutput",void 0),Nn=jn=t([s("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Nn);const Pn=Nn;let Rn=class extends st{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const n=this.sourceRasterInfos[0],r=Math.max(e,s);if(n.bandCount<2||r>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const o=n.clone();o.pixelType=this.outputPixelType,o.colormap=null,o.histograms=null,o.bandCount=1,o.keyProperties={...o.keyProperties,BandProperties:void 0};const[i,a,u,c]=t?[-1,1,0,.1]:[0,200,100,10];return o.statistics=[{min:i,max:a,avg:u,stddev:c}],this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:r}=this.functionArguments;return De(e,s,n,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments,n=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:Be(n),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map((e=>t[e]))}};t([e({json:{write:!0,name:"rasterFunction"}})],Rn.prototype,"functionName",void 0),t([e({type:Pn,json:{write:!0,name:"rasterFunctionArguments"}})],Rn.prototype,"functionArguments",void 0),t([e()],Rn.prototype,"rasterArgumentNames",void 0),Rn=t([s("esri.layers.support.rasterFunctions.NDVIFunction")],Rn);const kn=Rn;var In;let Mn=In=class extends Y{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new In({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};t([e({json:{write:!0}})],Mn.prototype,"inputRanges",void 0),t([e({json:{write:!0}})],Mn.prototype,"outputValues",void 0),t([e({json:{write:!0}})],Mn.prototype,"noDataRanges",void 0),t([e({json:{write:!0}})],Mn.prototype,"allowUnmatched",void 0),t([e({json:{write:!0}})],Mn.prototype,"isLastInputRangeInclusive",void 0),Mn=In=t([s("esri.layers.support.rasterFunctions.RemapFunctionArguments")],Mn);const Cn=Mn;let Tn=class extends st{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:s}=t,{allowUnmatched:n,outputValues:r,inputRanges:o,noDataRanges:i,isLastInputRangeInclusive:a}=this.functionArguments;if(null!=s&&s.length&&r?.length)if(n){const e=Math.min.apply(null,[...r,s[0].min]),n=Math.max.apply(null,[...r,s[0].max]);t.statistics=[{...s[0],min:e,max:n}]}else{let e=r[0],n=e;for(let t=0;t<r.length;t++)e=e>r[t]?r[t]:e,n=n>r[t]?n:r[t];t.statistics=[{...s[0],min:e,max:n}]}this.rasterInfo=t,this.lookup=n?null:C({srcPixelType:e,inputRanges:o,outputValues:r,noDataRanges:i,allowUnmatched:n,isLastInputRangeInclusive:a,outputPixelType:this.outputPixelType});return{success:!0,supportsGPU:(!r||r.length<=I)&&(!i||i.length<=I)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:s,outputPixelType:n}=this;if(s){const t=N(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return null!=t&&s.mask&&(t.mask=T(e.pixels[0],e.mask,s.mask,s.offset,"u8")),t}const{inputRanges:r,outputValues:o,noDataRanges:i,allowUnmatched:a,isLastInputRangeInclusive:u}=this.functionArguments;return S(e,{inputRanges:r,outputValues:o,noDataRanges:i,outputPixelType:n,allowUnmatched:a,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(3*I),r=1e-5,o=this.functionArguments.inputRanges??[],a=this.functionArguments.outputValues??[],u=a.length;for(let t=0;t<I;t++)n[3*t]=o[2*t]??y-1,n[3*t+1]=o[2*t+1]??y,n[3*t+2]=a[t]??0,t<u&&(t>0&&(n[3*t]-=r),(t<u-1||!s)&&(n[3*t+1]-=r));const c=new Float32Array(2*I);c.fill(y),e?.length&&c.set(e);return{allowUnmatched:t,rangeMaps:n,noDataRanges:c,clampRange:i(this.outputPixelType)}}};t([e({json:{write:!0,name:"rasterFunction"}})],Tn.prototype,"functionName",void 0),t([e({type:Cn,json:{write:!0,name:"rasterFunctionArguments"}})],Tn.prototype,"functionArguments",void 0),t([e()],Tn.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],Tn.prototype,"lookup",void 0),Tn=t([s("esri.layers.support.rasterFunctions.RemapFunction")],Tn);const Sn=Tn;var _n;const Gn=new a({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let Dn=_n=class extends Y{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new _n({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};t([u(Gn)],Dn.prototype,"slopeType",void 0),t([e({type:Number,json:{write:!0}})],Dn.prototype,"zFactor",void 0),t([e({type:Number,json:{name:"psPower",write:!0}})],Dn.prototype,"pixelSizePower",void 0),t([e({type:Number,json:{name:"psZFactor",write:!0}})],Dn.prototype,"pixelSizeFactor",void 0),t([e({type:Boolean,json:{write:!0}})],Dn.prototype,"removeEdgeEffect",void 0),Dn=_n=t([s("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],Dn);const Bn=Dn;let Un=class extends st{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o}=this.functionArguments,{isGCS:i}=this,{extent:a,primaryPixelSizes:u}=t,c=u?.[0],l=c??(a?{x:a.width/e.width,y:a.height/e.height}:{x:1,y:1});return E(e,{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o,isGCS:i,resolution:l})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*W:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0}}};t([e({json:{write:!0,name:"rasterFunction"}})],Un.prototype,"functionName",void 0),t([e({type:Bn,json:{write:!0,name:"rasterFunctionArguments"}})],Un.prototype,"functionArguments",void 0),t([e()],Un.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],Un.prototype,"isGCS",void 0),Un=t([s("esri.layers.support.rasterFunctions.SlopeFunction")],Un);const On=Un;const zn=new a({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function Ln(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{statisticsType:u,kernelRows:c,kernelCols:l}=e,f="stddev"===u,h=r*o,p=new Float64Array(h),d=new Float64Array(h),m=new Uint32Array(h);for(let t=0;t<o;t++){const e=t*r;let s=0,o=0,a=0;for(let t=0;t<l;t++)i&&!i[e+t]||(s+=n[e+t],f&&(o+=n[e+t]**2),a++);p[e]=s,d[e]=o,m[e]=a;for(let t=1;t<=r-l;t++){const r=e+t-1,u=r+l;i?(i[r]&&(a--,s-=n[r],f&&(o-=n[r]**2)),i[u]&&(a++,s+=n[u],f&&(o+=n[u]**2))):(s-=n[r],s+=n[u],f&&(o-=n[r]**2,o+=n[u]**2)),p[e+t]=s,m[e+t]=a,f&&(d[e+t]=o)}}const g=new Float64Array(h),y=new Float64Array(h),v=new Uint32Array(h),w=c*r;for(let t=0;t<=r-l;t++){let e=0,s=0,n=0;for(let o=0;o<c;o++){const i=o*r+t;e+=p[i],n+=m[i],f&&(s+=d[i])}g[t]=e,y[t]=s,v[t]=n;for(let i=1;i<=o-c;i++){const o=(i-1)*r+t,a=o+w;e-=p[o],e+=p[a],n-=m[o],n+=m[a],f&&(s-=d[o],s+=d[a]),g[i*r+t]=e,y[i*r+t]=s,v[i*r+t]=n}}const b=Math.floor(c/2),x=Math.floor(l/2);for(let t=b;t<o-b;t++){const e=t*r;for(let n=x;n<r-x;n++){const o=(t-b)*r+n-x,u=v[o];if(0===u||s&&(!i||i[e+n]))continue;const c=g[o]/u,l=f?Math.sqrt((y[o]-g[o]*c)/u):c;a[e+n]=l,i&&(i[e+n]=255)}}}function Vn(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{kernelRows:u,kernelCols:c,statisticsType:l}=e,f=Math.floor(u/2),h=Math.floor(c/2),p="min"===l,d=a.slice(),m=new Uint32Array(r*o);for(let t=f;t<o-f;t++){const e=t*r;for(let t=h;t<r-h;t++){let s=p?Number.MAX_VALUE:-Number.MAX_VALUE,o=0;for(let a=0;a<u;a++)for(let u=0;u<c;u++){const c=e+t+(a-f)*r+u-h;i&&!i[c]||(s=p?Math.min(s,n[c]):Math.max(s,n[c]),o++)}i?(d[e+t]=0===o?0:s,m[e+t]=o):a[e+t]=0===o?0:s}}if(i)for(let t=f;t<o-f;t++){const e=t*r;for(let t=h;t<r-h;t++)if(m[e+t]){if(s&&i[e+t])continue;a[e+t]=d[e+t],i[e+t]=255}}}function Wn(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{kernelRows:u,kernelCols:c}=e,l=Math.floor(u/2),f=Math.floor(c/2),h=a.slice(),p=new Uint32Array(r*o);for(let t=l;t<o-l;t++){const e=t*r;for(let t=f;t<r-f;t++){if(s&&i&&i[e+t])continue;const o=[];for(let s=0;s<u;s++)for(let a=0;a<c;a++){const u=e+t+(s-l)*r+a-f;i&&!i[u]||o.push(n[u])}o.length&&(o.sort(((t,e)=>t-e)),i?(h[e+t]=o[Math.floor((o.length-1)/2)],p[e+t]=o.length):a[e+t]=o[Math.floor((o.length-1)/2)])}}if(i)for(let t=l;t<o-l;t++){const e=t*r;for(let t=f;t<r-f;t++)if(p[e+t]){if(s&&i[e+t])continue;a[e+t]=h[e+t],i[e+t]=255}}}function En(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{kernelRows:u,kernelCols:c}=e,l=Math.floor(u/2),f=Math.floor(c/2),h="majority"===e.statisticsType,p=u*c,d=a.slice(),m=new Uint32Array(r*o);for(let t=l;t<o-l;t++){const e=t*r;for(let t=f;t<r-f;t++){if(s&&i&&i[e+t])continue;const o=new Map;for(let s=0;s<u;s++)for(let a=0;a<c;a++){const u=e+t+(s-l)*r+a-f;if(i&&!i[u])continue;const c=n[u];o.set(c,o.has(c)?o.get(c)+1:1)}if(0===o.size)continue;let g=0,y=0,v=h?0:p+1;for(const t of o.keys())y=o.get(t),h===y>v&&(v=y,g=t);i?(d[e+t]=g,m[e+t]=o.size):a[e+t]=g}}if(i)for(let t=l;t<o-l;t++){const e=t*r;for(let t=f;t<r-f;t++)if(m[e+t]){if(s&&i[e+t])continue;a[e+t]=d[e+t],i[e+t]=255}}}function $n(t,e){const{mask:s}=t,{fillNoDataOnly:n}=e;if(n&&!s)return t;const{pixels:r,width:o,height:i,bandMasks:a,pixelType:u}=t,c=r.length,l=o*i,f=[],{kernelRows:h,kernelCols:p,statisticsType:d,mirrorEdges:m}=e;if(n&&!s)return t;const g=e.outputPixelType??u,y=[];for(let t=0;t<c;t++){const u=r[t],c=F.createEmptyBand(g,l);n&&c.set(u);const v=a?.[t]??s,w=v?.slice()??null,b={band:u,width:o,height:i,mask:w,outBand:c};switch(d){case"min":case"max":Vn(b,e);break;case"mean":case"stddev":Ln(b,e);break;case"median":Wn(b,e);break;case"majority":case"minority":En(b,e)}m&&!n&&Ds(c,o,i,h,p),f.push(c),w&&y.push(w)}let v=y[0]??s;y.length!==c&&(y.length=0),c>1&&a?.length&&(v=F.combineBandMasks(a));const w=new F({pixelType:g,width:o,height:i,pixels:f,bandMasks:a&&y.length?y:null,mask:v});return w.updateStatistics(),w}var Xn;let qn=Xn=class extends Y{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new Xn({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:c(this.raster)})}};t([e({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],qn.prototype,"rows",void 0),t([e({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],qn.prototype,"cols",void 0),t([e({json:{write:!0}})],qn.prototype,"fillNoDataOnly",void 0),t([e({json:{read:{source:["statisticsType","type"],reader:(t,e)=>zn.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),u(zn)],qn.prototype,"statisticsType",void 0),qn=Xn=t([s("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],qn);const Hn=qn;let Kn=class extends st{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:n}=this.functionArguments;"stddev"===n&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s;return{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{statisticsType:s,rows:n,cols:r,fillNoDataOnly:o}=this.functionArguments;return $n(e,{kernelRows:n,kernelCols:r,fillNoDataOnly:o,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:n}=this.functionArguments;return{fillNoDataOnly:n,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:i(this.outputPixelType)}}};t([e({json:{write:!0,name:"rasterFunction"}})],Kn.prototype,"functionName",void 0),t([e({type:Hn,json:{write:!0,name:"rasterFunctionArguments"}})],Kn.prototype,"functionArguments",void 0),t([e()],Kn.prototype,"rasterArgumentNames",void 0),Kn=t([s("esri.layers.support.rasterFunctions.StatisticsFunction")],Kn);const Yn=Kn;var Zn;let Jn=Zn=class extends Y{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const s=[];return t.forEach((t=>{const e={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};s.push(e)})),s}writeStatistics(t,e,s){if(!t?.length)return;const n=[];t.forEach((t=>{const e={...t,mean:t.avg,standardDeviation:t.stddev};delete e.avg,delete e.stddev,n.push(e)})),e[s]=n}clone(){return new Zn({statistics:c(this.statistics),histograms:c(this.histograms)})}};t([e({json:{write:!0}})],Jn.prototype,"statistics",void 0),t([p("statistics")],Jn.prototype,"readStatistics",null),t([m("statistics")],Jn.prototype,"writeStatistics",null),t([e({json:{write:!0}})],Jn.prototype,"histograms",void 0),Jn=Zn=t([s("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Jn);const Qn=Jn;let tr=class extends st{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};t([e({json:{write:!0,name:"rasterFunction"}})],tr.prototype,"functionName",void 0),t([e({type:Qn,json:{write:!0,name:"rasterFunctionArguments"}})],tr.prototype,"functionArguments",void 0),t([e()],tr.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],tr.prototype,"indexedColormap",void 0),t([e()],tr.prototype,"isNoopProcess",void 0),tr=t([s("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],tr);const er=tr;var sr;const nr=new a({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let rr=sr=class extends Y{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[s]=t)}clone(){return new sr({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:c(this.statistics),gamma:c(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:c(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};t([e({type:Boolean,json:{write:!0}})],rr.prototype,"computeGamma",void 0),t([e({type:Boolean,json:{name:"dra",write:!0}})],rr.prototype,"dynamicRangeAdjustment",void 0),t([e({type:[Number],json:{write:!0}})],rr.prototype,"gamma",void 0),t([e()],rr.prototype,"histograms",void 0),t([e({type:Number,json:{write:!0}})],rr.prototype,"maxPercent",void 0),t([e({type:Number,json:{write:!0}})],rr.prototype,"minPercent",void 0),t([e({type:Number,json:{write:!0}})],rr.prototype,"numberOfStandardDeviations",void 0),t([e({type:Number,json:{name:"max",write:!0}})],rr.prototype,"outputMax",void 0),t([e({type:Number,json:{name:"min",write:!0}})],rr.prototype,"outputMin",void 0),t([e({type:Number,json:{write:!0}})],rr.prototype,"sigmoidStrengthLevel",void 0),t([e({json:{type:[[Number]],write:!0}})],rr.prototype,"statistics",void 0),t([m("statistics")],rr.prototype,"writeStatistics",null),t([u(nr)],rr.prototype,"stretchType",void 0),t([e({type:Boolean,json:{write:!0}})],rr.prototype,"useGamma",void 0),rr=sr=t([s("esri.layers.support.rasterFunctions.StretchFunctionArguments")],rr);const or=rr;let ir=class extends st{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:r,useGamma:i}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const n=$(s.toJSON(),{rasterInfo:t}),a=o(this.outputPixelType)?"round":"float";this.lookup=X({pixelType:e,...n,gamma:i?r:null,rounding:a}),this.cutOffs=n}else n||(this.cutOffs=$(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const a=t.clone();a.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(a),"u8"===this.outputPixelType&&(a.keyProperties.DataType="processed"),this.rasterInfo=a;return{success:!0,supportsGPU:!n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:s}=this;if(s)return N(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,r=this.cutOffs||$(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),o=n.useGamma?n.gamma:null;return q(e,{...r,gamma:o,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,i=n&&s?.length?H(r,s):[1,1,1],{minCutOff:a,maxCutOff:u}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===a.length&&(a[1]=a[2]=a[0],u[1]=u[2]=u[0]);const c=new Float32Array(r);let l;for(l=0;l<r;l++)c[l]=(e-t)/(u[l]-a[l]);const f=o(this.outputPixelType);return{bandCount:r,outMin:t,outMax:e,minCutOff:a,maxCutOff:u,factor:c,useGamma:n,gamma:n&&s?s:[1,1,1],gammaCorrection:n&&i?i:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:f,type:"stretch"}}};t([e({json:{write:!0,name:"rasterFunction"}})],ir.prototype,"functionName",void 0),t([e({type:or,json:{write:!0,name:"rasterFunctionArguments"}})],ir.prototype,"functionArguments",void 0),t([e()],ir.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],ir.prototype,"lookup",void 0),t([e({json:{write:!0}})],ir.prototype,"cutOffs",void 0),ir=t([s("esri.layers.support.rasterFunctions.StretchFunction")],ir);const ar=ir;var ur;let cr=ur=class extends Y{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new ur({attributeTableAsRecordSet:c(this.attributeTableAsRecordSet)})}};t([e({json:{write:!0}})],cr.prototype,"attributeTableAsRecordSet",void 0),cr=ur=t([s("esri.layers.support.rasterFunctions.TableFunctionArguments")],cr);const lr=cr;let fr=class extends st{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,"thematic"!==s.dataType&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};t([e({json:{write:!0,name:"rasterFunction"}})],fr.prototype,"functionName",void 0),t([e({type:lr,json:{write:!0,name:"rasterFunctionArguments"}})],fr.prototype,"functionArguments",void 0),t([e()],fr.prototype,"rasterArgumentNames",void 0),t([e()],fr.prototype,"isNoopProcess",void 0),fr=t([s("esri.layers.support.rasterFunctions.TableFunction")],fr);const hr=fr;const pr=new Map;function dr(t,e){const{rasterFunctionArguments:s}=t;if(!s)return;(s.rasters||[s.raster]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&dr(t,e))}))}function mr(t,e){if(e=e??{},"function"in(t=c(t))&&"arguments"in t&&t.arguments){const s=Ar(t,new Map,e);if(Nr(s),!s.renderingRule)throw new v("raster-function-helper","Unsupported raster function json.");t=s.renderingRule}if("rasterFunction"in t)return wr(t=vr(t),e);throw new v("raster-function-helper","unsupported raster function json.")}function gr(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}function yr(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function vr(t){const{rasterFunction:e,rasterFunctionArguments:s}=t,n={};for(const t in s){let e=s[t];const r=t.toLowerCase();if("rasters"===r&&Array.isArray(e))n.rasters=e.map((t=>yr(t)?vr(t):t));else switch(yr(e)&&(e=vr(e)),r){case"dra":n.dra=e;break;case"pspower":n.psPower=e;break;case"pszfactor":n.psZFactor=e;break;case"bandids":n.bandIds=e;break;default:n[t[0].toLowerCase()+t.slice(1)]=e}}return"Local"!==e||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function wr(t,e){const{rasterFunction:s,rasterFunctionArguments:n}=t,r=t.outputPixelType?.toLowerCase();if(null==s||!pr.has(s))throw new v("raster-function-helper",`unsupported raster function: ${s}`);const o=pr.get(s),i=("function"==typeof o.ctor?o.ctor:o.ctor.default).fromJSON({...t,outputPixelType:r}),{rasterArgumentNames:a}=i,u=[],c=gr(n,a),l="rasters"===a[0],f=[];for(let t=0;t<c.length;t++){const s=c[t];let n;null==s||"string"==typeof s&&s.startsWith("$")?u.push(e?.raster):"string"==typeof s?e[s]&&u.push(e[s]):"number"!=typeof s&&"rasterFunction"in s&&(n=wr(s,e),l||(i.functionArguments[a[t]]=n),u.push(n)),l&&f.push(n??s)}if(l&&(i.functionArguments.rasters=f),e){i.sourceRasters=u;const t=e.raster?.url;t&&(i.mainPrimaryRasterId=t)}return i}function br(t,e){if(t&&e)for(const s in t){const n=t[s];n&&"object"==typeof n&&"type"in n&&("RasterFunctionTemplate"===n.type?br(n.arguments,e):"RasterFunctionVariable"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function xr(t,e){if(!t||"object"!=typeof t)return t;const{value:s}=t;if(!s||"object"!=typeof s)return t.isDataset?"$$":s;if(Array.isArray(s))return 0===s.length?[]:s.map((t=>"object"==typeof t&&"RasterFunctionVariable"===t.type?xr(t,e):t));if("value"in s&&["number","string","boolean"].includes(typeof s.value))return s.value;if(t.isDataset&&"Scalar"!==s.type)return"$$";if(!("type"in s))return s;let n=s;switch(s.type){case"Scalar":n=s.value;break;case"AlgorithmicColorRamp":n=Fr(s);break;case"MultiPartColorRamp":n={type:"multipart",colorRamps:s.ArrayOfColorRamp.map(Fr)};break;case"ArgumentArray":if(s.elements?.length&&"RasterStatistics"!==s.elements[0].type){const t=[];for(let n=0;n<s.elements.length;n++){const r=s.elements[n],{type:o}=r;if(o)if("RasterFunctionTemplate"===o){const{renderingRule:s}=Ar(r,e);t.push(s),null!=r._object_id&&e.set(r._object_id,s)}else{if("RasterFunctionVariable"!==o)throw new v("raster-function-helper","unsupported raster function json.");{const s=xr(r,e);t.push(s),null!=r._object_id&&e.set(r._object_id,s)}}else t.push(r)}n=t}else n=s.elements}return null!=s._object_id&&e.set(s._object_id,n),n}function Fr(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:s,ToColor:n}=t;if(!Array.isArray(s)){const{r:t,g:e,b:n}=w({h:s.Hue,s:s.Saturation,v:s.Value});s=[t,e,n,s.AlphaValue]}if(!Array.isArray(n)){const{r:t,g:e,b:s}=w({h:n.Hue,s:n.Saturation,v:n.Value});n=[t,e,s,n.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:s,toColor:n}}function Ar(t,e,s){s&&br(t,s);const n={renderingRule:{},templates:e};return jr(t,n),n}function jr(t,e){if(!t||!e.renderingRule)return;const{renderingRule:s,templates:n}=e,{function:r,arguments:o,_object_id:i}=t;if(!r||!o)return;null!=i&&n.set(i,s),s.rasterFunction=r.type.replace("Function",""),s.outputPixelType=r.pixelType;const a={};s.rasterFunctionArguments=a;for(const t in o){if("type"===t||"object_id"===t||"_object_ref_id"===t)continue;const e=o[t];e&&"object"==typeof e&&"type"in e&&("RasterFunctionTemplate"===e.type||"RasterFunctionVariable"===e.type)?("RasterFunctionVariable"===e.type?a[t]=xr(e,n):(s.rasterFunctionArguments[t]={},jr(e,{renderingRule:s.rasterFunctionArguments[t],templates:n})),null!=e._object_id&&n.set(e._object_id,a[t])):a[t]=e}switch(a.DEM&&!a.Raster&&(a.Raster=a.DEM,delete a.DEM),s.rasterFunction){case"Stretch":Pr(a);break;case"Colormap":Rr(a);break;case"Convolution":kr(a);break;case"Mask":Ir(a)}}function Nr(t){const{renderingRule:e,templates:s}=t;if("object"!=typeof e||!e?.rasterFunctionArguments||!s.size)return;const{rasterFunctionArguments:n}=e;for(const t in n){const e=n[t],r="_object_ref_id"===t?e:e&&"object"==typeof e&&"_object_ref_id"in e?e._object_ref_id:null;if(null==r)e&&"object"==typeof e&&(e.rasterFunctionArguments&&Nr({renderingRule:e,templates:s}),Array.isArray(e)&&e.forEach(((t,n)=>{if("object"==typeof t)if(null!=t._object_ref_id){if(!s.has(t._object_ref_id))throw new v("raster-function-helper",`unsupported raster function json. _object_ref_id: ${e} does not exist`);const o=s.get(r);o&&"object"==typeof o?Object.assign(t,o):e[n]=o}else Nr({renderingRule:t,templates:s})})));else{if(!s.has(r))throw new v("raster-function-helper",`unsupported raster function json. _object_ref_id: ${r} does not exist`);const e=s.get(r);"_object_ref_id"!==t?n[t]=e:e&&"object"==typeof e&&Object.assign(n,e)}}}function Pr(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function Rr(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}function kr(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function Ir(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}pr.set("Arithmetic",{desc:"Arithmetic Function",ctor:xe,rasterArgumentNames:["rasters"]}),pr.set("Aspect",{desc:"Aspect Function",ctor:Pe,rasterArgumentNames:["raster"]}),pr.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:os,rasterArgumentNames:["raster"]}),pr.set("Colormap",{desc:"Colormap Function",ctor:Ns,rasterArgumentNames:["raster"]}),pr.set("CompositeBand",{desc:"CompositeBand Function",ctor:Ms,rasterArgumentNames:["rasters"]}),pr.set("Convolution",{desc:"Convolution Function",ctor:Ks,rasterArgumentNames:["raster"]}),pr.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:Gs,rasterArgumentNames:["raster"]}),pr.set("ExtractBand",{desc:"ExtractBand Function",ctor:an,rasterArgumentNames:["raster"]}),pr.set("Curvature",{desc:"Curvature Function",ctor:en,rasterArgumentNames:["raster"]}),pr.set("Grayscale",{desc:"Grayscale Function",ctor:pn,rasterArgumentNames:["raster"]}),pr.set("Clip",{desc:"Clip Function",ctor:fs,rasterArgumentNames:["raster"]}),pr.set("Local",{desc:"Local Function",ctor:vn,rasterArgumentNames:["rasters"]}),pr.set("Mask",{desc:"Mask Function",ctor:An,rasterArgumentNames:["raster"]}),pr.set("NDVI",{desc:"NDVI Function",ctor:kn,rasterArgumentNames:["raster"]}),pr.set("Remap",{desc:"Remap Function",ctor:Sn,rasterArgumentNames:["raster"]}),pr.set("Slope",{desc:"Slope Function",ctor:On,rasterArgumentNames:["raster"]}),pr.set("Statistics",{desc:"Focal Statistics Function",ctor:Yn,rasterArgumentNames:["raster"]}),pr.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:er,rasterArgumentNames:["raster"]}),pr.set("Stretch",{desc:"Stretch Function",ctor:ar,rasterArgumentNames:["raster"]}),pr.set("Table",{desc:"Attribute Table Function",ctor:hr,rasterArgumentNames:["raster"]});let Mr=class extends n{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};t([e()],Mr.prototype,"affectsPixelSize",null),t([e({json:{write:!0}})],Mr.prototype,"spatialReference",void 0),Mr=t([s("esri.layers.support.rasterTransforms.BaseRasterTransform")],Mr);const Cr=Mr;var Tr;let Sr=Tr=class extends Cr{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return"point"===(t=t.clone()).type?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return"point"===(t=t.clone()).type?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}clone(){return new Tr({tolerance:this.tolerance})}};t([u({GCSShiftXform:"gcs-shift"})],Sr.prototype,"type",void 0),t([e()],Sr.prototype,"tolerance",void 0),Sr=Tr=t([s("esri.layers.support.rasterTransforms.GCSShiftTransform")],Sr);const _r=Sr;var Gr;let Dr=Gr=class extends Cr{constructor(){super(...arguments),this.type="identity"}clone(){return new Gr}};t([u({IdentityXform:"identity"})],Dr.prototype,"type",void 0),Dr=Gr=t([s("esri.layers.support.rasterTransforms.IdentityTransform")],Dr);const Br=Dr;var Ur;function Or(t,e,s){const{x:n,y:r}=e;if(s<2){return{x:t[0]+n*t[2]+r*t[4],y:t[1]+n*t[3]+r*t[5]}}if(2===s){const e=n*n,s=r*r,o=n*r;return{x:t[0]+n*t[2]+r*t[4]+e*t[6]+o*t[8]+s*t[10],y:t[1]+n*t[3]+r*t[5]+e*t[7]+o*t[9]+s*t[11]}}const o=n*n,i=r*r,a=n*r,u=o*n,c=o*r,l=n*i,f=r*i;return{x:t[0]+n*t[2]+r*t[4]+o*t[6]+a*t[8]+i*t[10]+u*t[12]+c*t[14]+l*t[16]+f*t[18],y:t[1]+n*t[3]+r*t[5]+o*t[7]+a*t[9]+i*t[11]+u*t[13]+c*t[15]+l*t[17]+f*t[19]}}function zr(t,e,s){const{xmin:n,ymin:r,xmax:o,ymax:i,spatialReference:a}=e;let u=[];if(s<2)u.push({x:n,y:i}),u.push({x:o,y:i}),u.push({x:n,y:r}),u.push({x:o,y:r});else{let t=10;for(let e=0;e<t;e++)u.push({x:n,y:r+(i-r)*e/(t-1)}),u.push({x:o,y:r+(i-r)*e/(t-1)});t=8;for(let e=1;e<=t;e++)u.push({x:n+(o-n)*e/t,y:r}),u.push({x:n+(o-n)*e/t,y:i})}u=u.map((e=>Or(t,e,s)));const c=u.map((t=>t.x)),l=u.map((t=>t.y));return new x({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,l),ymax:Math.max.apply(null,l),spatialReference:a})}function Lr(t){const[e,s,n,r,o,i]=t,a=n*i-o*r,u=o*r-n*i;return[(o*s-e*i)/a,(n*s-e*r)/u,i/a,r/u,-o/a,-n/u]}let Vr=Ur=class extends Cr{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:s,coeffY:n}=e;if(!s?.length||!n?.length||s.length!==n.length)return null;const r=[];for(let t=0;t<s.length;t++)r.push(s[t]),r.push(n[t]);return r}writeForwardCoefficients(t,e,s){const n=[],r=[];for(let e=0;e<t?.length;e++)e%2==0?n.push(t[e]):r.push(t[e]);e.coeffX=n,e.coeffY=r}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=Lr(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:s,inverseCoeffY:n}=e;if(!s?.length||!n?.length||s.length!==n.length)return null;const r=[];for(let t=0;t<s.length;t++)r.push(s[t]),r.push(n[t]);return r}writeInverseCoefficients(t,e,s){const n=[],r=[];for(let e=0;e<t?.length;e++)e%2==0?n.push(t[e]):r.push(t[e]);e.inverseCoeffX=n,e.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if("point"===t.type){const e=Or(this.forwardCoefficients,t,this.polynomialOrder);return new b({x:e.x,y:e.y,spatialReference:t.spatialReference})}return zr(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if("point"===t.type){const e=Or(this.inverseCoefficients,t,this.polynomialOrder);return new b({x:e.x,y:e.y,spatialReference:t.spatialReference})}return zr(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new Ur({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};t([e({json:{write:!0}})],Vr.prototype,"polynomialOrder",void 0),t([e()],Vr.prototype,"forwardCoefficients",void 0),t([p("forwardCoefficients",["coeffX","coeffY"])],Vr.prototype,"readForwardCoefficients",null),t([m("forwardCoefficients")],Vr.prototype,"writeForwardCoefficients",null),t([e({json:{write:!0}})],Vr.prototype,"inverseCoefficients",null),t([p("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],Vr.prototype,"readInverseCoefficients",null),t([m("inverseCoefficients")],Vr.prototype,"writeInverseCoefficients",null),t([e()],Vr.prototype,"affectsPixelSize",null),t([u({PolynomialXform:"polynomial"})],Vr.prototype,"type",void 0),Vr=Ur=t([s("esri.layers.support.rasterTransforms.PolynomialTransform")],Vr);const Wr=Vr;const Er={GCSShiftXform:_r,IdentityXform:Br,PolynomialXform:Wr},$r=Object.keys(Er);function Xr(t){const e=t?.type;return!t||$r.includes(e)}function qr(t){const e=t?.type;if(!e)return null;const s=Er[t?.type];if(s){const e=new s;return e.read(t),e}return null}export{dr as N,mr as R,_r as c,Xr as f,qr as i,Wr as y};
//# sourceMappingURL=p-3809040a.js.map