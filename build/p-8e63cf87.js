import{Y as e,_ as t,kj as i,e as s,r as l,p as r,c2 as a,jO as n,kk as o,q as u,kl as d,hx as p,a0 as m,km as c,kn as h,ko as y,kp as T,kq as v,kr as b,ks as D,kt as S,b7 as j,ku as I,c1 as O,kv as f,kw as g,kx as C,ky as w}from"./p-aad64c9f.js";var F;let A=F=class extends(e(t)){constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(e){return new F({directionLineType:i.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:e.attributes.FromLevel??null,geometry:e.geometry,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:e.symbol,toLevel:e.attributes.ToLevel??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionLineType:null!=this.directionLineType?i.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return null!=this.fromLevel&&(e.FromLevel=this.fromLevel),null!=this.toLevel&&(e.ToLevel=this.toLevel),new s({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};A.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger"},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger"},{name:"FromLevel",alias:"From Level",type:"esriFieldTypeInteger"},{name:"Meters",alias:"Meters",type:"esriFieldTypeDouble"},{name:"Minutes",alias:"Minutes",type:"esriFieldTypeDouble"},{name:"ToLevel",alias:"To Level",type:"esriFieldTypeInteger"}],l([r({type:i.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:i.read}}})],A.prototype,"directionLineType",void 0),l([r({json:{read:{source:"attributes.DirectionPointID"}}})],A.prototype,"directionPointId",void 0),l([r({json:{read:{source:"attributes.Meters"}}})],A.prototype,"distance",void 0),l([r({json:{read:{source:"attributes.Minutes"}}})],A.prototype,"duration",void 0),l([r({json:{read:{source:"attributes.FromLevel"}}})],A.prototype,"fromLevel",void 0),l([r({type:a})],A.prototype,"geometry",void 0),l([r({json:{read:{source:"attributes.ObjectID"}}})],A.prototype,"objectId",void 0),l([r({type:n})],A.prototype,"popupTemplate",void 0),l([r({types:o})],A.prototype,"symbol",void 0),l([r({json:{read:{source:"attributes.ToLevel"}}})],A.prototype,"toLevel",void 0),l([r({readOnly:!0,json:{read:!1}})],A.prototype,"type",void 0),A=F=l([u("esri.rest.support.DirectionLine")],A);const N=A;var W;let M=W=class extends(e(t)){constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(e,t){return null!=t.attributes.ArrivalTime?new Date(t.attributes.ArrivalTime):null}static fromGraphic(e){return new W({alternateName:e.attributes.AlternateName??null,arrivalTime:null!=e.attributes.ArrivalTime?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:e.attributes.ArrivalUTCOffset??null,azimuth:e.attributes.Azimuth??null,branchName:e.attributes.BranchName??null,directionPointType:d.fromJSON(e.attributes.DirectionPointType),displayText:e.attributes.DisplayText??null,exitName:e.attributes.ExitName??null,geometry:e.geometry,intersectingName:e.attributes.IntersectingName??null,level:e.attributes.Level??null,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:e.attributes.ShortVoiceInstruction??null,stopId:e.attributes.StopID??null,symbol:e.symbol,towardName:e.attributes.TowardName??null,voiceInstruction:e.attributes.VoiceInstruction??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionPointType:null!=this.directionPointType?d.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return null!=this.alternateName&&(e.AlternateName=this.alternateName),null!=this.arrivalTime&&(e.ArrivalTime=this.arrivalTime.getTime()),null!=this.arrivalTimeOffset&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),null!=this.azimuth&&(e.Azimuth=this.azimuth),null!=this.branchName&&(e.BranchName=this.branchName),null!=this.displayText&&(e.DisplayText=this.displayText),null!=this.exitName&&(e.ExitName=this.exitName),null!=this.intersectingName&&(e.IntersectingName=this.intersectingName),null!=this.level&&(e.Level=this.level),null!=this.name&&(e.Name=this.name),null!=this.shortVoiceInstruction&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),null!=this.towardName&&(e.TowardName=this.towardName),null!=this.voiceInstruction&&(e.VoiceInstruction=this.voiceInstruction),new s({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};M.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AlternateName",alias:"Alternative Name",type:"esriFieldTypeString"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time Offset",type:"esriFieldTypeInteger"},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble"},{name:"BranchName",alias:"Branch Name",type:"esriFieldTypeString"},{name:"DirectionPointType",alias:"Directions Point Type",type:"esriFieldTypeInteger"},{name:"DisplayText",alias:"Display Text",type:"esriFieldTypeString"},{name:"ExitName",alias:"Exit Name",type:"esriFieldTypeString"},{name:"IntersectingName",alias:"Intersecting Name",type:"esriFieldTypeString"},{name:"Level",alias:"Level",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ShortVoiceInstruction",alias:"Short Voice Instruction",type:"esriFieldTypeString"},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger"},{name:"TowardName",alias:"Toward Name",type:"esriFieldTypeString"},{name:"VoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString"}],l([r({json:{read:{source:"attributes.AlternateName"}}})],M.prototype,"alternateName",void 0),l([r()],M.prototype,"arrivalTime",void 0),l([p("arrivalTime",["attributes.ArrivalTime"])],M.prototype,"readArrivalTime",null),l([r({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],M.prototype,"arrivalTimeOffset",void 0),l([r({json:{read:{source:"attributes.Azimuth"}}})],M.prototype,"azimuth",void 0),l([r({json:{read:{source:"attributes.BranchName"}}})],M.prototype,"branchName",void 0),l([r({type:d.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:d.read}}})],M.prototype,"directionPointType",void 0),l([r({json:{read:{source:"attributes.DisplayText"}}})],M.prototype,"displayText",void 0),l([r({json:{read:{source:"attributes.ExitName"}}})],M.prototype,"exitName",void 0),l([r({type:m})],M.prototype,"geometry",void 0),l([r({json:{read:{source:"attributes.IntersectingName"}}})],M.prototype,"intersectingName",void 0),l([r({json:{read:{source:"attributes.Level"}}})],M.prototype,"level",void 0),l([r({json:{read:{source:"attributes.Name"}}})],M.prototype,"name",void 0),l([r({json:{read:{source:"attributes.ObjectID"}}})],M.prototype,"objectId",void 0),l([r({type:n})],M.prototype,"popupTemplate",void 0),l([r({json:{read:{source:"attributes.Sequence"}}})],M.prototype,"sequence",void 0),l([r({json:{read:{source:"attributes.ShortVoiceInstruction"}}})],M.prototype,"shortVoiceInstruction",void 0),l([r({json:{read:{source:"attributes.StopID"}}})],M.prototype,"stopId",void 0),l([r({types:o})],M.prototype,"symbol",void 0),l([r({json:{read:{source:"attributes.TowardName"}}})],M.prototype,"towardName",void 0),l([r({readOnly:!0,json:{read:!1}})],M.prototype,"type",void 0),l([r({json:{read:{source:"attributes.VoiceInstruction"}}})],M.prototype,"voiceInstruction",void 0),M=W=l([u("esri.rest.support.DirectionPoint")],M);const E=M;var L;let B=L=class extends(e(t)){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,t){return c(t.attributes,"Attr_")}writeCosts(e,t){h(e,t,"Attr_")}static fromGraphic(e){return new L({addedCost:e.attributes.AddedCost??null,barrierType:null!=e.attributes.BarrierType?y.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?T(JSON.parse(e.attributes.Costs)):null,curbApproach:null!=e.attributes.CurbApproach?v.fromJSON(e.attributes.CurbApproach):null,fullEdge:null!=e.attributes.FullEdge?b.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:null!=e.attributes.Status?D.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:null!=this.barrierType?y.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(S(this.costs)):null,CurbApproach:null!=this.curbApproach?v.toJSON(this.curbApproach):null,FullEdge:null!=this.fullEdge?b.toJSON(this.fullEdge):null,Name:this.name,Status:null!=this.status?D.toJSON(this.status):null};return new s({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};B.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"}],l([r()],B.prototype,"addedCost",void 0),l([r({type:y.apiValues,json:{name:"attributes.BarrierType",read:{reader:y.read},write:{writer:y.write}}})],B.prototype,"barrierType",void 0),l([r()],B.prototype,"costs",void 0),l([p("costs",["attributes"])],B.prototype,"readCosts",null),l([j("costs")],B.prototype,"writeCosts",null),l([r({constructOnly:!0,type:v.apiValues,json:{read:{source:"attributes.CurbApproach",reader:v.read}}})],B.prototype,"curbApproach",void 0),l([r({type:b.apiValues,json:{name:"attributes.FullEdge",read:{reader:b.read},write:{writer:b.write}}})],B.prototype,"fullEdge",void 0),l([r({type:m,json:{write:!0}})],B.prototype,"geometry",void 0),l([r({json:{name:"attributes.Name"}})],B.prototype,"name",void 0),l([r({json:{name:"attributes.ObjectID"}})],B.prototype,"objectId",void 0),l([r({type:n})],B.prototype,"popupTemplate",void 0),l([r({type:I.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:I.read}}})],B.prototype,"sideOfEdge",void 0),l([r({json:{read:{source:"attributes.SourceID"}}})],B.prototype,"sourceId",void 0),l([r({json:{read:{source:"attributes.SourceOID"}}})],B.prototype,"sourceOid",void 0),l([r({type:D.apiValues,json:{read:{source:"attributes.Status",reader:D.read}}})],B.prototype,"status",void 0),l([r({types:o})],B.prototype,"symbol",void 0),l([r({readOnly:!0,json:{read:!1}})],B.prototype,"type",void 0),B=L=l([u("esri.rest.support.PointBarrier")],B);const U=B;var x;let k=x=class extends(e(t)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(e,t){return c(t.attributes,"Attr_")}writeCosts(e,t){h(e,t,"Attr_")}static fromGraphic(e){return new x({barrierType:null!=e.attributes.BarrierType?y.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?T(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:null!=this.barrierType?y.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(S(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new s({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};k.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],l([r({type:y.apiValues,json:{name:"attributes.BarrierType",read:{reader:y.read},write:{writer:y.write}}})],k.prototype,"barrierType",void 0),l([r()],k.prototype,"costs",void 0),l([p("costs",["attributes"])],k.prototype,"readCosts",null),l([j("costs")],k.prototype,"writeCosts",null),l([r({type:O,json:{write:!0}})],k.prototype,"geometry",void 0),l([r({json:{name:"attributes.Name"}})],k.prototype,"name",void 0),l([r({json:{name:"attributes.ObjectID"}})],k.prototype,"objectId",void 0),l([r({type:n})],k.prototype,"popupTemplate",void 0),l([r()],k.prototype,"scaleFactor",void 0),l([r({types:o})],k.prototype,"symbol",void 0),l([r({readOnly:!0,json:{read:!1}})],k.prototype,"type",void 0),k=x=l([u("esri.rest.support.PolygonBarrier")],k);const V=k;var P;let J=P=class extends(e(t)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(e,t){return c(t.attributes,"Attr_")}static fromGraphic(e){return new P({barrierType:null!=e.attributes.BarrierType?y.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?T(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:null!=this.barrierType?y.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(S(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new s({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};J.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],l([r({type:y.apiValues,json:{read:{source:"attributes.BarrierType",reader:y.read}}})],J.prototype,"barrierType",void 0),l([r()],J.prototype,"costs",void 0),l([p("costs",["attributes"])],J.prototype,"readCosts",null),l([r({type:a,json:{write:!0}})],J.prototype,"geometry",void 0),l([r({json:{name:"attributes.Name"}})],J.prototype,"name",void 0),l([r({json:{name:"attributes.ObjectID"}})],J.prototype,"objectId",void 0),l([r({type:n})],J.prototype,"popupTemplate",void 0),l([r()],J.prototype,"scaleFactor",void 0),l([r({types:o})],J.prototype,"symbol",void 0),l([r({readOnly:!0,json:{read:!1}})],J.prototype,"type",void 0),J=P=l([u("esri.rest.support.PolylineBarrier")],J);const q=J;let G=class extends t{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(e){return null==e?null:e.map((e=>g.fromJSON(e)))}writeAccumulateAttributes(e,t,i){e?.length&&(t[i]=e.map((e=>g.toJSON(e))))}};l([r({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],G.prototype,"accumulateAttributes",void 0),l([p("accumulateAttributes")],G.prototype,"readAccumulateAttributes",null),l([j("accumulateAttributes")],G.prototype,"writeAccumulateAttributes",null),l([r({type:String,json:{write:!0}})],G.prototype,"directionsLanguage",void 0),l([r({type:Boolean,json:{write:!0}})],G.prototype,"findBestSequence",void 0),l([r({type:Boolean,json:{write:!0}})],G.prototype,"preserveFirstStop",void 0),l([r({type:Boolean,json:{write:!0}})],G.prototype,"preserveLastStop",void 0),l([r({type:Boolean,json:{write:!0}})],G.prototype,"startTimeIsUTC",void 0),l([r({type:Boolean,json:{write:!0}})],G.prototype,"timeWindowsAreUTC",void 0),l([r({type:f,json:{write:!0}})],G.prototype,"travelMode",void 0),G=l([u("esri.rest.support.RouteSettings")],G);const _=G;var R;let z=R=class extends(e(t)){constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(e,t){return null!=t.attributes.EndTimeUTC?new Date(t.attributes.EndTimeUTC):null}readEndTimeOffset(e,t){return C(t.attributes.EndTime,t.attributes.EndTimeUTC)}readStartTime(e,t){return null!=t.attributes.StartTimeUTC?new Date(t.attributes.StartTimeUTC):null}readStartTimeOffset(e,t){return C(t.attributes.StartTime,t.attributes.StartTimeUTC)}readTotalCosts(e,t){return c(t.attributes,"Total_")}readTotalViolations(e,t){return c(t.attributes,"TotalViolation_")}readTotalWait(e,t){return c(t.attributes,"TotalWait_")}static fromGraphic(e){return new R({analysisSettings:null!=e.attributes.AnalysisSettings?_.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:null!=e.attributes.EndTime?new Date(e.attributes.EndTime):null,endTimeOffset:e.attributes.EndUTCOffset??null,geometry:e.geometry,messages:null!=e.attributes.Messages?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,startTime:null!=e.attributes.StartTime?new Date(e.attributes.StartTime):null,startTimeOffset:e.attributes.StartUTCOffset??null,symbol:e.symbol,totalCosts:null!=e.attributes.TotalCosts?T(JSON.parse(e.attributes.TotalCosts)):null,totalDistance:e.attributes.TotalMeters??null,totalDuration:e.attributes.TotalMinutes??null,totalLateDuration:e.attributes.TotalLateMinutes??null,totalWaitDuration:e.attributes.TotalWaitMinutes??null,version:e.attributes.Version})}toGraphic(){const e={ObjectID:this.objectId,AnalysisSettings:null!=this.analysisSettings?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:null!=this.endTime?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:null!=this.messages?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:null!=this.startTime?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:null!=this.totalCosts?JSON.stringify(S(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new s({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};z.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString"},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate"},{name:"EndUTCOffset",alias:"End Time Offset",type:"esriFieldTypeInteger"},{name:"Messages",alias:"Messages",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate"},{name:"StartUTCOffset",alias:"Start Time Offset",type:"esriFieldTypeInteger"},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString"},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble"},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble"},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble"},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble"},{name:"Version",alias:"Version",type:"esriFieldTypeString"}],l([r()],z.prototype,"analysisSettings",void 0),l([r()],z.prototype,"endTime",void 0),l([p("endTime",["attributes.EndTimeUTC"])],z.prototype,"readEndTime",null),l([r()],z.prototype,"endTimeOffset",void 0),l([p("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],z.prototype,"readEndTimeOffset",null),l([r({json:{read:{source:"attributes.FirstStopID"}}})],z.prototype,"firstStopId",void 0),l([r({type:a})],z.prototype,"geometry",void 0),l([r({json:{read:{source:"attributes.LastStopID"}}})],z.prototype,"lastStopId",void 0),l([r()],z.prototype,"messages",void 0),l([r({json:{read:{source:"attributes.Name"}}})],z.prototype,"name",void 0),l([r({json:{read:{source:"attributes.ObjectID"}}})],z.prototype,"objectId",void 0),l([r({type:n})],z.prototype,"popupTemplate",void 0),l([r()],z.prototype,"startTime",void 0),l([p("startTime",["attributes.StartTimeUTC"])],z.prototype,"readStartTime",null),l([r()],z.prototype,"startTimeOffset",void 0),l([p("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],z.prototype,"readStartTimeOffset",null),l([r({json:{read:{source:"attributes.StopCount"}}})],z.prototype,"stopCount",void 0),l([r({types:o})],z.prototype,"symbol",void 0),l([r()],z.prototype,"totalCosts",void 0),l([p("totalCosts",["attributes"])],z.prototype,"readTotalCosts",null),l([r()],z.prototype,"totalDistance",void 0),l([r()],z.prototype,"totalDuration",void 0),l([r()],z.prototype,"totalLateDuration",void 0),l([r()],z.prototype,"totalViolations",void 0),l([p("totalViolations",["attributes"])],z.prototype,"readTotalViolations",null),l([r()],z.prototype,"totalWait",void 0),l([p("totalWait",["attributes"])],z.prototype,"readTotalWait",null),l([r()],z.prototype,"totalWaitDuration",void 0),l([r({readOnly:!0,json:{read:!1}})],z.prototype,"type",void 0),l([r()],z.prototype,"version",void 0),z=R=l([u("esri.rest.support.RouteInfo")],z);const Y=z;var X;let Z=X=class extends(e(t)){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,t){return C(t.attributes.ArriveTime,t.attributes.ArriveTimeUTC)}readCumulativeCosts(e,t){return c(t.attributes,"Cumul_")}readDepartTimeOffset(e,t){return C(t.attributes.DepartTime,t.attributes.DepartTimeUTC)}readServiceCosts(e,t){return c(t.attributes,"Attr_")}writeServiceCosts(e,t){h(e,t,"Attr_")}writeTimeWindowEnd(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowStart=e.getTime())}readViolations(e,t){return c(t.attributes,"Violation_")}readWait(e,t){return c(t.attributes,"Wait_")}static fromGraphic(e){return new X({arriveCurbApproach:null!=e.attributes.ArrivalCurbApproach?v.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:null!=e.attributes.ArrivalTime?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:null!=e.attributes.CumulativeCosts?T(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:e.attributes.CumulativeMeters??null,cumulativeDuration:e.attributes.CumulativeMinutes??null,curbApproach:null!=e.attributes.CurbApproach?v.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:null!=e.attributes.DepartureCurbApproach?v.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:null!=e.attributes.DepartureTime?new Date(e.attributes.DepartureTime):null,departTimeOffset:e.attributes.DepartureUTCOffset??null,geometry:e.geometry,lateDuration:e.attributes.LateMinutes??null,locationType:null!=e.attributes.LocationType?w.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:e.attributes.Sequence??null,serviceCosts:null!=e.attributes.ServiceCosts?T(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:e.attributes.ServiceMeters??null,serviceDuration:e.attributes.ServiceMinutes??null,status:null!=e.attributes.Status?D.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:null!=e.attributes.TimeWindowEnd?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:e.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:null!=e.attributes.TimeWindowStart?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:e.attributes.TimeWindowStartUTCOffset??null,waitDuration:e.attributes.WaitMinutes??null})}toGraphic(){const e={ObjectID:this.objectId,ArrivalCurbApproach:null!=this.arriveCurbApproach?v.toJSON(this.arriveCurbApproach):null,ArrivalTime:null!=this.arriveTime?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:null!=this.cumulativeCosts?JSON.stringify(S(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:null!=this.curbApproach?v.toJSON(this.curbApproach):null,DepartureCurbApproach:null!=this.departCurbApproach?v.toJSON(this.departCurbApproach):null,DepartureTime:null!=this.departTime?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:null!=this.locationType?w.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:null!=this.serviceCosts?JSON.stringify(S(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:null!=this.status?D.toJSON(this.status):null,TimeWindowEnd:null!=this.timeWindowEnd?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:null!=this.timeWindowStart?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new s({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};Z.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time",type:"esriFieldTypeInteger"},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString"},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble"},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate"},{name:"DepartureUTCOffset",alias:"Departure Time",type:"esriFieldTypeInteger"},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble"},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString"},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble"},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate"},{name:"TimeWindowEndUTCOffset",alias:"Time Window End Offset",type:"esriFieldTypeInteger"},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate"},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start Offset",type:"esriFieldTypeInteger"},{name:"WaitMinutes",alias:"Minutes Wait",type:"esriFieldTypeDouble"}],l([r({type:v.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:v.read}}})],Z.prototype,"arriveCurbApproach",void 0),l([r({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],Z.prototype,"arriveTime",void 0),l([r()],Z.prototype,"arriveTimeOffset",void 0),l([p("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],Z.prototype,"readArriveTimeOffset",null),l([r({json:{name:"attributes.Bearing",read:!1,write:!0}})],Z.prototype,"bearing",void 0),l([r({json:{name:"attributes.BearingTol",read:!1,write:!0}})],Z.prototype,"bearingTol",void 0),l([r()],Z.prototype,"cumulativeCosts",void 0),l([p("cumulativeCosts",["attributes"])],Z.prototype,"readCumulativeCosts",null),l([r()],Z.prototype,"cumulativeDistance",void 0),l([r()],Z.prototype,"cumulativeDuration",void 0),l([r({type:v.apiValues,json:{name:"attributes.CurbApproach",read:{reader:v.read},write:{writer:v.write}}})],Z.prototype,"curbApproach",void 0),l([r({type:v.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:v.read}}})],Z.prototype,"departCurbApproach",void 0),l([r({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],Z.prototype,"departTime",void 0),l([r()],Z.prototype,"departTimeOffset",void 0),l([p("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],Z.prototype,"readDepartTimeOffset",null),l([r({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],Z.prototype,"distanceToNetworkInMeters",void 0),l([r({type:m,json:{write:!0}})],Z.prototype,"geometry",void 0),l([r()],Z.prototype,"lateDuration",void 0),l([r({type:w.apiValues,json:{name:"attributes.LocationType",read:{reader:w.read},write:{writer:w.write}}})],Z.prototype,"locationType",void 0),l([r({json:{name:"attributes.Name"}})],Z.prototype,"name",void 0),l([r({json:{name:"attributes.NavLatency",read:!1,write:!0}})],Z.prototype,"navLatency",void 0),l([r({json:{name:"attributes.ObjectID"}})],Z.prototype,"objectId",void 0),l([r({type:n})],Z.prototype,"popupTemplate",void 0),l([r({json:{read:{source:"attributes.PosAlong"}}})],Z.prototype,"posAlong",void 0),l([r({json:{name:"attributes.RouteName"}})],Z.prototype,"routeName",void 0),l([r()],Z.prototype,"serviceCosts",void 0),l([p("serviceCosts",["attributes"])],Z.prototype,"readServiceCosts",null),l([j("serviceCosts")],Z.prototype,"writeServiceCosts",null),l([r()],Z.prototype,"serviceDistance",void 0),l([r()],Z.prototype,"serviceDuration",void 0),l([r({json:{name:"attributes.Sequence"}})],Z.prototype,"sequence",void 0),l([r({type:I.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:I.read}}})],Z.prototype,"sideOfEdge",void 0),l([r({json:{read:{source:"attributes.SnapX"}}})],Z.prototype,"snapX",void 0),l([r({json:{read:{source:"attributes.SnapY"}}})],Z.prototype,"snapY",void 0),l([r({json:{read:{source:"attributes.SnapZ"}}})],Z.prototype,"snapZ",void 0),l([r({json:{read:{source:"attributes.SourceID"}}})],Z.prototype,"sourceId",void 0),l([r({json:{read:{source:"attributes.SourceOID"}}})],Z.prototype,"sourceOid",void 0),l([r({type:D.apiValues,json:{read:{source:"attributes.Status",reader:D.read}}})],Z.prototype,"status",void 0),l([r({types:o})],Z.prototype,"symbol",void 0),l([r({type:Date,json:{name:"attributes.TimeWindowEnd"}})],Z.prototype,"timeWindowEnd",void 0),l([j("timeWindowEnd")],Z.prototype,"writeTimeWindowEnd",null),l([r()],Z.prototype,"timeWindowEndOffset",void 0),l([r({type:Date,json:{name:"attributes.TimeWindowStart"}})],Z.prototype,"timeWindowStart",void 0),l([j("timeWindowStart")],Z.prototype,"writeTimeWindowStart",null),l([r()],Z.prototype,"timeWindowStartOffset",void 0),l([r({readOnly:!0,json:{read:!1}})],Z.prototype,"type",void 0),l([r()],Z.prototype,"violations",void 0),l([p("violations",["attributes"])],Z.prototype,"readViolations",null),l([r()],Z.prototype,"waitDuration",void 0),l([r()],Z.prototype,"wait",void 0),l([p("wait",["attributes"])],Z.prototype,"readWait",null),Z=X=l([u("esri.rest.support.Stop")],Z);const H=Z;export{U as C,Y as S,V as T,_ as a,N as c,q as j,H as w,E as y};
//# sourceMappingURL=p-8e63cf87.js.map