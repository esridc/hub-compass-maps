import{an as e,ao as t,ap as n,y as s,a as i,dN as o,gm as r,s as c,bm as a,Z as h,U as l,b$ as u,b_ as d,bt as f}from"./p-3013819f.js";import{c as p}from"./p-71d25f62.js";import"./p-3b51db5e.js";import"./p-a71453e3.js";import"./p-ad726e47.js";import"./p-94b15954.js";import"./p-1f0b604e.js";import"./p-347800d3.js";let w=class extends s.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new i("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};e([t({readOnly:!0})],w.prototype,"connectionError",null),w=e([n("esri.layers.support.StreamConnection")],w);const y=w;var m;!function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"}(m||(m={}));let g=class extends y{constructor(e){super({}),this._outstandingMessages=[],this.errorString=null;const{geometryType:t,spatialReference:n,sourceSpatialReference:s}=e;this._config=e,this._featureZScaler=o(t,s,n),this._open()}normalizeCtorArgs(){return{}}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),null!=this._websocket&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(null==this._websocket)return"disconnected";switch(this._websocket.readyState){case m.CONNECTING:case m.OPEN:return"connected";case m.CLOSING:case m.CLOSED:return"disconnected"}}sendMessageToSocket(e){null!=this._websocket?this._websocket.send(JSON.stringify(e)):this._outstandingMessages.push(e)}sendMessageToClient(e){this._onMessage(e)}updateCustomParameters(e){this._config.customParameters=e,null!=this._websocket&&this._websocket.close()}async _tryCreateWebSocket(e=this._config.source.path,t=1e3,n=0){try{if(this.destroyed)return;const t=r(e,this._config.customParameters??{});this._websocket=await this._createWebSocket(t),this.notifyChange("connectionStatus")}catch(s){const o=t/1e3;return this._config.maxReconnectionAttempts&&n>=this._config.maxReconnectionAttempts?(c.getLogger(this).error(new i("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(c.getLogger(this).error(new i("websocket-connection",`Failed to connect. Attempting to reconnect in ${o}s`,s)),await a(t),this._tryCreateWebSocket(e,Math.min(1.5*t,1e3*this._config.maxReconnectionInterval),n+1))}}_setWebSocketJSONParseHandler(e){e.onmessage=e=>{try{const t=JSON.parse(e.data);this._onMessage(t)}catch(e){return void c.getLogger(this).error(new i("websocket-connection","Failed to parse message, invalid JSON",{error:e}))}}}_createWebSocket(e){return new Promise(((t,n)=>{const s=new WebSocket(e);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=e=>this._onClose(e),s.onerror=e=>this._onError(e),this._setWebSocketJSONParseHandler(s),t(s)},s.onclose=e=>{s.onopen=s.onclose=null,n(e)}}))}async _handshake(e=1e4){const t=this._websocket;if(null==t)return;const n=h(),s=t.onmessage,{filter:o,outFields:r,spatialReference:a}=this._config;return n.timeout(e),t.onmessage=e=>{let h=null;try{h=JSON.parse(e.data)}catch(e){}h&&"object"==typeof h||(c.getLogger(this).error(new i("websocket-connection","Protocol violation. Handshake failed - malformed message",e.data)),n.reject(),this.destroy()),h.spatialReference?.wkid!==a?.wkid&&(c.getLogger(this).error(new i("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${a.wkid}`,e.data)),n.reject(),this.destroy()),"json"!==h.format&&(c.getLogger(this).error(new i("websocket-connection","Protocol violation. Handshake failed - format is not set",e.data)),n.reject(),this.destroy()),o&&h.filter!==o&&c.getLogger(this).error(new i("websocket-connection","Tried to set filter, but server doesn't support it")),r&&h.outFields!==r&&c.getLogger(this).error(new i("websocket-connection","Tried to set outFields, but server doesn't support it")),t.onmessage=s;for(const e of this._outstandingMessages)t.send(JSON.stringify(e));this._outstandingMessages=[],n.resolve()},t.send(JSON.stringify({filter:o,outFields:r,format:"json",spatialReference:{wkid:a.wkid}})),n.promise}_onMessage(e){if(this.onMessage(e),"type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)null!=this._featureZScaler&&this._featureZScaler(t.geometry),this.onFeature(t)}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),c.getLogger(this).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),1e3!==e.code&&c.getLogger(this).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}};e([t()],g.prototype,"connectionStatus",null),e([t()],g.prototype,"errorString",void 0),g=e([n("esri.layers.graphics.sources.connections.WebSocketConnection")],g);const b=1e4,S={maxQueryDepth:5,maxRecordCountFactor:3};let v=class extends g{constructor(e){super({...S,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||c.getLogger(this).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:n,outFields:s}=this._config;this.destroyed||this._setFilter(n,s)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),null!=this._featureZScaler&&this._featureZScaler(t.geometry)}catch(e){return void c.getLogger(this).error(new i("geoevent-connection","Failed to parse message",e))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},n=l(e.path,{query:t,responseType:"json"}),s=(await n).data;return this._serviceDefinition=s,s}_fetchWebSocketUrl(e,t){const n=e[0],{urls:s,token:i}=n,o=this._inferWebSocketBaseUrl(s);return r(`${o}/subscribe`,{outSR:""+t.wkid,token:i})}_inferWebSocketBaseUrl(e){if(1===e.length)return e[0];for(const t of e)if(t.includes("wss"))return t;return c.getLogger(this).error(new i("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const n=this._websocket;if(null==n||null==e&&null==t)return;const s=JSON.stringify({filter:this._serializeFilter(e,t)});let o=!1;const r=h(),a=()=>{o||(this.destroyed||this._websocket!==n||c.getLogger(this).error(new i("geoevent-connection","Server timed out when setting filter")),r.reject())},l=e=>{const t=JSON.parse(e.data);t.filter&&(t.error&&(c.getLogger(this).error(new i("geoevent-connection","Failed to set service filter",t.error)),this._set("errorString",`Could not set service filter - ${t.error}`),r.reject(t.error)),this._setWebSocketJSONParseHandler(n),o=!0,r.resolve())};return n.onmessage=l,n.send(s),setTimeout(a,b),r.promise}_serializeFilter(e,t){const n={};if(null==e&&null==t)return n;if(e?.geometry)try{const t=u(e.geometry);if("extent"!==t.type)throw new i(`Expected extent but found type ${t.type}`);n.geometry=JSON.stringify(t.shiftCentralMeridian())}catch(e){c.getLogger(this).error(new i("geoevent-connection","Encountered an error when setting connection geometryDefinition",e))}return e?.where&&"1 = 1"!==e.where&&"1=1"!==e.where&&(n.where=e.where),null!=t&&(n.outFields=t.join(",")),n}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,n=e.attributes[t],s=this._relatedFeatures.get(n);if(!s)return c.getLogger(this).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:o,geometry:r}=s;for(const t in o)e.attributes[t]=o[t];return r&&(e.geometry=r),e.geometry||e.centroid||c.getLogger(this).error(new i("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,n=this._queryRelatedFeatures(e),s=this._queryArchive(t);await n;const i=await s;if(!i)return;for(const e of i.features)this.onFeature(this._enrich(e))}catch(e){c.getLogger(this).error(new i("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new((await import("./p-3013819f.js").then((function(e){return e.o6}))).default)({url:e}),{capabilities:n}=await t.load(),s=n.query.supportsMaxRecordCountFactor,i=n.query.supportsPagination,o=n.query.supportsCentroid,r=this._config.maxRecordCountFactor,c=t.capabilities.query.maxRecordCount,a=s?c*r:c,h=new d;if(h.outFields=this._config.outFields??["*"],h.where=this._config.filter?.where??"1=1",h.returnGeometry=!0,h.returnExceededLimitFeatures=!0,h.outSpatialReference=f.fromJSON(this._config.spatialReference),o&&(h.returnCentroid=!0),s&&(h.maxRecordCountFactor=r),i)return h.num=a,t.destroy(),this._queryPages(e,h);const l=await p(e,h,this._config.sourceSpatialReference);return t.destroy(),l.data}async _queryPages(e,t,n=[],s=0){t.start=null!=t.num?s*t.num:null;const{data:i}=await p(e,t,this._config.sourceSpatialReference);return i.exceededTransferLimit&&s<(this._config.maxQueryDepth??0)?(i.features.forEach((e=>n.push(e))),this._queryPages(e,t,n,s+1)):(n.forEach((e=>i.features.push(e))),i)}_addRelatedFeatures(e){const t=new Map,n=e.features,s=this._serviceDefinition.relatedFeatures.joinField;for(const e of n){const n=e.attributes[s];t.set(n,e)}this._relatedFeatures=t}};v=e([n("esri.layers.graphics.sources.connections.GeoEventConnection")],v);const k=v;let _=class extends y{constructor(e){super({}),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:n,sourceSpatialReference:s}=e;this._featureZScaler=o(t,s,n)}normalizeCtorArgs(){return{}}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)null!=this._featureZScaler&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};e([t()],_.prototype,"connectionStatus",void 0),e([t()],_.prototype,"errorString",void 0),_=e([n("esri.layers.support.ClientSideConnection")],_);function C(e,t){if(null==e&&null==t)return null;const n={};return null!=t&&(n.geometry=t),null!=e&&(n.where=e),n}function F(e,t,n,s,i,o,r,c,a){const h={source:e,sourceSpatialReference:t,spatialReference:n,geometryType:s,filter:C(i,o),maxReconnectionAttempts:r,maxReconnectionInterval:c,customParameters:a};if(!e)return new _(h);return e.path.startsWith("wss://")||e.path.startsWith("ws://")?new g(h):new k(h)}export{F as createConnection};
//# sourceMappingURL=p-d9bcd2a2.js.map