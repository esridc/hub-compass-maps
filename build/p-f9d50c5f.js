import{h as e}from"./p-3013819f.js";import{u as t}from"./p-894e6a6a.js";class n{constructor(e){this.data=e,this.type="encoded-mesh-texture",this.encoding=t.KTX2_ENCODING}}function r(e){return"encoded-mesh-texture"===e?.type}async function o(e){const t=new Blob([e]),n=await t.text();return JSON.parse(n)}async function s(r,o){if(o===t.KTX2_ENCODING)return new n(r);const s=new Blob([r],{type:o}),c=URL.createObjectURL(s),i=new Image;if(e("esri-iPhone"))return new Promise(((e,t)=>{const n=()=>{o(),e(i)},r=e=>{o(),t(e)},o=()=>{URL.revokeObjectURL(c),i.removeEventListener("load",n),i.removeEventListener("error",r)};i.addEventListener("load",n),i.addEventListener("error",r),i.src=c}));try{i.src=c,await i.decode()}catch(e){console.warn("Failed decoding HTMLImageElement")}return URL.revokeObjectURL(c),i}export{o as n,s as o,r,n as t};
//# sourceMappingURL=p-f9d50c5f.js.map