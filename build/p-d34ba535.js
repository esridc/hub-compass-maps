import{s as t,a3 as s,eM as e,lv as i,d$ as a,n as r,nj as o,j as n,di as h}from"./p-aad64c9f.js";import{o as c,r as p}from"./p-875cbb57.js";import{m as u}from"./p-339b5e24.js";import{x as l,j as m}from"./p-e3657bc3.js";import{V as d}from"./p-02236077.js";import{E as f,N as y}from"./p-07f1865a.js";import{p as w}from"./p-512046c6.js";import{o as j,e as g,K as b}from"./p-d7feeb63.js";import"./p-2af77f97.js";import"./p-da522976.js";import"./p-aff89b86.js";import"./p-d492d39b.js";import"./p-56b85bad.js";import"./p-5ae33da2.js";import"./p-1c285990.js";import"./p-e2849960.js";import"./p-bac7b09c.js";import"./p-cea3971b.js";import"./p-4295487d.js";import"./p-1317d6d9.js";import"./p-bdd45e95.js";import"./p-ca379176.js";import"./p-85c76b3c.js";import"./p-49632661.js";import"./p-0befabd0.js";const x="esri.layers.WFSLayer";class C{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(a,r={}){const{getFeatureUrl:o,getFeatureOutputFormat:n,fields:h,geometryType:c,featureType:p,maxRecordCount:m,maxTotalRecordCount:f,maxPageCount:y,objectIdField:w,customParameters:g}=a,{spatialReference:b,getFeatureSpatialReference:x}=j(o,p,a.spatialReference);try{await l(x,b)}catch{throw new t("unsupported-projection","Projection not supported",{inSpatialReference:x,outSpatialReference:b})}s(r),this._customParameters=g,this._featureType=p,this._fieldsIndex=e.fromLayerJSON({fields:h,dateFieldsTimeReference:h.some((t=>"esriFieldTypeDate"===t.type))?{timeZoneIANA:i}:null}),this._geometryType=c,this._getFeatureUrl=o,this._getFeatureOutputFormat=n,this._getFeatureSpatialReference=x,this._maxRecordCount=m,this._maxTotalRecordCount=f,this._maxPageCount=y,this._objectIdField=w,this._spatialReference=b;let C=await this._snapshotFeatures(r);if(C.errors.length>0&&(this._supportsPagination=!1,C=await this._snapshotFeatures(r),C.errors.length>0))throw C.errors[0];return this._queryEngine=new d({fieldsIndex:this._fieldsIndex,geometryType:c,hasM:!1,hasZ:!1,objectIdField:w,spatialReference:b,timeInfo:null,featureStore:new u({geometryType:c,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(C.features),{warnings:T(C),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new t("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,s.signal)}async queryFeatureCount(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,s.signal)}async queryObjectIds(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,s.signal)}async queryExtent(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,s.signal)}async querySnapping(t,s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,s.signal)}async refresh(t){return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=a((t=>this._snapshotFeatures({signal:t}))),this._snapshotTask.promise.then((t=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(t.features);for(const s of T(t))r.getLogger(x).warn(new o("wfs-layer:refresh-warning",s.message,s.details));t.errors?.length&&r.getLogger(x).warn(new o("wfs-layer:refresh-error","Refresh completed with errors",{errors:t.errors}))}),(()=>{this._queryEngine.featureStore.clear()})),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t?.signal,i=this._maxTotalRecordCount,a=this._maxPageCount,r=this._supportsPagination?await g(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let o=[];const n=[];if(null==r)try{o=await this._singleQuery(e)}catch(t){h(t)||n.push(t)}else{const t=Math.min(r,i),s=R(this,Math.max(1,Math.min(Math.ceil(t/this._maxRecordCount),a)),e);await Promise.allSettled(Array.from({length:10}).map((()=>F(s,o,n))))}return s(e),{features:o,totalRecordCount:r,maxTotalRecordCount:i,maxPageCount:a,errors:n}}async _singleQuery(t){const s=await b(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:t});return this._processGeoJSON(s,{signal:t})}async _pageQuery(t,s){const e=t*this._maxRecordCount,i=await b(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:e,count:this._maxRecordCount,signal:s});return this._processGeoJSON(i,{startIndex:e,signal:s})}_processGeoJSON(t,e){f(t,this._getFeatureSpatialReference.wkid);const{startIndex:i,signal:a}=e;s(a);const r=y(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!n(this._spatialReference,this._getFeatureSpatialReference))for(const t of r)null!=t.geometry&&(t.geometry=c(m(p(t.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let o=i??1;for(const t of r){const s={};w(this._fieldsIndex,s,t.attributes,!0),t.attributes=s,null==s[this._objectIdField]&&(t.objectId=s[this._objectIdField]=o++)}return r}}function*R(t,s,e){for(let i=0;i<s;i++)yield t._pageQuery(i,e)}async function F(t,s,e){let i=t.next();for(;!i.done;){try{const t=await i.value;s.push(...t)}catch(t){h(t)||e.push(t)}i=t.next()}}function T(t){const s=[];return null!=t.totalRecordCount&&(t.features.length<t.totalRecordCount&&s.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${t.features.length} of ${t.totalRecordCount} in ${t.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:t.features.length,totalRecordCount:t.totalRecordCount}}),t.totalRecordCount>t.maxTotalRecordCount&&s.push({name:"wfs-layer:large-dataset",message:`The number of ${t.totalRecordCount} features exceeds the maximum allowed of ${t.maxTotalRecordCount}.`,details:{recordCount:t.features.length,totalRecordCount:t.totalRecordCount,maxTotalRecordCount:t.maxTotalRecordCount}})),s}export default C;
//# sourceMappingURL=p-d34ba535.js.map