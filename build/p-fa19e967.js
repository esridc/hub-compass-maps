import{r as s,p as o,q as t,_ as e,a8 as i,hu as n,U as r,hv as a}from"./p-aad64c9f.js";import{d as c}from"./p-d6ce3d70.js";import"./p-2af77f97.js";let p=class extends e{constructor(s){super(s),this.maxGeometryCountExceeded=!1,this.associations=[]}};s([o({type:Boolean,json:{write:!0}})],p.prototype,"maxGeometryCountExceeded",void 0),s([o({type:[c],json:{write:!0}})],p.prototype,"associations",void 0),p=s([t("esri.rest.networks.support.AssociationGeometriesResult")],p);const f=p;async function m(s,o,t){const e=i(s),c={...o.toJSON(),f:"json"},p=n({...e.query,...c});t?t.method="post":t={method:"post"};const f=a(p,t),m=`${e.path}/synthesizeAssociationGeometries`;return r(m,f).then((s=>d(s,o.outSpatialReference)))}function d(s,o){const{data:t}=s;if(o)for(const s of t.associations)s.geometry.spatialReference||(s.geometry.spatialReference=o.clone());return f.fromJSON(t)}export{m as synthesizeAssociationGeometries};
//# sourceMappingURL=p-fa19e967.js.map