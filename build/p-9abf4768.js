import{an as e,ao as t,aN as s,fv as i,ap as r,dG as a,cp as o,k6 as n,lC as p,g as l,kZ as h,dK as c,c_ as d,U as y,hq as u,hr as m,hs as f,h1 as v,ht as g,kz as w,kA as b,fa as j,ec as S,lD as I,du as x,a as M,s as T,fx as L,kE as O,f7 as N}from"./p-3013819f.js";import{j as k}from"./p-253c68bc.js";import{L as D,P as K}from"./p-d6176718.js";import{s as V,l as _,u as z,m as A}from"./p-b2c2432c.js";import{I as G,x as C,Z as E}from"./p-01c01bc2.js";import"./p-3b51db5e.js";import"./p-8be499c9.js";import"./p-933bb056.js";import"./p-055b59cb.js";import"./p-52a3c31d.js";import"./p-a76822de.js";import"./p-5f878e96.js";import"./p-897087fa.js";var J;let P=J=class extends a{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,t,i,r){if(r.layer?.spatialReference&&!r.layer.spatialReference.equals(this.geometry.spatialReference)){if(!o(e.spatialReference,r.layer.spatialReference))return void(r?.messages&&r.messages.push(new n("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:r.layer.spatialReference,context:r})));const a=new s;p(e,a,r.layer.spatialReference),t[i]=a.toJSON(r)}else t[i]=e.toJSON(r);delete t[i].spatialReference}clone(){return new J({geometry:l(this.geometry),type:this.type})}};e([t({type:s}),k()],P.prototype,"geometry",void 0),e([i(["web-scene","portal-item"],"geometry")],P.prototype,"writeGeometry",null),e([t({type:["clip","mask","replace"],nonNullable:!0}),k()],P.prototype,"type",void 0),P=J=e([r("esri.layers.support.SceneModification")],P);const R=P;var U;let q=U=class extends(h(c.ofType(R))){constructor(e){super(e),this.url=null}clone(){return new U({url:this.url,items:this.items.map((e=>e.clone()))})}toJSON(e){return this.toArray().map((t=>t.toJSON(e))).filter((e=>!!e.geometry))}static fromJSON(e,t){const s=new U;for(const i of e)s.add(R.fromJSON(i,t));return s}static async fromUrl(e,t,s){const i={url:d(e),origin:"service"},r=await y(e,{responseType:"json",signal:s?.signal}),a=t.toJSON(),o=[];for(const e of r.data)o.push(R.fromJSON({...e,geometry:{...e.geometry,spatialReference:a}},i));return new U({url:e,items:o})}};e([t({type:String})],q.prototype,"url",void 0),q=U=e([r("esri.layers.support.SceneModifications")],q);const Z=q;let B=class extends(D(u(m(f(v(g(w(b(j))))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null}initialize(){this.addHandles(S((()=>this.modifications),"after-changes",(()=>this.modifications=this.modifications),N))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readModifications(e,t,s){this._modificationsSource={url:I(e,s),context:s}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(e){x(e)}if(await this._fetchService(t),null!=this._modificationsSource){const t=await Z.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",t,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(null!=this._modificationsSource)return this.load().then((()=>{}),(()=>{}))}async saveAs(e,t){return this._debouncedSaveOperations(K.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(K.SAVE,e)}validateLayer(e){if(e.layerType&&"IntegratedMesh"!==e.layerType)throw new M("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new M("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new M("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";G(T.getLogger(this),C(t,"absolute-height",e)),G(T.getLogger(this),E(t,e))}};e([t({type:String,readOnly:!0})],B.prototype,"geometryType",void 0),e([t({type:["show","hide"]})],B.prototype,"listMode",void 0),e([t({type:["IntegratedMeshLayer"]})],B.prototype,"operationalLayerType",void 0),e([t({json:{read:!1},readOnly:!0})],B.prototype,"type",void 0),e([t({type:V,readOnly:!0})],B.prototype,"nodePages",void 0),e([t({type:[_],readOnly:!0})],B.prototype,"materialDefinitions",void 0),e([t({type:[z],readOnly:!0})],B.prototype,"textureSetDefinitions",void 0),e([t({type:[A],readOnly:!0})],B.prototype,"geometryDefinitions",void 0),e([t({readOnly:!0})],B.prototype,"serviceUpdateTimeStamp",void 0),e([t({type:Z}),k({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],B.prototype,"modifications",void 0),e([L(["web-scene","portal-item"],"modifications")],B.prototype,"readModifications",null),e([t(O)],B.prototype,"elevationInfo",null),e([t({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],B.prototype,"path",void 0),B=e([r("esri.layers.IntegratedMeshLayer")],B);const F=B;export default F;
//# sourceMappingURL=p-9abf4768.js.map