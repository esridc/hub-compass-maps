import{bo as t,bp as i,bs as s,bu as n,br as e,bt as c}from"./p-aad64c9f.js";import{g as o,t as a}from"./p-cdbdef01.js";import{c as l}from"./p-7a58b9e0.js";
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.13.2
 */const r={icon:"icon",flipRtl:"flip-rtl"};const h={};const u={};const f={s:16,m:24,l:32};function d({icon:t,scale:i}){const s=f[i];const n=x(t);const e=n.charAt(n.length-1)==="F";const c=e?n.substring(0,n.length-1):n;return`${c}${s}${e?"F":""}`}async function p(t){const i=d(t);const s=m(i);if(s){return s}if(!u[i]){u[i]=fetch(c(`./assets/icon/${i}.json`)).then((t=>t.json())).catch((()=>{console.error(`"${i}" is not a valid calcite-ui-icon name`);return""}))}const n=await u[i];h[i]=n;return n}function b(t){return m(d(t))}function m(t){return h[t]}function x(t){const i=!isNaN(Number(t.charAt(0)));const s=t.split("-");const n=s.length>0;if(n){const i=/[a-z]/i;t=s.map(((t,s)=>t.replace(i,(function t(i,n){const e=s===0&&n===0;if(e){return i}return i.toUpperCase()})))).join("")}return i?`i${t}`:t}const g=":host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}";const y=g;const z=t(class t extends i{constructor(){super();this.__registerHost();this.__attachShadow();this.icon=null;this.flipRtl=false;this.scale="m";this.textLabel=undefined;this.pathData=undefined;this.visible=false}connectedCallback(){if(!this.visible){this.waitUntilVisible((()=>{this.visible=true;this.loadIconPathData()}))}}disconnectedCallback(){this.intersectionObserver?.disconnect();this.intersectionObserver=null}render(){const{el:t,flipRtl:i,pathData:e,scale:c,textLabel:l}=this;const h=o(t);const u=f[c];const d=!!l;const p=[].concat(e||"");return s(n,{key:"724265acdc6fb528bf7b25d7ec445c73a63f4c8e","aria-hidden":a(!d),"aria-label":d?l:null,role:d?"img":null},s("svg",{key:"864ee2d80bebd282543ba5d94c57f84b48a6204d","aria-hidden":"true",class:{[r.flipRtl]:h==="rtl"&&i,svg:true},fill:"currentColor",height:"100%",viewBox:`0 0 ${u} ${u}`,width:"100%",xmlns:"http://www.w3.org/2000/svg"},p.map((t=>typeof t==="string"?s("path",{d:t}):s("path",{d:t.d,opacity:"opacity"in t?t.opacity:1})))))}async loadIconPathData(){const{icon:t,scale:i,visible:s}=this;if(!e()||!t||!s){return}const n={icon:t,scale:i};const c=b(n)||await p(n);if(t!==this.icon){return}this.pathData=c}waitUntilVisible(t){this.intersectionObserver=l("intersection",(i=>{i.forEach((i=>{if(i.isIntersecting){this.intersectionObserver.disconnect();this.intersectionObserver=null;t()}}))}),{rootMargin:"50px"});if(!this.intersectionObserver){t();return}this.intersectionObserver.observe(this.el)}static get assetsDirs(){return["assets"]}get el(){return this}static get watchers(){return{icon:["loadIconPathData"],scale:["loadIconPathData"]}}static get style(){return y}},[1,"calcite-icon",{icon:[513],flipRtl:[516,"flip-rtl"],scale:[513],textLabel:[1,"text-label"],pathData:[32],visible:[32]},undefined,{icon:["loadIconPathData"],scale:["loadIconPathData"]}]);function k(){if(typeof customElements==="undefined"){return}const t=["calcite-icon"];t.forEach((t=>{switch(t){case"calcite-icon":if(!customElements.get(t)){customElements.define(t,z)}break}}))}k();export{z as I,k as d};
//# sourceMappingURL=p-d964b132.js.map