import{mx as t,eX as s,eC as e,dh as i,bC as r,k8 as n,eI as h,c1 as o,E as a,T as c,al as u,my as l,e0 as d,mz as f,eM as p,jK as y,x as g,gH as w,d9 as m,dN as b,a3 as S,X as I,je as _,H as F,G as x,r as v,p as M,q as A,ac as E,w as j,s as T,aa as k,n as C,mA as R,lC as P,cX as q,db as D,l3 as O,hd as G,U as L,be as $,mn as N,mk as z,fl as U,dX as B,eN as V,mB as W,mC as Q,jN as X,iX as Z,mD as Y,mE as H,av as J,cL as K}from"./p-aad64c9f.js";import{a as tt,d as st,M as et,p as it,e as rt,i as nt,s as ht,b as ot,f as at,g as ct}from"./p-fa2632fc.js";import{r as ut,j as lt}from"./p-59e47154.js";import{g as dt,K as ft,a as pt,O as yt,N as gt,w as wt,r as mt,e as bt,c as St,b as It,n as _t,p as Ft,f as xt}from"./p-875cbb57.js";import{s as vt,e as Mt}from"./p-da522976.js";import{j as At,x as Et}from"./p-e3657bc3.js";import{o as jt}from"./p-e2849960.js";import{V as Tt}from"./p-02236077.js";import{s as kt}from"./p-aff89b86.js";import{d as Ct,c as Rt,S as Pt}from"./p-1062e8df.js";import{$ as qt}from"./p-4e1cc544.js";import{n as Dt}from"./p-21ce5524.js";import{b as Ot,h as Gt}from"./p-4e60756f.js";import{t as Lt}from"./p-008cf576.js";import{createConnection as $t}from"./p-7073134a.js";import{N as Nt}from"./p-2d2f231a.js";import"./p-2af77f97.js";import"./p-22458323.js";import"./p-1c4b55c0.js";import"./p-2ea4a2b9.js";import"./p-7ce0ff48.js";import"./p-a0004a96.js";import"./p-4295487d.js";import"./p-559f4b2d.js";import"./p-7281a451.js";import"./p-b947b9d2.js";import"./p-b8a25c33.js";import"./p-e7a66915.js";import"./p-1c285990.js";import"./p-01ae94a1.js";import"./p-55f3e0f9.js";import"./p-c0b174ee.js";import"./p-6bf0c935.js";import"./p-deddb82e.js";import"./p-b74976e9.js";import"./p-d492d39b.js";import"./p-bac7b09c.js";import"./p-cea3971b.js";import"./p-1317d6d9.js";import"./p-bdd45e95.js";import"./p-ca379176.js";import"./p-85c76b3c.js";import"./p-07f1865a.js";import"./p-49632661.js";import"./p-4c90e3f2.js";import"./p-e33d4456.js";import"./p-512046c6.js";import"./p-17d8c81f.js";import"./p-dc645a50.js";class zt{constructor(t){this._client=t,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(s){t(this._eventLog.onEvent(s))}}const Ut=1,Bt=2,Vt=4,Wt=8,Qt=16,Xt=32,Zt=64,Yt=128;function Ht(t){switch(t){case Ut:case Wt:case Xt:return-1;case Bt:case Zt:return 0;case Vt:case Qt:case Yt:return 1}}function Jt(t){switch(t){case Ut:case Bt:case Vt:return-1;case Wt:case Qt:return 0;case Xt:case Zt:case Yt:return 1}}const Kt=Ut|Wt|Xt,ts=Vt|Qt|Yt,ss=Ut|Bt|Vt,es=Xt|Zt|Yt;class is{constructor(t,s,e,i,r=0){this.tileKey=t,this._bufferingEnabled=s,this._sizeHint=r,this._meshes={self:new tt(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0;const n=i?1:0;this._copyBufferedDataIntoSelf=e&&this._bufferingEnabled&&t.level===n}get id(){return this.tileKey.id}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(t){this._meshes.self.indexEnsureSize(t)}entityStart(t,s=t){this._currentEntityOverlaps=0,this._meshes.self.entityStart(t,s)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let t=0;t<8;t++){const s=1<<t;!!(this._currentEntityOverlaps&s)&&this._meshes.neighbors[t].entityEnd()}}}recordStart(t,s,e){this._currentRecordOverlaps=0,this._meshes.self.recordStart(t,s,e)}recordEnd(t=0){const s=this._meshes.self.recordEnd(this._currentRecordOverlaps);return s&&0!==this._currentRecordOverlaps?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):s}recordBounds(t,s,e,i){this._bufferingEnabled&&this._addOverlap(t,s,e,i)}recordCount(){return this._meshes.self.recordCount()}metricStart(t){this._meshes.self.metricStart(t)}metricBoxWrite(t){this._meshes.self.metricBoxWrite(t)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(t){this._meshes.self.vertexWrite(t)}vertexWriteF32(t){this._meshes.self.vertexWriteF32(t)}vertexWriteRegion(t){this._meshes.self.vertexWriteRegion(t)}indexWrite(t){this._meshes.self.indexWrite(t)}serialize(t){const e={message:[],transferList:[]},i=this._meshes.self.serialize();return e.message.push({tileId:this.tileKey.id,...i.message}),e.transferList.push(...i.transferList),this._meshes.neighbors.forEach(((i,r)=>{const n=i.serialize(),h=1<<r,o=Ht(h),a=Jt(h),c=new s(this.tileKey).getNormalizedNeighbor(o,a,t);e.message.push({tileId:c.id,...n.message}),e.transferList.push(...n.transferList)})),e}_addOverlap(t,s,i,r){const n=Math.min(e/2,i),h=Math.min(e/2,r),o=255^((t<0+n?ts:t>=e-n?Kt:ts|Kt)|(s<0+h?es:s>=e-h?ss:es|ss));this._currentRecordOverlaps|=o}_copyIntoNeighbors(){for(let t=0;t<8;t++){const s=1<<t;if(!!(this._currentRecordOverlaps&s)){if(this._copyBufferedDataIntoSelf){const t=-Ht(s)*e,i=-Jt(s)*e;if(0!==i)continue;this._meshes.self.copyLast(t,i);continue}if(!this._meshes.neighbors[t]){const e=Math.floor(this._sizeHint/16);this._meshes.neighbors[t]=new tt(s,e)}const i=this._meshes.neighbors[t],r=-Ht(s)*e,n=-Jt(s)*e;i.copyLastFrom(this._meshes.self,r,n)}}}}class rs{}class ns{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(t,s){const e=new ns;return e.setDefault(await t.createMeshWriters(s.meshes)),e}size(){return 1}getDefault(){return this._defaultResult}setDefault(t){this._defaultResult=t}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(t){this._backgroundFillResult=t}match(t,s){const e=this.doMatch(t,s)||this.getDefault();if(e&&e.length>0){const t=this.getBackgroundFill();if(t)return[...t,...e]}return e}getSortKey(t,s){return 0}doMatch(t,s){return null}async fetchResources(t,s){}}class hs extends ns{static async fromDictionaryRenderer(t,s){return new hs(t,s)}constructor(t,s){super(),this._context=t,this._schema=s,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(t,s){const e=s.getCursor(),i=[];for(;e.next();)i.push(this._updateMeshWriterGroup(t,e));await Promise.all(i)}match(t,s){const e=t.getAttributeHash();return this._hashToGroup.get(e)}async _updateMeshWriterGroup(t,s){const e=s.readLegacyFeatureForDisplay(),i=s.getAttributeHash();if(this._hashToGroup.has(i))return;this._hashToGroup.set(i,null);const r=await t.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:e});if(!r)return;const n=await this._context.createMeshWriters(r.meshes);this._hashToGroup.set(i,n)}}class os extends ns{constructor(t,s){super(),this._intervals=[],this._isMaxInclusive=s,this._field=t}static async fromIntervalSchema(t,s){const e=await t.storage.createComputedField(s),i=new os(e,s.isMaxInclusive);await Promise.all(s.intervals.map((async s=>{const e=await t.createMeshWriters(s.meshes);i.add(s,e)})));const r=await t.createMeshWriters(s.defaultSymbol);i.setDefault(r);const n=await t.createMeshWriters(s.backgroundFill);return i.setBackgroundFill(n),i}add(t,s){this._intervals.push({interval:t,result:s}),this._intervals.sort(((t,s)=>t.interval.min-s.interval.min))}size(){return super.size()+this._intervals.length}doMatch(t,s){const e=this._field?.read(t,s);if(null==e||isNaN(e)||e===1/0||e===-1/0)return null;for(let t=0;t<this._intervals.length;t++){const{interval:s,result:i}=this._intervals[t],r=e>=s.min,n=this._isMaxInclusive?e<=s.max:e<s.max;if(r&&n)return i}return null}}class as extends ns{static async fromLabelSchema(t,s){const e=s.classes.map((async s=>{const e=await t.createMeshWriters(s.meshes);return{minScale:s.minScale,maxScale:s.maxScale,meshes:e,expression:null,where:await t.storage.createWhereClause(s.where)}})),i=await Promise.all(e);return new as(i)}constructor(t){super(),this._labels=t}match(t,s){if(!this._labels.length)return null;const e=this._getLabels(s.$view.scale),i=[];for(const s of e)s.where&&!s.where(t)||i.push(...s.meshes);return i}_getLabels(t){return this._labels.filter((s=>this._validForTileScale(s,t)))}_validForTileScale(t,s){const e=s-s/4,i=s+s/2;return(!t.minScale||t.minScale>=e)&&(!t.maxScale||t.maxScale<=i)}}class cs extends ns{constructor(t,s){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=t,this._separator=s||""}static async fromMatcherSchema(t,s){const e=s.expression?[t.storage.createComputedField({expression:s.expression})]:[s.field?t.storage.createComputedField({field:s.field}):null,s.field2?t.storage.createComputedField({field:s.field2}):null,s.field3?t.storage.createComputedField({field:s.field3}):null],i=(await Promise.all(e)).filter((t=>!!t)),r=new cs(i,s.fieldDelimiter),n=await t.createMeshWriters(s.defaultSymbol);r.setDefault(n);const h=await t.createMeshWriters(s.backgroundFill);return r.setBackgroundFill(h),await Promise.all(s.map.map((async(s,e)=>{const i=await t.createMeshWriters(s.symbol);"<Null>"===s.value?r.setNullResult(i):r.add(s.value,i,e+1)}))),r}setNullResult(t){this._nullResult=t}getSortKey(t,s){const e=this._getValueFromFields(t,s);if(null==e||""===e||"<Null>"===e)return 0;const i=this._resultsMap.get(e.toString());return i?i.sortKey:this._defaultSymbolSortKey}add(t,s,e){this._resultsMap.set(t.toString(),{meshWriters:s,sortKey:e}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,e+1)}size(){return super.size()+this._resultsMap.size}doMatch(t,s){const e=this._getValueFromFields(t,s);if(null!==this._nullResult&&(null==e||""===e||"<Null>"===e))return this._nullResult;if(null==e)return null;const i=e.toString();return this._resultsMap.get(i)?.meshWriters}_getValueFromFields(t,s){const e=[];for(const i of this._fields){const r=i.read(t,s);null==r||""===r?e.push("<Null>"):e.push(r)}return e.join(this._separator)}}async function us(t,s){switch(s.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return ns.from(t,s);case"interval":return os.fromIntervalSchema(t,s);case"dictionary":return hs.fromDictionaryRenderer(t,s);case"label":return as.fromLabelSchema(t,s);case"map":return cs.fromMatcherSchema(t,s);case"subtype":return ls.fromSubtypes(t,s);case"cluster":return ds.fromClusterSchema(t,s);default:throw new Error("Impl")}}class ls extends ns{constructor(t,s){super(),this._subMatchers=t,this._subtypeField=s}static async fromSubtypes(t,s){const e=new Map,i=[];for(const r in s.renderers){const n=parseInt(r,10),h=us(t,s.renderers[r]).then((t=>e.set(n,t)));i.push(h)}return await Promise.all(i),new ls(e,s.subtypeField)}match(t,s){const e=t.readAttribute(this._subtypeField),i=this._subMatchers.get(e);return i?i.match(t,s):null}}class ds extends ns{static async fromClusterSchema(t,s){const[e,i]=await Promise.all([us(t,s.feature),us(t,s.cluster)]);return new ds(e,i)}constructor(t,s){super(),this._featureMatcher=t,this._clusterMatcher=s}match(t,s){return 1===t.readAttribute("cluster_count")?this._featureMatcher.match(t,s):this._clusterMatcher.match(t,s)}}class fs extends rs{static async create(t,s){const e=await us(t,s.symbology),i=s.labels?await us(t,s.labels):null;return new fs(e,i)}constructor(t,s){super(),this._symbology=t,this._labels=s}destroy(){}async enqueueMatcherRequests(t,s){await Promise.all([this._symbology.fetchResources(t,s),this._labels?.fetchResources(t,s)])}enqueueWriterRequests(t,s,e){const i=this._symbology.match(s,e);if(i){for(const r of i)r.enqueueRequest(t,s,e);if(this._labels){const i=this._labels.match(s,e);if(!i)return;for(const r of i)r.enqueueRequest(t,s,e)}}}write(t,s,e,i,r){const n=this._symbology.match(e,i);if(!n)return;for(const h of n)h.write(t,s,e,i,r);if(t.entityRecordCount()>=1&&this._labels){const h=this._labels.match(e,i);if(!h)return;for(const o of h)o.setReferences(n),o.write(t,s,e,i,r)}}getSortKey(t,s){return this._symbology.getSortKey(t,s)}}class ps{constructor(t,s,e,i){this.storage=t,this.proxy=s,this.viewParams=e,this.registry=i}async createMeshWriters(t){const s=t.map((t=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,t)));return Promise.all(s)}}class ys{constructor(t){this._outstandingMessages=[],this._queue=new i({concurrency:t.concurrency,process:s=>t.process(s)})}async push(t){if(t.end)return await Promise.all(this._outstandingMessages),await this._queue.push(t),void(this._outstandingMessages=[]);const s=this._queue.push(t);return this._outstandingMessages.push(s),s}}class gs{static async create(t,s){if("count"===s.statisticType){const t=new ut(1);return new gs(s.name,s.alias,s.type,s.statisticType,t)}const e=await t.createComputedField({expression:s.onStatisticExpression?.expression,field:s.onStatisticField});return new gs(s.name,s.alias,s.type,s.statisticType,e)}constructor(t,s,e,i,r){this.name=t,this.alias=s,this.type=e,this.statisticType=i,this.computed=r}}class ws{constructor(t){this.subscription=t,this.handledChunks=new Set}destroy(){}}class ms{constructor(t,s){this._source=t,this._attributeStore=s,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}onSubscribe(t){const s=this.createState(t);this._sendStates.set(t.key.id,s),this.updateChunks()}onUnsubscribe(t){this._sendStates.get(t.key.id)?.destroy(),this._sendStates.delete(t.key.id)}invalidate(){const t=Array.from(this._sendStates.values());this._sendStates.clear();for(const s of t)s.destroy(),this.onSubscribe(s.subscription)}invalidateAttributeData(){}getFeatureObjectIdsForAggregate(t){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(t){return this.displayMap(t,(t=>t),(t=>t))}getDisplayAndObjectIds(t){return this.displayMap(t,(t=>t),((t,s,e)=>[t,e]))}beforeUpdateChunks(){}afterUpdateChunks(){}}class bs extends ms{constructor(t,s,e,i){super(t,s),this.spatialReference=e,this.aggregateFields=i,this.events=new r,this.featureAdapter=jt}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new Tt({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,objectIdField:this._metadata.objectIdField,spatialReference:this.spatialReference})),this._aggregateQueryEngine}removeChunks(t){}forEach(t){return this.forEachAggregateWorldSpace(t)}forEachInBounds(t,s){}forEachBounds(t,s){const e=n();for(const i of t){const t=dt(e,i.geometry,!1,!1);t&&s(t)}}}class Ss{constructor(t,s,e,i,r){this.subscription=t,this.reader=s,this.clear=e,this.end=i,this.debugInfo=r,this.type="append"}get id(){return this.subscription.tile.id}createMessage(t,s,e){return{type:"append",clear:this.clear,id:this.id,append:t,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:s,attributeEpoch:e}}}class Is{constructor(t,s,e,i,r){this.subscription=t,this.reader=s,this.remove=e,this.end=i,this.debugInfo=r,this.type="update"}get id(){return this.subscription.tile.id}createMessage(t,s,e){return{type:"update",id:this.id,modify:t,debugInfo:this.debugInfo,remove:this.remove,version:s,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:e}}}class _s{static fromReader(t){const s=[],e=t.copy(),i=n();for(;e.next();){e.getBounds(i)&&s.push(e.getIndex())}const r=h(9,(t=>(e.setIndex(t),{minX:e.getBoundsXMin(),minY:e.getBoundsYMin(),maxX:e.getBoundsXMax(),maxY:e.getBoundsYMax()})));return r.load(s),new _s(r)}constructor(t){this._index=t}search(t){const s={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]};return this._index.search(s)}}const Fs=64;function xs(t,s,e,i){const r=[t.xmin,t.ymin,t.xmax,t.ymax],n=o.fromExtent(a.fromBounds(r,i)),h=At(n,i,c.WGS84,{densificationStep:s*Fs});if(!h)return null;const u=ft(new kt,h,!1,!1),l=u.coords.filter(((t,s)=>!(s%2))),d=u.coords.filter(((t,s)=>s%2)),f=Math.min(...l),p=Math.min(...d),y=Math.max(...l),g=Math.max(...d),w=vs(f,p,e,c.WGS84),m=vs(y,g,e,c.WGS84);return w&&m?{bounds:r,geohashBounds:{xLL:w[0],yLL:w[1],xTR:m[0],yTR:m[1]},level:e}:null}function vs(t,s,e,i){if(i.isWebMercator){const i=u(t/l.radius),r=i-360*Math.floor((i+180)/360),n=[0,0];return As(n,0,u(Math.PI/2-2*Math.atan(Math.exp(-s/l.radius))),r,e),n}const r=At({x:t,y:s},i,c.WGS84);if(!r)return null;const n=[0,0];return As(n,0,r.y,r.x,e),n}function Ms(t,s){let e=-90,i=90,r=-180,n=180;for(let h=0;h<s;h++){const s=Math.ceil((h+1)/2),o=Math.floor((h+1)/2),a=1-h%2,c=30-(3*s+2*o),u=30-(2*s+3*o),l=3*a+2*(1-a),d=2*a+3*(1-a),f=3*a+7*(1-a)<<u,p=(7*a+3*(1-a)<<c&t.geohashX)>>c,y=(f&t.geohashY)>>u;for(let t=l-1;t>=0;t--){const s=(r+n)/2,e=p&1<<t?1:0;r=(1-e)*r+e*s,n=(1-e)*s+e*n}for(let t=d-1;t>=0;t--){const s=(e+i)/2,r=y&1<<t?1:0;e=(1-r)*e+r*s,i=(1-r)*s+r*i}}return[r,e,n,i]}function As(t,s,e,i,r){r%2&&(r+=1);let n=0,h=0,o=-90,a=90,c=-180,u=180;for(let t=0;t<r/2;t++){for(let s=0;s<5;s++){const e=(c+u)/2,r=i>e?1:0;n|=r<<29-(s+5*t),c=(1-r)*c+r*e,u=(1-r)*e+r*u}for(let s=0;s<5;s++){const i=(o+a)/2,r=e>i?1:0;h|=r<<29-(s+5*t),o=(1-r)*o+r*i,a=(1-r)*i+r*a}}t[2*s]=n,t[2*s+1]=h}class Es{constructor(t){this._statistics=t}get statistics(){return this._statistics}}const js=Math.PI/180;class Ts{static create(t){return new Ts(t.map((t=>ks(t))))}constructor(t){this._statistics=t}values(){return this._statistics.values()}insert(t,s){for(const e of this._statistics)e.insert(t,s)}merge(t){for(let s=0;s<this._statistics.length;s++){const e=this._statistics[s],i=t._statistics[s];if(e.field.name!==i.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");e.merge(i)}}clone(){return new Ts(this._statistics.map((t=>t.clone())))}}function ks(t){switch(t.statisticType){case"min":return new Rs(t);case"max":return new Ps(t);case"avg":return new Ds(t);case"avg_angle":return new Os(t);case"sum":case"count":return new qs(t);case"mode":return new Gs(t)}}class Cs{constructor(t){this.field=t}insert(t,s){if(!this.field.computed)return;const e=this.field.computed.read(t,s);st(e)||this._insertValue(e)}}class Rs extends Cs{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(t){this.value=Math.min(this.value,t)}merge(t){this.value=Math.min(this.value,t.value)}clone(){const t=new Rs(this.field);return t.value=this.value,t}}class Ps extends Cs{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(t){this.value=Math.max(this.value,t)}merge(t){this.value=Math.max(this.value,t.value)}clone(){const t=new Ps(this.field);return t.value=this.value,t}}class qs extends Cs{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(t){this.value+=t}merge(t){this.value+=t.value}clone(){const t=new qs(this.field);return t.value=this.value,t}}class Ds extends Cs{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(t){this._total+=t,this._count+=1}merge(t){this._total+=t._total,this._count+=t._count}clone(){const t=new Ds(this.field);return t._total=this._total,t._count=this._count,t}}class Os extends Cs{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const t=this._x/this._count,s=this._y/this._count,e=180/Math.PI;return Math.atan2(s,t)*e}_insertValue(t){this._x=this._x+Math.cos(t*js),this._y=this._y+Math.sin(t*js),this._count+=1}merge(t){this._x+=t._x,this._y+=t._y,this._count+=t._count}clone(){const t=new Os(this.field);return t._x=this._x,t._y=this._y,t._count=this._count,t}}class Gs extends Cs{constructor(){super(...arguments),this._frequencies=new Map}get value(){let t,s=0;for(const[e,i]of this._frequencies.entries())i>s&&(s=i,t=e);return t}_insertValue(t){const s=this._frequencies.get(t);null!=s?this._frequencies.set(t,s+1):this._frequencies.set(t,1)}merge(t){for(const[s,e]of t._frequencies.entries()){const t=this._frequencies.get(s);null!=t?this._frequencies.set(s,t+e):this._frequencies.set(s,e)}}clone(){const t=new Gs(this.field);return t._frequencies=new Map(this._frequencies),t}}class Ls extends Es{static create(t,s,e,i){const r=Ts.create(t),n=new Array(32);for(let t=0;t<n.length;t++)n[t]=null;return new Ls(r,s,e,i,n)}constructor(t,s,e,i,r){super(t),this.xNode=s,this.yNode=e,this.depth=i,this.children=r,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const t=new Ls(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return t._count=this._count,t._xWorldTotal=this._xWorldTotal,t._yWorldTotal=this._yWorldTotal,t._xGeohashTotal=this._xGeohashTotal,t._yGeohashTotal=this._yGeohashTotal,t.next=this.next,t._objectIds=new Set(this._objectIds),t}insert(t,s,e,i,r,n){this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=e,this._xGeohashTotal+=i,this._yGeohashTotal+=r,this._statistics.insert(t,n),this._objectIds.add(t.getObjectId())}merge(t){if(0!==t._count){this._count+=t._count,this._xWorldTotal+=t._xWorldTotal,this._yWorldTotal+=t._yWorldTotal,this._xGeohashTotal+=t._xWorldTotal,this._yGeohashTotal+=t._yWorldTotal,this._statistics.merge(t._statistics);for(const s of t._objectIds.values())this._objectIds.add(s)}}getCentroid(t){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(t,s){const e=this._getLngLatBounds(),[i,r,n,h]=e,o=At({rings:[[[i,r],[i,h],[n,h],[n,r],[i,r]]]},c.WGS84,t),a=ft(new kt,o,!1,!1);if(null!=s){return pt(new kt,a,!1,!1,"esriGeometryPolygon",s,!1,!1)}return a}getGeometricCentroid(t,s){const e=this._getLngLatBounds(),[i,r,n,h]=e,o=At({x:(i+n)/2,y:(r+h)/2},c.WGS84,t),a=yt(new kt,o);if(null!=s){return pt(new kt,a,!1,!1,"esriGeometryPoint",s,!1,!1)}return a}getAttributes(){const t={aggregateId:this.id};for(const s of this._statistics.values())t[s.field.name]=s.value;return t.aggregateCount=this._count,t}find(t,s,e,i,r,n){if(i>=e)return this;const h=1-i%2,o=3*h+2*(1-h),a=2*h+3*(1-h),c=30-r-o,u=30-n-a,l=((t&7*h+3*(1-h)<<c)>>c)+((s&3*h+7*(1-h)<<u)>>u)*(8*h+4*(1-h)),d=this.children[l];return null==d?null:d.find(t,s,e,i+1,r+o,n+a)}_getLngLatBounds(){const t=this.depth,s=Math.ceil(t/2),e=Math.floor(t/2),i=30-(3*s+2*e),r=30-(2*s+3*e),n=this.xNode<<i,h=this.yNode<<r;return Ms({geohashX:n,geohashY:h},this.depth)}}class $s{constructor(t){this._fields=t,this._size=0,this._depth=0,this._root=Ls.create(this._fields,0,0,0)}destroy(){}get size(){return this._size}get depth(){return this._depth}find(t,s,e){return this._root.find(t,s,e,0,0,0)}insert(t,s,e,i,r,n,h){let o=this._root,a=0,c=0,u=0;for(;null!==o;){if(o.insert(t,s,e,i,r,h),a>=n)return;const l=Math.ceil((a+1)/2),d=Math.floor((a+1)/2),f=1-a%2,p=30-(3*l+2*d),y=30-(2*l+3*d),g=(i&7*f+3*(1-f)<<p)>>p,w=(r&3*f+7*(1-f)<<y)>>y,m=g+w*(8*f+4*(1-f));c=c<<3*f+2*(1-f)|g,u=u<<2*f+3*(1-f)|w,null==o.children[m]&&(o.children[m]=Ls.create(this._fields,c,u,a+1),this._depth=Math.max(this._depth,a+1),this._size+=1),a+=1,o=o.children[m]}}putBins(t,s){for(const e of this.getNodes(s)){const s=t.get(e.id);s?s.merge(e):t.set(e.id,e.clone())}}getNodes(t){const s=[],{geohashBounds:e,level:i}=t;let r=this._root;for(;null!==r;){const t=r.depth,n=r.xNode,h=r.yNode;if(t>=i){s.push(r),r=r.next;continue}const o=Math.ceil((t+1)/2),a=Math.floor((t+1)/2),c=1-t%2,u=30-(3*o+2*a),l=30-(2*o+3*a),d=~((1<<u)-1),f=~((1<<l)-1),p=(e.xLL&d)>>u,y=(e.yLL&f)>>l,g=(e.xTR&d)>>u,w=(e.yTR&f)>>l,m=n<<3*c+2*(1-c),b=h<<2*c+3*(1-c),S=m+8*c+4*(1-c),I=b+4*c+8*(1-c),_=Math.max(m,p),F=Math.max(b,y),x=Math.min(S,g),v=Math.min(I,w);let M=null,A=null;for(let t=F;t<=v;t++)for(let s=_;s<=x;s++){const e=s-m+(t-b)*(8*c+4*(1-c)),i=r.children[e];i&&(M||(M=i,M.next=r.next),A&&(A.next=i),A=i,i.next=r.next)}r=M||r.next}return s}}class Ns{constructor(t){this._options=t}insert(t,s){const e=t.getCursor(),i={$view:{scale:this._options.scale,timeZone:this._options.timeZone}};for(;e.next();)this._insertFeature(e,i,s)}_insertFeature(t,s,i){const{featureFilter:r}=this._options;if(null!==r&&!r.check(t))return;let n=0,h=0;if("esriGeometryPoint"===t.geometryType)n=t.readXWorldSpace(),h=t.readYWorldSpace();else{if(i){const s=t.readCentroidForDisplay();if(null==s)return;const[i,r]=s.coords;if(i<0||i>e||r<0||r>e)return}const s=t.readCentroidWorldSpace();if(null==s)return;n=s.coords[0],h=s.coords[1]}this._insert(t,n,h,s)}}class zs extends Ns{constructor(t){super(t),this._tree=new $s(this._options.fields)}put(t){throw new Error("Geohash tree does not support put")}putBounded(t,s,e){const{geohashLevel:i,spatialReference:r}=this._options,n=xs(s,e,i,r);null!=n&&this._tree.putBins(t,n)}_insert(t,s,e,i){const{geohashLevel:r,spatialReference:n}=this._options,h=vs(s,e,r,n);h&&this._tree.insert(t,s,e,h[0],h[1],r,i)}}class Us extends Es{static createId(t,s){return`${t}.${s}`}static create(t,s,e,i){return new Us(t,s,Ts.create(e),i)}constructor(t,s,e,i){super(e),this.gridX=t,this.gridY=s,this._worldUnitsPerCell=i,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return Us.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const t=new Us(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return t._count=this._count,t._xWorldTotal=this._xWorldTotal,t._yWorldTotal=this._yWorldTotal,t._firstFeatureAttributes=this._firstFeatureAttributes,t._objectIds=new Set(this._objectIds),t}insert(t,s,e,i){0===this._count?this._firstFeatureAttributes=t.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=e,this._yWorldTotal+=i,this._statistics.insert(t,s),this._objectIds.add(t.getObjectId())}merge(t){if(0!==t._count){this._count+=t._count,this._firstFeatureAttributes=t._firstFeatureAttributes,this._xWorldTotal+=t._xWorldTotal,this._yWorldTotal+=t._yWorldTotal,this._statistics.merge(t._statistics);for(const s of t._objectIds.values())this._objectIds.add(s)}}getCentroidX(t){return null==t?this.centroidXWorld:gt(t,this.centroidXWorld)}getCentroidY(t){return null==t?this.centroidYWorld:wt(t,this.centroidYWorld)}getGeometry(t,s){const e=this.gridX*this._worldUnitsPerCell,i=this.gridY*this._worldUnitsPerCell,r=new kt([4],[e,i,e+this._worldUnitsPerCell,i,e+this._worldUnitsPerCell,i+this._worldUnitsPerCell,e,i+this._worldUnitsPerCell]);if(null!=s){const t=new kt;return pt(t,r,!1,!1,"esriGeometryPolygon",s)}return r}getCentroid(t){const s=new kt([],[this.centroidXWorld,this.centroidYWorld]);if(null!=t){const e=new kt;return pt(e,s,!1,!1,"esriGeometryPoint",t)}return s}getGeometricCentroid(t,s){const e=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,i=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=new kt([],[e,i]);if(null!=s){const t=new kt;return pt(t,r,!1,!1,"esriGeometryPoint",s)}return r}getAttributes(){const t={aggregateId:this.id};for(const s of this._statistics.values())t[s.field.name]=s.value;return null!=this._firstFeatureAttributes?{...t,...this._firstFeatureAttributes}:t}}const Bs=96;function Vs(t,s){return d(t)*f*Bs/s}class Ws extends Ns{constructor(t){super(t),this._cells=new Map,this._pixelsPerMapUnit=Vs(t.spatialReference,t.scale)}put(t){for(const s of this._cells.values()){const e=t.get(s.id);e?e.merge(s):t.set(s.id,s.clone())}}putBounded(t,s,e){const i=[s.xmin,s.ymin,s.xmax,s.ymax],[r,n,h,o]=i,a=Math.floor(r*this._pixelsPerMapUnit/this._options.cellSize),c=Math.floor(n*this._pixelsPerMapUnit/this._options.cellSize),u=Math.ceil(h*this._pixelsPerMapUnit/this._options.cellSize),l=Math.ceil(o*this._pixelsPerMapUnit/this._options.cellSize);for(let s=c;s<=l;s++)for(let e=a;e<=u;e++){const i=`${e}.${s}`,r=this._cells.get(i);if(!r)continue;const n=t.get(r.id);n?r&&!t.has(r.id)&&n.merge(r):t.set(r.id,r.clone())}}_insert(t,s,e,i){const r=s*this._pixelsPerMapUnit,n=e*this._pixelsPerMapUnit,h=Math.floor(r/this._options.cellSize),o=Math.floor(n/this._options.cellSize);this._getCellOrCreate(h,o).insert(t,i,s,e)}_getCellOrCreate(t,s){const e=Us.createId(t,s);let i=this._cells.get(e);if(!i){const r=1*this._options.cellSize/this._pixelsPerMapUnit;i=Us.create(t,s,this._options.fields,r),this._cells.set(e,i)}return i}}class Qs extends et{static from(t,s){return new Qs(t.copy(),s)}constructor(t,s){super(t.metadata),this._currentIndex=-1,this._displayTranslationX=0,this._displayTranslationY=0,this._displayScaleX=1,this._displayScaleY=1,this._reader=t,this._indices=s,this._isPoint="esriGeometryPoint"===t.geometryType}setTransformForDisplay(t){const s=this._reader.getInTransform();if(null==s){const[s,e]=t.scale,[i,r]=t.translate;return this._displayTranslationX=-i/s,this._displayScaleX=1/s,this._displayTranslationY=r/e,this._displayScaleY=1/-e,void(this._displayTransform=t)}const[e,i]=s.scale,[r,n]=s.translate,[h,o]=t.scale,[a,c]=t.translate;if(this._displayScaleX=e/h,this._displayTranslationX=(r-a)/h,this._displayScaleY=i/o,this._displayTranslationY=(-n+c)/o,!this._isPoint&&s)throw new Error("InternalError: Relative transformations not supported for non-point features");this._displayTransform=t}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const t=new Qs(this._reader.copy(),this._indices);return t._currentIndex=this._currentIndex,t._displayTransform=this._displayTransform,t._displayTranslationX=this._displayTranslationX,t._displayTranslationY=this._displayTranslationY,t._displayScaleX=this._displayScaleX,t._displayScaleY=this._displayScaleY,t}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(t){this._reader.contextTimeZone=t}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._reader.readXForDisplay()*this._displayScaleX+this._displayTranslationX}readYForDisplay(){return this._reader.readYForDisplay()*this._displayScaleY+this._displayTranslationY}readGeometryForDisplay(){const t=this._reader.readGeometryForDisplay();if(!this._displayTransform)return t;const s=new kt;return pt(s,t,this.hasZ,this.hasM,this.geometryType,this._displayTransform),s.deltaDecode()}readCentroidForDisplay(){const t=this._reader.readCentroidForDisplay()?.clone();if(t){const[s,e]=t.coords;t.coords[0]=s*this._displayScaleX+this._displayTranslationX,t.coords[1]=e*this._displayScaleY+this._displayTranslationY}return t}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(t,s=!1){return this._reader.readAttribute(t,s)}readAttributes(){return this._reader.readAttributes()}joinAttributes(t){return this._reader.joinAttributes(t)}getBounds(t){return this._reader.getBounds(t)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(t){return this._reader.setDisplayId(t)}setIndex(t){return this._reader.setIndex(t)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const t=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(t&&{x:t.coords[0],y:t.coords[1]})??null}}readLegacyGeometryForDisplay(){const t=this.readGeometryForDisplay();return mt(t,this.geometryType,!1,!1)}readGeometryArea(){return this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(t,s){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(t){return this._reader.field(t)}hasField(t){return this._reader.hasField(t)}setField(t,s){return this._reader.setField(t,s)}keys(){return this._reader.keys()}castToText(t=!1){return this._reader.castToText(t)}}class Xs{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._aggregateIndex=null,this._aggregateIndexHash=null,this._spatialIndex=null}queryFeaturesInBounds(t){const s=this._getSpatialIndex().search(t);return Qs.from(this.reader,s)}getAggregateIndex(t){const s=JSON.stringify(t);if(s!==this._aggregateIndexHash){switch(this._aggregateIndexHash=s,t.type){case"grid":this._aggregateIndex=new Ws(t);break;case"geohash":this._aggregateIndex=new zs(t)}this._aggregateIndex.insert(this.reader,this.isTiled)}return this._aggregateIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=_s.fromReader(this.reader)),this._spatialIndex}}class Zs extends et{static fromFeatures(t,s){const{objectIdField:e,geometryType:i}=s,r=bt([],t,i,!1,!1,e);for(let s=0;s<r.length;s++)r[s].displayId=t[s].displayId;return Zs.fromOptimizedFeatures(r,s)}static fromFeatureSet(t,s){const e=St(t,s.objectIdField);return Zs.fromOptimizedFeatureSet(e,s)}static fromOptimizedFeatureSet(t,s){const e=Zs.fromOptimizedFeatures(t.features,s);return e._exceededTransferLimit=t.exceededTransferLimit,e._transform=t.transform,e._fieldsIndex=new p(t.fields),e}static fromOptimizedFeatures(t,s,e){const i=new Zs(t,s);return i._fieldsIndex=s.fieldsIndex,i._transform=e,i}static empty(t){return new Zs([],t)}constructor(t,s){super(s),this._exceededTransferLimit=!1,this._featureIndex=-1,this._fieldsIndex=null,this._geometryType=s.geometryType,this._features=t}get fields(){return this._fieldsIndex}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}get _current(){return this._features[this._featureIndex]}removeIds(t){const s=new Set(t);this._features=this._features.filter((t=>!(null!=t.objectId&&s.has(t.objectId))))}getSize(){return this._features.length}getCursor(){return this.copy()}getInTransform(){return this._transform}getAttributeHash(){let t="";for(const s in this._current.attributes)t+=this._current.attributes[s];return t}getIndex(){return this._featureIndex}setIndex(t){this._featureIndex=t}getObjectId(){return this._current?.objectId}getDisplayId(){return this._current.displayId}setDisplayId(t){this._current.displayId=t}copy(){const t=new Zs(this._features,this.metadata);return this.copyInto(t),t}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readGeometryArea(){return vt(this._current)?It(this._current.geometry,2):0}_readX(){return vt(this._current)?this._current.geometry.coords[0]:0}_readY(){return vt(this._current)?this._current.geometry.coords[1]:0}_readGeometry(){return vt(this._current)?this._current.geometry??null:null}_readServerCentroid(){return this._current.centroid}_readAttribute(t,s){if(!this._fieldsIndex){const s=this._current.attributes[t];if(void 0!==s)return s;const e=t.toLowerCase();for(const t in this._current.attributes)if(t.toLowerCase()===e)return this._current.attributes[t];return}const e=this._fieldsIndex.get(t);if(!e)return;const i=this._current.attributes[e.name];return null==i?i:s&&this.fields.isDateField(t)?new Date(i):i}_readAttributes(){return this._current.attributes}copyInto(t){super.copyInto(t),t._featureIndex=this._featureIndex,t._transform=this._transform,t._fieldsIndex=this._fieldsIndex}}function Ys(t){return"localEdit"===t.chunkId}class Hs extends Xs{constructor(t,s){super(),this.metadata=t,this.removed=new Set,this.overriddenIds=new Set,this._features=[],this.chunkId=s,this.normalizedChunkId=s}get reader(){return Zs.fromOptimizedFeatures(this._features,this.metadata)}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}get lastLocalEditDropped(){return this._lastLocalEditDropped}applyOverrides(t){this._onChange();const{reader:s,removed:e}=t,i=[],r=new Set,n=s.getCursor(),h=new Set(e);for(this.overriddenIds.clear();n.next();){const t=n.readOptimizedFeatureWorldSpace(),s=t.objectId;i.push(t),r.add(s),this.overriddenIds.add(s),this.removed.delete(s)}for(const t of this._features){const s=t.objectId;h.has(s)||r.has(s)||(i.push(t),this.overriddenIds.add(s))}this._features=i;for(const t of r.values())this.removed.delete(t);for(const t of e)this.removed.add(t),this.overriddenIds.add(t)}removeOverrides(t){this._lastLocalEditDropped=performance.now(),this._onChange();const s=t.reader.getCursor(),e=new Set;for(;s.next();){const t=s.getObjectId();this.overriddenIds.has(t)&&(e.add(t),this.overriddenIds.delete(t))}this._features=this._features.filter((t=>!e.has(t.objectId)))}getTileReader(t){if(!this._features.length)return null;const s=this.queryFeaturesInBounds(t.bounds);return s.setTransformForDisplay(t.transform),s}_onChange(){this.invalidate()}}class Js extends ws{constructor(t,s){super(t),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=s}reset(){this.destroy(),this.done=!1}invaldateForLocalEditDropped(){this.handledChunks.clear(),this.bins.clear()}destroy(){const t=this.subscription.tile.key.level;for(const s of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${s}.${t}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const t of this.featureCache.values()){const s=t.clone();s.geometry&&Ft(s.geometry,s.geometry,!1,!1,this.subscription.tile.transform),yield s}}}class Ks extends bs{static async create(t,s,e,i,r){const n=new it({spatialReference:s}),h=await Promise.all(t.fields.map((async t=>gs.create(n,t)))),o=t.featureFilter?await rt.create({geometryType:e.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:e.metadata.timeInfo,fieldsIndex:e.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null;return"geohash"===t.index.type&&await Et(s,c.WGS84),new Ks(t,o,r,h,s,e,i)}constructor(t,s,e,i,r,n,h){super(n,h,r,i),this._schema=t,this._featureFilter=s,this._timeZone=e,this._metadata=nt.createFeature({geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",fieldsIndex:new p(t.fields).toJSON(),globalIdField:null,spatialReference:n.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}createState(t){return new Js(t,this._attributeStore)}async*applyLocalEdit(t){for(const t of this._sendStates.values()){t.reset();const s=new Ss(t.subscription,Zs.empty(this._source.metadata),!0,!1,{});yield s}}displayMap(t,s,e){const i=new Map(t.map((t=>[s(t),t]))),r=[];for(const t of this._sendStates.values())for(const s of t.featuresWorldSpace()){const{objectId:t,displayId:n}=s,h=i.get(t);if(null!=h){const s=e(n,h,t);r.push(s),i.delete(t)}}return r}getDisplayFeatures(t){const s=new Set(t),e=new Set,i=[];for(const t of this._sendStates.values())for(const r of t.featuresWorldSpace())s.has(r.displayId)&&!e.has(r.objectId)&&(r.geometry&&i.push({..._t(r,this._metadata.geometryType,!1,!1),displayId:r.displayId}),e.add(r.objectId));return{features:[],aggregates:i}}getFeatureObjectIdsForAggregate(t){for(const s of this._sendStates.values())for(const e of s.bins.values())if(e.id===t)return Array.from(e.containedObjectIds);return[]}beforeUpdateChunks(){const t=this._source.chunks();if(!t.length)return;let s=!1;for(const e of t)Ys(e)&&e.lastLocalEditDropped!==this._lastHandledLocalEdit&&(this._lastHandledLocalEdit=e.lastLocalEditDropped,s=!0);if(s)for(const t of this._sendStates.values())t.invaldateForLocalEditDropped()}async*updateChunks(){for(const t of this._sendStates.values())yield*this._update(t,this._source)}forEachAggregateWorldSpace(t){const s=new Set;for(const e of this._sendStates.values())for(const i of e.featuresWorldSpace())s.has(i.objectId)||(t(i),s.add(i.objectId))}_createIndexOptions(t){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:t.scale};case"grid":{const s=this._schema.index.fixedBinLevel,e=null!=s?t.tileInfoView.getLODInfoAt(s).scale:t.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:e}}}}async*_update(t,e){const{handledChunks:i,subscription:r,bins:n,featureCache:h}=t,o=r.tile;if(t.done)return;for(const r of e.chunks()){if(i.has(r.chunkId))continue;i.add(r.chunkId);const e=r.queryInfo;if("tileId"in e){const t=new s(e.tileId);if(t.level!==o.level||t.world!==o.key.world)continue}r.getAggregateIndex(this._createIndexOptions(t.tile)).putBounded(n,t.tile.extent,t.tile.resolution)}const a=[],c=r.tile.transform,u=r.tile.key.level;for(const t of n.values()){let s=h.get(t.id);if(s)s.attributes=t.getAttributes();else{const e=t.getGeometry(this.spatialReference,c);s=new Mt(e,t.getAttributes(),null),e||(s.centroid=t.getGeometricCentroid(this.spatialReference,c)),s.objectId=t.id,s.displayId=this._attributeStore.createDisplayIdForObjectId(`${s.objectId}.${u}`),h.set(t.id,s)}a.push(s)}this.events.emit("changed"),t.done=!e.updateTracking.updating;const l=Zs.fromOptimizedFeatures(a,this._metadata,c),d=l.getCursor(),f=t.subscription.tile.createArcadeEvaluationOptions(this._timeZone);for(;d.next();)this._attributeStore.setAttributeData(d.getDisplayId(),d,f);const p=new Is(t.subscription,l,[],t.done,{});yield p}}class te{constructor(t,s){this.inner=t,this.displayId=s}}const se=128;class ee extends ws{constructor(t){super(t),this.didSend=!1,this.done=!1}}class ie{constructor(t,s,e,i,r){this._level=t,this._scale=s,this._indexOptions=e,this._clusterRadius=i,this._store=r,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const t of this._clusters.values())this._store.releaseDisplayIdForObjectId(t.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const t of this._clusters.values()){const s=t.inner.getCentroid(null),e=new Mt(s,t.inner.getAttributes(),null);e.objectId=t.inner.id,e.displayId=t.displayId,yield e}}clusters(){return this._clusters.values()}updateChunks(t,e){let i=!1;for(const e of t){const t=e.queryInfo;if("tileId"in t){if(new s(t.tileId).level!==this._level)continue}if(!this._handledChunks.has(e.normalizedChunkId)){this._handledChunks.add(e.normalizedChunkId),i=!0;e.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells)}}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},n=Vs(this._indexOptions.spatialReference,this._scale),h=this._indexOptions.cellSize;for(const{subscription:t}of e){const s=t.tile.bounds,e=Math.floor(s[0]*n/h),i=Math.floor(s[1]*n/h),o=Math.ceil(s[2]*n/h),a=Math.ceil(s[3]*n/h);r.xMin=Math.min(r.xMin,e),r.yMin=Math.min(r.yMin,i),r.xMax=Math.max(r.xMax,o),r.yMax=Math.max(r.yMax,a)}return null!=this._lastCellBounds&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(i=!0,this._lastCellBounds=r),i&&this._clusterCells(r),i}async updateStatistics(t){let s=!1;for(const t of this._clusters.values())t.inner.count>1&&(s=this._updateAggregateStatistics(this._statistics,t.inner)||s);if(s){const s=Array.from(this._statistics.entries()).map((([t,s])=>({fieldName:t,minValue:s.minValue,maxValue:s.maxValue})));await t.container.updateStatistics(this._level,s)}}createAggregateFeatures(t,s){const i=t.subscription,r=[],n=i.tile.transform;for(const t of this._clusters.values()){let s=t.inner.getCentroidX(n);const h=t.inner.getCentroidY(n),o=i.tile.lod,a=o.wrap?o.worldSize[0]:null,c=1===t.inner.count?t.inner.firstObjectId:t.inner.id,u=t.displayId;if(null!=a)if(1===a){const i=new kt([],[s,h]),n=new Mt(i,t.inner.getAttributes(),null);n.geometry.coords[0]-=e,n.objectId=c,n.displayId=u,r.push(n);const o=new kt([],[s,h]),a=new Mt(o,t.inner.getAttributes(),null);a.geometry.coords[0]+=e,a.objectId=c,a.displayId=u,r.push(a)}else s>e+e/2?s-=a*e:s<-e/2&&(s+=a*e);if(s<e+se&&s>=-se&&h<e+se&&h>=-se){const e=new kt([],[s,h]),i=new Mt(e,t.inner.getAttributes(),null);i.objectId=c,i.displayId=u,r.push(i)}}return Zs.fromOptimizedFeatures(r,s,i.tile.transform)}_clusterCells(t){let s=Array.from(this._cells.values());s=s.sort(((t,s)=>s.count-t.count));const e=[];for(const t of this._clusters.values())e.push(t.inner.id);this._clusters.clear();const i=this._clusterRadius*(1/Vs(this._indexOptions.spatialReference,this._scale)),r=1+this._clusterRadius/this._indexOptions.cellSize,n=new Set;for(const e of s){if(n.has(e.id))continue;if(e.gridX<t.xMin||e.gridX>t.xMax||e.gridY<t.yMin||e.gridY>t.yMax)continue;const s=this._store.createDisplayIdForObjectId(e.id),h=new te(e.clone(),s);n.add(e.id),this._clusters.set(e.id,h);const o=e.centroidXWorld,a=e.centroidYWorld;for(let t=e.gridY-r;t<=e.gridY+r;t++)for(let s=e.gridX-r;s<=e.gridX+r;s++){if(t===e.gridY&&s===e.gridX)continue;const r=this._cells.get(Us.createId(s,t));if(!r||n.has(r.id))continue;const c=Math.abs(r.centroidXWorld-o),u=Math.abs(r.centroidYWorld-a);c<i&&u<i&&(h.inner.merge(r),n.add(r.id))}}for(const t of e)this._store.releaseDisplayIdForObjectId(t)}_updateAggregateStatistics(t,s){let e=!1;for(const i of s.statistics.values()){if("esriFieldTypeString"===i.field.type)continue;const s=i.value,r=i.field,n=t.get(r.name);if(n){const{minValue:t,maxValue:i}=n,r=Math.min(n.minValue,s),h=Math.max(n.maxValue,s);t===r&&i===h||(n.minValue=r,n.maxValue=h,e=!0)}else t.set(r.name,{minValue:s,maxValue:s}),e=!0}return e}}class re extends bs{static async create(t,s,e,i,r,n){const h=new it({spatialReference:e}),o={type:"grid",fields:await Promise.all(s.fields.map((async t=>gs.create(h,t)))),spatialReference:e,featureFilter:s.featureFilter?await rt.create({geometryType:i.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:i.metadata.timeInfo,fieldsIndex:i.metadata.fieldsIndex,spatialReference:e,filterJSON:s.featureFilter}):null,cellSize:s.clusterRadius/4,timeZone:n};return new re(t,s.clusterRadius,o,s.fields,i,r)}constructor(t,s,e,i,r,n){super(r,n,e.spatialReference,e.fields),this._connection=t,this._clusterRadius=s,this._indexOptions=e,this._cellsPerScale=new Map,this._metadata=nt.createFeature({geometryType:"esriGeometryPoint",objectIdField:"aggregateId",fieldsIndex:new p([...i,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]).toJSON(),globalIdField:null,spatialReference:r.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear()}onSubscribe(t){super.onSubscribe(t),this._requiredLevel=t.tile.level,this._requiredScale=t.tile.scale}createState(t){return new ee(t)}async*applyLocalEdit(t){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(t,s,e){const i=new Map(t.map((t=>[s(t),t]))),r=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const t of n.clusters()){const s=i.get(t.inner.id);if(null==s){if(1===t.inner.count){const s=i.get(t.inner.firstObjectId);if(null!=s){const n=e(t.displayId,s,t.inner.firstObjectId);r.push(n),i.delete(t.inner.firstObjectId)}}}else{const n=e(t.displayId,s,t.inner.id);r.push(n),i.delete(t.inner.id)}}return r}getDisplayFeatures(t){const s=new Set(t),e=new Set,i=[],r=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const t of n.aggregatesWorldSpace())if(s.has(t.displayId)&&!e.has(t.displayId)){const s=_t(t,this._metadata.geometryType,!1,!1);if(e.add(t.displayId),1===s.attributes.cluster_count){i.push({...s,displayId:t.displayId});continue}r.push({...s,displayId:t.displayId})}return{features:i,aggregates:r}}getFeatureObjectIdsForAggregate(t){const s=this._getClusterState(this._requiredLevel,this._requiredScale);for(const e of s.clusters())if(e.inner.id===t)return Array.from(e.inner.containedObjectIds);return[]}async*updateChunks(){const t=this._source.chunks();if(!t.length)return;for(const s of t)Ys(s)&&s.lastLocalEditDropped!==this._lastHandledLocalEdit&&(this.invalidate(),this._lastHandledLocalEdit=s.lastLocalEditDropped);const s=this._getClusterState(this._requiredLevel,this._requiredScale),e=Array.from(this._sendStates.values()).filter((t=>t.subscription.tile.level===this._requiredLevel));if(s.updateChunks(t,e)||!this._source.updateTracking.updating)for(const t of e)t.subscription.tile.level===this._requiredLevel&&(t.didSend=!1,t.done=!1);const i=Array.from(this._sendStates.values()).filter((t=>t.done)).map((t=>t.subscription.tile.key)),r=new Set(i);for(const t of this._sendStates.values()){if(this._source.updateTracking.updating){if(i.some((s=>s.containsChild(t.subscription.tile.key))))continue;if(t.subscription.tile.key.getChildKeys().every((t=>r.has(t))))continue}t.didSend||t.subscription.tile.level!==this._requiredLevel||(t.didSend=!0,yield*this._update(t,s,this._source))}await s.updateStatistics(this._connection)}forEachAggregateWorldSpace(t){if(null==this._requiredLevel||null==this._requiredScale)return;const s=this._getClusterState(this._requiredLevel,this._requiredScale);for(const e of s.aggregatesWorldSpace())t(e)}_getClusterState(t,s){if(null==t||null==s)throw new Error("InternalError: Level and scale must be defined");let e=this._cellsPerScale.get(s);return e||(e=new ie(t,s,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(s,e)),e}async*_update(t,s,e){if(t.done)return;const i=s.createAggregateFeatures(t,this._metadata);this.events.emit("changed"),t.done=!e.updateTracking.updating;const r=i.getCursor(),n=t.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.timeZone);for(;r.next();)this._attributeStore.setAttributeData(r.getDisplayId(),r,n);const h=new Ss(t.subscription,i,!0,t.done,{});yield h}}class ne extends ws{}class he extends ms{constructor(t,s,e){super(t,s),this._timeZone=e,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const t of this._source.chunks())this._cleanupChunkIds(t)}invalidateAttributeData(){this.handledChunksForAttributeData.clear()}onSubscribe(t){super.onSubscribe(t),this._evalOptions=t.tile.createArcadeEvaluationOptions(this._timeZone)}createState(t){return new ne(t)}get aggregateQueryEngine(){return null}displayMap(t,s,e){const i=new Map(t.map((t=>[s(t),t]))),r=[];for(const t of this._source.chunks()){const s=t.reader.getCursor();for(;s.next();){const t=s.getObjectId(),n=s.getDisplayId(),h=i.get(t);if(null!=h){const s=e(n,h,t);r.push(s),i.delete(t)}}}return r}getDisplayFeatures(t){const s=new Set(t),e=new Set,i=[];for(const t of this._source.chunks()){const r=t.reader.getCursor();for(;r.next();){const t=r.getObjectId(),n=r.getDisplayId();s.has(n)&&!e.has(t)&&(i.push({...r.readLegacyFeatureWorldSpace(),displayId:n}),e.add(t))}}return{features:i,aggregates:[]}}async*applyLocalEdit(t){const s=[],e=t.reader.getCursor();for(;e.next();){const t=e.getObjectId();s.push(t);const i=this._attributeStore.createDisplayIdForObjectId(t);e.setDisplayId(i),this._attributeStore.setAttributeData(i,e,this._evalOptions)}const i=this.getDisplayIds(s),r=this.getDisplayIds(t.removed),n=new Hs(this._source.metadata,"localEdit");n.applyOverrides(t),this.handledChunks.add(n.chunkId),this.handledChunksForAttributeData.add(n.chunkId),this.handledChunksForIdCreation.add(n.chunkId);for(const t of this._sendStates.values())t.handledChunks.add(n.chunkId),yield new Is(t.subscription,null,i,!1,n.queryInfo);for(const t of this._sendStates.values()){const s=n.getTileReader(t.subscription.tile);yield new Is(t.subscription,s,r,!1,n.queryInfo)}for(const s of t.removed)this._attributeStore.releaseDisplayIdForObjectId(s)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const t of this._sendStates.values())yield*this._update(t)}}removeChunks(t){for(const s of t)this.handledChunks.delete(s.chunkId),this.handledChunksForAttributeData.delete(s.chunkId),this._cleanupChunkIds(s)}afterUpdateChunks(){for(const t of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(t);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(t){if(this.handledChunksForIdCreation.has(t.chunkId)){const s=t.reader.getCursor();for(;s.next();){const t=s.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(t):this._attributeStore.releaseDisplayIdForObjectId(t)}this.handledChunksForIdCreation.delete(t.chunkId)}}async _updateAttributeData(){for(const t of this._source.chunks()){const{chunkId:s,reader:e}=t;if(!this.handledChunksForIdCreation.has(s)){this.handledChunksForIdCreation.add(s);const t=e.getCursor();for(;t.next();){const s=this._attributeStore.createDisplayIdForObjectId(t.getObjectId());t.setDisplayId(s)}}}for(const t of this._source.chunks())if(!this.handledChunksForAttributeData.has(t.chunkId)){this.handledChunksForAttributeData.add(t.chunkId);const s=t.reader.getCursor();for(;s.next();){const t=s.getDisplayId();this._attributeStore.setAttributeData(t,s,this._evalOptions)}}}*_update(t){const{subscription:s,handledChunks:e}=t;for(const i of this._source.chunks()){const{chunkId:r}=i;if(e.has(r))continue;e.add(r);const n=i.getTileReader(s.tile);n&&(yield new Ss(t.subscription,n,!1,i.end,i.queryInfo))}}}class oe{constructor(s,e){this._connection=s,this._source=e,this._version=1,this._registry=new lt,this._proxy=new ht({fetch:(t,s)=>this._connection.layerView.fetch(t,s),fetchDictionary:(t,s)=>this._connection.layerView.fetchDictionary(t,s)}),this._attributeStore=new ot({isLocal:!1,update:s=>t(this._connection.container.updateAttributeView(s))})}destroy(){this._proxy.destroy(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}getDisplayFeatures(t){return this._strategy?this._strategy.getDisplayFeatures(t):{features:[],aggregates:[]}}getDisplayIds(t){const s={};return this._strategy?(this._strategy.displayMap(t,(t=>t),((t,e,i)=>{s[i]=t})),s):s}getFeatureObjectIdsForAggregate(t){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(t):[]}onSubscribe(t){this._strategy?.onSubscribe(t)}onUnsubscribe(t){this._strategy?.onUnsubscribe(t)}async update(t,s,e,i,r){const n=t.processor,h=y(this._schema?.storage,n.storage),o=y(this._schema?.mesh.properties,n.mesh.properties),a=y(this._schema?.mesh.factory,n.mesh.factory),u=y(this._schema?.mesh.strategy,n.mesh.strategy),l=o||a||u;if(!(h||l)&&!i)return;g("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:w(this._schema,n),schema:n}),this._schema=n;const d=c.fromJSON(this._source.service.outSpatialReference),f=new it({fields:this._source.metadata.fieldsIndex,spatialReference:d});if(await this._attributeStore.update(n.storage,f,this._source.metadata,d,s),this._strategy?.invalidateAttributeData(),!i&&!l)return;(u||o)&&await this._updateStrategy(n.mesh.strategy,d,r,n.mesh.properties.timeZone),this._updateSortKey(f,"sortKey"in n.mesh.properties?n.mesh.properties.sortKey:null);const p=new ps(f,this._proxy,e,this._registry);return(a||"dictionary"===n.mesh.factory.symbology.type)&&(this._factory=await fs.create(p,n.mesh.factory)),this._invalidate(),this._version=s,this._connection.container.updateRenderState(this._version)}async applyLocalEdit(t){if(!this._strategy)return;const s=this._strategy.applyLocalEdit(t);for await(const t of s)try{await this._process(t)}catch(t){}}async updateChunks(){this._strategy?.beforeUpdateChunks(),await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(t){this._strategy?.removeChunks(t),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:t}){if(!this._strategy)return void this._attributeStore.setHighlight(t.map((({objectId:t,highlightFlags:s})=>({objectId:t,highlightFlags:s,displayId:-1}))),t);const s=this._strategy.displayMap(t,(({objectId:t})=>t),((t,{highlightFlags:s},e)=>({objectId:e,displayId:t,highlightFlags:s})));this._attributeStore.setHighlight(s,t)}async _doUpdateChunks(){if(!this._strategy)return;const t=this._strategy.updateChunks(),s=[],e=new Map;for await(const i of t){let t=e.get(i.id);null==t&&(t=new ys({concurrency:16,process:t=>this._process(t)}),e.set(i.id,t));const r=t.push(i).catch((t=>m(t)));s.push(r)}try{await Promise.all(s)}catch(t){}g("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),g("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(t,s,e,i){switch(this._strategy?.destroy(),t.type){case"feature":this._strategy=new he(this._source,this._attributeStore,i);break;case"binning":this._strategy=await Ks.create(t,s,this._source,this._attributeStore,i);break;case"cluster":this._strategy=await re.create(this._connection,t,s,this._source,this._attributeStore,i)}for(const t of e)this._strategy.onSubscribe(t)}async _updateSortKey(t,s){if(this._sortInfo=b(this._sortInfo?.computed),null!=s){const e=s.byRenderer?null:await t.createComputedField(s);this._sortInfo={...s,computed:e}}}_invalidate(){this._strategy&&this._strategy.invalidate()}async _process(t){const s=t.subscription;if(g("esri-2d-update-debug")){const e=s.tile;console.debug(`Version[${this._version}] Tile[${e.key.id}, end=${t.end}] Processor._process`)}await this._fetchResources(t),S(s.signal);const e=await this._write(t,s.tile.createArcadeEvaluationOptions(this._schema?.mesh.properties.timeZone)),i=s.tile.tileInfoView.getLODInfoAt(s.tile.key),{message:r,transferList:n}=e.serialize(i),h={objectIdMap:null,inner:t.createMessage(r,this._version,this._attributeStore.epoch)};if(this._schema?.mesh.properties.returnMeshObjectId){h.objectIdMap={};const s=t.reader?.getCursor();if(s)for(;s.next();)h.objectIdMap[s.getDisplayId()]=s.getObjectId()}if(S(s.signal),await this._connection.container.onMessage(h,{signal:s.signal,transferList:n}),this._attributeStore.sendUpdates(),g("esri-2d-update-debug")){const e=s.tile;console.debug(`Version[${this._version}] Tile[${e.key.id}, end=${t.end}] Processor._process.await`)}}async _fetchResources(t){await this._fetchMatcherResources(t),await this._fetchWriterResources(t)}async _fetchMatcherResources(t){if(t.reader)return this._factory.enqueueMatcherRequests(this._proxy,t.reader)}async _fetchWriterResources(t){if(!t.reader)return;const s=t.reader.getCursor(),e=t.subscription.tile.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;s.next();)this._factory.enqueueWriterRequests(this._proxy,s,e);await this._proxy.fetchEnqueuedResources()}async _write(t,s){const e=t.subscription.tile,i=t.reader?.getCursor(),r=i?.getSize()??0,n=e.tileInfoView.tileInfo.isWrappable,h=e.tileInfoView.tileInfo.spatialReference.isWGS84,o=new is(e.key,this._strategy.enablePixelBuffering,n,h,r);if(!i)return o;const a=e.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;i.next();){const t=this._getSortKeyValue(i,s);o.entityStart(i.getDisplayId(),t),this._factory.write(o,this._proxy,i,a,e.level),o.entityEnd()}return o}_getSortKeyValue(t,s){if(!this._sortInfo)return 0;const{computed:e,order:i,byRenderer:r}=this._sortInfo,n=r?this._factory.getSortKey(t,s):e?.read(t,s);return null==n||isNaN(n)?0:n*("asc"===i?-1:1)}}class ae{static from(t){let s=0,e=0,i=0;return t.forEach((t=>{const r=t._readGeometry();r&&(e+=r.isPoint?1:r.lengths.reduce(((t,s)=>t+s),0),i+=r.isPoint?1:r.lengths.length,s+=1)})),new ae(s,e,i)}constructor(t,s,e){this.featureCount=t,this.vertexCount=s,this.ringCount=e}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}}const ce=4;function ue(t,s,e){const i=t.orderByFields??e.objectIdField+" ASC",r=t.source,n={returnCentroid:!(null!==r&&"object"==typeof r&&"path"in r&&F(r.path))&&"esriGeometryPolygon"===e.serviceGeometryType,returnGeometry:!0,timeReferenceUnknownClient:e.timeReferenceUnknownClient??void 0,outSpatialReference:c.fromJSON(t.outSpatialReference),orderByFields:"memory"===t.type?[]:[i],where:s.mutable.dataFilter.definitionExpression??"1=1",outFields:s.mutable.availableFields,multipatchOption:"esriGeometryMultiPatch"===e.serviceGeometryType?"xyFootprint":null};if("feature"===s.type){const{gdbVersion:t,historicMoment:e,timeExtent:i}=s.mutable.dataFilter;return{...n,gdbVersion:t,historicMoment:e?new Date(e):null,timeExtent:i?x.fromJSON(i):null,outFields:s.mutable.availableFields}}return n}class le{static fromSchema(t,s,e){const i="feature"===s.type?s.mutable.dataFilter.queryScaleRanges:[];return new le(ue(t,s,e),i,e.subtypeField,s.mutable.dataFilter.customParameters,e.geometryType,t.queryMetadata)}constructor(t,s,e,i,r,n){this._queryParams=t,this._queryScaleRanges=s,this._subtypeField=e,this._customParameters=i,this._geometryType=r,this._queryMetadata=n}get pageSize(){if(null==this._queryMetadata)throw new Error("InternalError: Service does not support paged queries");const t=this._queryMetadata.supportsMaxRecordCountFactor?ce:null,s=(this._queryMetadata.maxRecordCount??8e3)*(t??1);return Math.min(8e3,s)}updateHistoricMoment(t){this._queryParams.historicMoment=t}updateFields(t){this._queryParams.outFields=t}createPatchFieldsQuery(t,s){if(!s.getSize())return null;const e=t.clone();if("*"===this._queryParams.outFields[0]){if("*"===(e.outFields??[])[0])return null;e.outFields=this._queryParams.outFields}else{const t=new Set(this._queryParams.outFields),i=[];for(const e of t)s.hasField(e)||i.push(e);if(0===i.length)return null;e.outFields=i}return e.returnGeometry=!1,e.returnCentroid=!1,e.quantizationParameters=null,e.cacheHint=!0,{inner:e,customParameters:this._customParameters}}createQuery(t={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new I({...this._queryParams,...t}),customParameters:this._customParameters}}createTileQuery(t,s){if(null==this._queryMetadata)throw new Error("InternalError: Service does not support tile queries");const e=this.createQuery(s),i=e.inner;if(this._queryScaleRanges.length){const s=this._queryScaleRanges.filter((s=>(!s.minScale||s.minScale>=t.maxScale)&&(!s.maxScale||s.maxScale<=t.minScale))).map((t=>t.subtypeCode));if(s.length){const t=`${this._subtypeField} IN (${s})`;i.where=_(i.where,t)}}if(i.quantizationParameters=s.quantizationParameters??t.getQuantizationParameters(),i.resultType="tile",i.geometry=t.extent,this._queryMetadata.supportsQuantization?"esriGeometryPolyline"===this._geometryType&&(i.maxAllowableOffset=t.resolution*g("feature-polyline-generalization-factor")):"esriGeometryPolyline"!==this._geometryType&&"esriGeometryPolygon"!==this._geometryType||(i.maxAllowableOffset=t.resolution,"esriGeometryPolyline"===this._geometryType&&(i.maxAllowableOffset*=g("feature-polyline-generalization-factor"))),i.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,i.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(i.maxRecordCountFactor=ce),g("esri-tiles-debug")){const s=t.id.replaceAll("/",".");e.customParameters=e.customParameters?{...e.customParameters,tileId:s}:{tileId:s}}return e}createPagedTileQuery(t,s){const e=this.pageSize;return this.createTileQuery(t,{start:e*s,num:e,returnExceededLimitFeatures:!0})}createPagedQuery(t){const s=this.pageSize;return this.createQuery({start:s*t,num:s,returnExceededLimitFeatures:!0,maxRecordCountFactor:ce})}}const de=2500;let fe=class extends E{constructor(t){super(),this._connection=t,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([j((()=>this._strategy?.connectionStatus??"disconnected"),(t=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:t})}),{initial:!0}),j((()=>this._strategy?.errorString||null),(t=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:t})),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(t){null==this._strategy&&this._resetUpdateInfo(performance.now());const s="event-handles";this.removeHandles(s),null!=t&&(this.addHandles([t.events.on("data-received",(t=>this._onFeature(t))),t.events.on("message-received",(t=>this._onWebSocketMessage(t))),t.events.on("features-updated",(t=>this._onUpdate(t))),t.events.on("tick",(()=>this._onTick()))],s),this._queuedCommands.forEach((s=>s(t))),this._queuedCommands=[]),this._strategy=t}updateCustomParameters(t){null!=t&&this._callOrEnqueue((s=>s.updateCustomParameters(t)))}sendMessageToSocket(t){this._callOrEnqueue((s=>s.sendMessageToSocket(t)))}sendMessageToClient(t){this._callOrEnqueue((s=>s.sendMessageToClient(t)))}enableEvent(t,s){s?this._enabledEventTypes.add(t):this._enabledEventTypes.delete(t)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(t){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:t})}_onFeature(t){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:t.attributes,centroid:t.centroid,geometry:t.geometry}})}_onUpdate(t){this._updateInfo.client+=t}_onTick(){const t=performance.now(),s=t-this._lastTime;if(s>de){const e=Math.round(this._updateInfo.client/(s/1e3)),i=Math.round(this._updateInfo.websocket/(s/1e3));this._resetUpdateInfo(t),this._layerView.emitEvent({name:"update-rate",event:{client:e,websocket:i}})}}_resetUpdateInfo(t){this._lastTime=t,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(t){null!=this._strategy?t(this._strategy):this._queuedCommands.push(t)}};v([M()],fe.prototype,"_strategy",void 0),fe=v([A("esri.views.2d.layers.features.sources.StreamMessenger")],fe);class pe{constructor(t){this._store=t,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}unsafeSetQueryHistoricMoment(t){throw new Error("InternalError: LoadStrategy does not support query info")}async queryOverride(t){throw new Error("InternalError: LoadStrategy does not support fetching")}async queryByObjectId(t){throw new Error("InternalError: LoadStrategy does not support fetching")}async addParquetFile(t){throw new Error("InternalError: LoadStrategy does not support loading blobs")}}const ye=268435455;class ge{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}}function we(t,s,e=!1){const i=1,r=3,n=9,h=12,o=13,a=15,c=t.asUnsafe(),u=c.pos(),l=new ge;let d=0,f=0;const y=1,g=2,w=4,m=3;let b=null,S=null,I=null,_=!1;const F=[];for(;c.next();)switch(c.tag()){case i:b=c.getString();break;case r:S=c.getString();break;case h:I=c.processMessage(Gt);break;case n:if(l.exceededTransferLimit=c.getBool(),l.exceededTransferLimit){l.offsets.geometry=e?new Float64Array(8e3):new Int32Array(8e3),l.centroid=e?new Float64Array(16e3):new Int32Array(16e3);for(let t=0;t<l.centroid.length;t++)l.centroid[t]=ye}break;case o:{const t=c.processMessage(Ot);t.index=d++,F.push(t);break}case a:{const t=c.getLength(),i=c.pos()+t;if(!l.exceededTransferLimit){const t=l.offsets.geometry,s=l.centroid;t.push(0),s.push(ye),s.push(ye)}!_&&l.exceededTransferLimit&&(_=!0,l.offsets.attributes=e?new Float64Array(8e3*d):new Uint32Array(8e3*d));let r=f*d;for(;c.pos()<i&&c.next();)switch(c.tag()){case y:{if(_)l.offsets.attributes[r++]=c.pos();else{l.offsets.attributes.push(c.pos())}const t=c.getLength();c.skipLen(t);break}case g:if(s){const t=c.getLength(),s=c.pos()+t;for(;c.pos()<s&&c.next();)switch(c.tag()){case m:{c.getUInt32();const t=c.getSInt64(),s=c.getSInt64();l.centroid[2*f]=t,l.centroid[2*f+1]=s;break}default:c.skip()}}else{l.offsets.geometry[f]=c.pos();const t=c.getLength();l.vertexCount+=t,c.skipLen(t)}break;case w:{const t=c.getLength(),s=c.pos()+t;for(;c.pos()<s&&c.next();)switch(c.tag()){case m:{c.getUInt32();const t=c.getSInt64(),s=c.getSInt64();l.centroid[2*f]=t,l.centroid[2*f+1]=s;break}default:c.skip()}break}default:c.skip()}f++,l.hasFeatures=!0;break}default:c.skip()}const x=b||S;if(!x)throw new T("FeatureSet has no objectId or globalId field name");return l.fields=new p(F),l.featureCount=f,l.fieldCount=d,l.objectIdFieldIndex=l.fields.get(x)?.index,l.transform=I,l.displayIds=new Uint32Array(l.featureCount),l.groupIds=new Uint16Array(l.featureCount),c.move(u),l}const me=!0,be=268435455,Se=128,Ie=128e3,_e={small:{delta:new Int32Array(Se),decoded:new Int32Array(Se)},large:{delta:new Int32Array(Ie),decoded:new Int32Array(Ie)}};function Fe(t){return t<=_e.small.delta.length?_e.small:(t<=_e.large.delta.length||(_e.large.delta=new Int32Array(Math.round(1.25*t)),_e.large.decoded=new Int32Array(Math.round(1.25*t))),_e.large)}function xe(t){try{const s=2,e=new Dt(new Uint8Array(t),new DataView(t));for(;e.next();){if(e.tag()===s)return ve(e.getMessage());e.skip()}}catch(t){const s=new T("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:t});C.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(s)}return null}function ve(t){const s=1;for(;t.next();){if(t.tag()===s)return t.getMessage();t.skip()}return null}function Me(t){const s=1,e=2,i=3,r=4,n=5,h=6,o=7,a=8,c=9,u=t.getLength(),l=t.pos()+u;for(;t.pos()<l&&t.next();)switch(t.tag()){case s:return t.getString();case e:return t.getFloat();case i:return t.getDouble();case r:return t.getSInt32();case n:return t.getUInt32();case h:return t.getInt64();case o:return t.getUInt64();case a:return t.getSInt64();case c:return t.getBool();default:return t.skip(),null}return null}function Ae(t,s,e,i,r,n){return.5*Math.abs(t*i+e*n+r*s-t*n-e*s-r*i)}function Ee(t,s,e,i,r){if(!t)return!1;return 0===s*r-i*e&&s*i+e*r>0}class je extends et{static fromBuffer(t,s,e=!1){const i=s.geometryType,r=xe(t),n=we(r,"esriGeometryPoint"===i,e);return new je(r,n,s)}constructor(t,s,e){super(e),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._parseCaches=new Array,this._geometryType=e.geometryType,this._reader=t,this._header=s,this._hasNext=s.hasFeatures,this._isPoints="esriGeometryPoint"===e.geometryType}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(t){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=t}getAttributeHash(){let t="";for(const s of this._header.fields.fields)t+=this._readAttributeAtIndex(s.index)+".";return t}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(t){this._header.displayIds[this._featureIndex]=t}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const t=this._reader.clone(),s=new je(t,this._header,this.metadata);return this.copyInto(s),s}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const t=this._header.centroid[2*this._featureIndex],s=this._header.centroid[2*this._featureIndex+1];return t===be?null:new kt([],[t,s])}_readGeometry(t=!1){if(void 0===this._cache.geometry){let s=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===be)return null;const t=this._header.centroid[2*this._featureIndex],e=this._header.centroid[2*this._featureIndex+1];s=new kt([],[t,e])}else{const e=this._header.offsets.geometry[this._featureIndex],i=this._reader;if(0===e)return null;i.move(e);try{s=t?this._parseGeometryForDisplay(i):this._parseGeometry(i)}catch(t){return null}}return 0===s?.coords.length&&(s=null),this._cache.geometry=s,s}return this._cache.geometry}_readAttribute(t,s){const e=this._header.fields.get(t);if(null==e)return;const i=this._readAttributeAtIndex(e.index),r=this._header.fields.isDateField(e.name);return s?null==i?i:r?new Date(i):i:i}_readAttributes(){const t={};for(const s of this._header.fields.fields)t[s.name]=this._readAttributeAtIndex(s.index);return t}copyInto(t){super.copyInto(t),t._featureIndex=this._featureIndex,t._featureOffset=this._featureOffset,t._hasNext=this._hasNext,t._parseCaches=this._parseCaches}_readAttributeAtIndex(t){let s=this._parseCaches[t];if(s||(s=new at(this.getSize()),this._parseCaches[t]=s),s.has(this._featureIndex))return s.get(this._featureIndex);const e=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+t],i=this._reader;i.move(e);const r=Me(i);return s.set(this._featureIndex,r),r}_readGeometryDeltaDecoded(t=!1){if(void 0===this._cache.unquantGeometry){const s=this._readGeometry(t);if(!s)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=s,s;const e=Fe(s.coords.length).decoded,i=s.clone(e),r=i.coords;let n=0;for(const t of i.lengths){for(let s=1;s<t;s++){const t=2*(n+s),e=2*(n+s-1);r[t]+=r[e],r[t+1]+=r[e+1]}n+=t}return this._cache.unquantGeometry=i,i}return this._cache.unquantGeometry}_parseGeometry(t){const s=2,e=3,i=t.asUnsafe(),r=i.getLength(),n=i.pos()+r,h=[],o=[];for(;i.pos()<n&&i.next();)switch(i.tag()){case s:{const t=i.getUInt32(),s=i.pos()+t;for(;i.pos()<s;)o.push(i.getUInt32());break}case e:{const t=i.getUInt32(),s=i.pos()+t;for(h.push(i.getSInt64()),h.push(i.getSInt64()),this.hasZ&&i.getSInt64(),this.hasM&&i.getSInt64();i.pos()<s;)h.push(i.getSInt64()),h.push(i.getSInt64()),this.hasZ&&i.getSInt64(),this.hasM&&i.getSInt64();break}default:i.skip()}return new kt(o,h)}_parseGeometryForDisplay(t){const s=2,e=3,i=t.asUnsafe(),r=i.getLength(),n=i.pos()+r,h=[],o=[];let a=0,c=0,u=null,l=0;const d="esriGeometryPolygon"===this.geometryType,f="esriGeometryPolyline"===this.geometryType,p=d||f;for(;i.pos()<n&&i.next();)switch(i.tag()){case s:{const t=i.getUInt32(),s=i.pos()+t;for(;i.pos()<s;){const t=i.getUInt32();h.push(t),a+=t}u=Fe(2*a).delta;break}case e:{i.getUInt32();const t=2+(this.hasZ?1:0)+(this.hasM?1:0);k(u);for(const s of h)if(c+t*s>u.length)for(let t=0;t<s;t++)i.getSInt32(),i.getSInt32(),this.hasZ&&i.getSInt32(),this.hasM&&i.getSInt32();else if(d&&me){const t=this.getAreaSimplificationThreshold(s,this._header.vertexCount);let e=2,r=1;const n=!1;let h=i.getSInt32(),a=i.getSInt32();u[c++]=h,u[c++]=a,this.hasZ&&i.getSInt32(),this.hasM&&i.getSInt32();let d=i.getSInt32(),f=i.getSInt32();for(this.hasZ&&i.getSInt32(),this.hasM&&i.getSInt32();e<s;){let s=i.getSInt32(),n=i.getSInt32();this.hasZ&&i.getSInt32(),this.hasM&&i.getSInt32();const o=h+d,y=a+f;Ae(h,a,o,y,o+s,y+n)>=t?(l+=-.5*(o-h)*(y+a),r>1&&Ee(p,u[c-2],u[c-1],d,f)?(u[c-2]+=d,u[c-1]+=f):(u[c++]=d,u[c++]=f,r++),h=o,a=y):(s+=d,n+=f),d=s,f=n,e++}r<3||n?c-=2*r:(l+=-.5*(h+d-h)*(a+f+a),Ee(p,u[c-2],u[c-1],d,f)?(u[c-2]+=d,u[c-1]+=f,o.push(r)):(u[c++]=d,u[c++]=f,o.push(++r)))}else{let t=0,e=i.getSInt32(),r=i.getSInt32();this.hasZ&&i.getSInt32(),this.hasM&&i.getSInt32(),u[c++]=e,u[c++]=r,t+=1;for(let n=1;n<s;n++){const s=i.getSInt32(),h=i.getSInt32(),o=e+s,a=r+h;l+=-.5*(o-e)*(a+r),this.hasZ&&i.getSInt32(),this.hasM&&i.getSInt32(),n>2&&Ee(p,u[c-2],u[c-1],s,h)?(u[c-2]+=s,u[c-1]+=h):(u[c++]=s,u[c++]=h,t+=1),e=o,r=a}o.push(t)}break}default:i.skip()}return this._cache.area=l,o.length?new kt(o,u):null!=u?this._createQuantizedExtrudedGeometry(u[0],u[1]):null}}class Te{constructor(t,s){this.service=t,this._metadata=s}destroy(){}}function ke(t,s){switch(t.type){case"memory":return new Re(t,s);case"ogc":return new De(t,s);case"feature-service":return t.queryMetadata.supportsFormatPBF&&g("featurelayer-pbf")?new Pe(t,s):new qe(t,s)}}async function Ce(t){const s=new R;return await s.open(t,{}),s}class Re extends Te{constructor(t,s){super(t,s),this._portsOpen=Ce(t.source).then((t=>this.client=t))}destroy(){this.client.close(),this.client=null}async executeQuery(t,s){await this._portsOpen;const e=await this.client.invoke("queryFeatures",t.toJSON(),s);return Zs.fromFeatureSet(e,this._metadata)}}class Pe extends Te{async executeQuery(t,s){const{data:e}=await Ct(this.service.source,t,s),i=!t.quantizationParameters;return je.fromBuffer(e,this._metadata,i)}}class qe extends Te{async executeQuery(t,s){const{source:e,queryMetadata:i}=this.service;if(null!=t.quantizationParameters&&!i.supportsQuantization){const i=t.clone(),r=P(i.quantizationParameters);i.quantizationParameters=null;const{data:n}=await Rt(e,i,this._metadata.spatialReference,s),h=St(n,this._metadata.objectIdField);return xt(r,h),Zs.fromOptimizedFeatureSet(h,this._metadata)}const{data:r}=await Rt(e,t,this._metadata.spatialReference,s);return"esriGeometryPoint"===this._metadata.geometryType&&(r.features=r.features?.filter((t=>{if(null!=t.geometry){const s=t.geometry;return Number.isFinite(s.x)&&Number.isFinite(s.y)}return!0}))),Zs.fromFeatureSet(r,this._metadata)}}class De extends Te{async executeQuery(t,s){if(t.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const e=t.clone(),i=P(e.quantizationParameters);e.quantizationParameters=null;const r=await qt(this.service.source,t,s);return xt(i,r),Zs.fromOptimizedFeatureSet(r,this._metadata)}const e=await qt(this.service.source,t,s);return Zs.fromOptimizedFeatureSet(e,this._metadata)}}class Oe extends pe{constructor(t,s,e,r,n){super(e),this._serviceInfo=t,this._queryInfo=s,this._metadata=r,this._connection=n,this._queue=new i({concurrency:16,process:async t=>{const s={signal:t.options?.signal,query:t.query.customParameters};return this._adapter.executeQuery(t.query.inner,s)}}),this._adapter=ke(t,r)}unsafeSetQueryHistoricMoment(t){this._queryInfo.updateHistoricMoment(t)}async updateFields(t){this._queryInfo.updateFields(t);const s=Array.from(this._store.chunks()).map((async t=>{const s=I.fromJSON(t.queryInfo.queryJSON);if(s)try{return await this._tryUpdateFields(t.reader,s),null}catch(t){return t}})),e=(await Promise.all(s)).filter((t=>t));if(e.length)throw new T("featurelayer-query","Encountered errors when downloading fields",{errors:e})}async queryByObjectId(t){if(0===t.length)return Zs.empty(this._metadata);const s=this._queryInfo.createQuery({objectIds:t});return this._fetch(s)}async _fetch(t,s){const e=await this._enqueue(t,s);return await this._tryUpdateFields(e,t.inner),e}async _tryUpdateFields(t,s){const e=this._queryInfo.createPatchFieldsQuery(s,t);if(!e)return;const i=await this._enqueue(e,this._options);t.joinAttributes(i)}async _enqueue(t,s){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:t,options:s}).finally((()=>{this._connection.onEvent({type:"fetchEnd",done:0===this._queue.length})}))}}class Ge extends Oe{constructor(){super(...arguments),this._chunksById=new Map}unload(t){this._removeChunks(t.tile)}_addChunk(t){const s=t.tile.id;this._chunksById.has(s)||this._chunksById.set(s,[]);const e=t.size();(e||t.first||t.end)&&(g("esri-2d-update-debug")&&console.debug(`Chunk[${t.chunkId}] ATileLoadStrategy.addChunk [count=${e}]`),this._chunksById.get(s).push(t),this._store.insert(t))}_removeChunks(t){const s=this._chunksById.get(t.key.id)??[];for(const e of s)g("esri-2d-update-debug")&&console.debug(`Tile[${t.key.id}] Chunk[${e.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(e);this._chunksById.delete(t.key.id)}}class Le extends Xs{constructor(t,s,e,i,r,n){super(),this._reader=t,this._queryJSON=s,this._tile=e,this._sourceTile=i,this._sourceTileDepth=r,this._end=n,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return 0===this._sourceTileDepth}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(t){return this._tile.key.id===t.key.id?this.reader:null}}class $e{constructor(t,s){this.subscription=t,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=q([D(t.signal,(()=>this._controller.abort())),D(s,(()=>this._controller.abort()))])}destroy(){this._controller.abort(),this._handles.remove()}get(t){return this._tileIdToResult.get(t)}set(t,s){this._tileIdToResult.set(t,s)}get options(){return{signal:this._controller.signal}}}class Ne extends Ge{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const t of this._loadStates.values())t.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(t){this._loadStates.has(t.key.id)||this._loadStates.set(t.key.id,new $e(t,this._options));const s=this._loadStates.get(t.key.id);let e;try{for await(const e of this._fetchChunkInfos(s,t.tile,0)){const{queryJSON:t,reader:i,sourceTile:r,sourceTileDepth:n,tile:h}=e,o=new Le(i,t,h,r,n,!1);S(s.options),this._addChunk(o)}}catch(t){e=t}const i=new Le(Zs.empty(this._metadata),null,t.tile,null,-1,!0);if(this._addChunk(i),e)throw e}unload(t){super.unload(t),this._loadStates.get(t.key.id)?.destroy(),this._loadStates.delete(t.key.id)}async*_fetchChunkInfos(t,s,e){let i=t.get(s.id);const r=!!i;if(i||(i=await this._fetchChunkInfo(t,s,e),t.set(s.id,i)),i.reader.exceededTransferLimit&&e<g("featurelayer-query-max-depth"))for(const i of s.createChildTiles())yield*this._fetchChunkInfos(t,i,e+1);else r||(yield i)}async _fetchChunkInfo(t,s,e){const i=t.subscription.tile.getQuantizationParameters(),r=this._queryInfo.createTileQuery(s,{returnExceededLimitFeatures:!1,quantizationParameters:i});return{reader:await this._fetch(r,t.options),queryJSON:r.inner.toJSON(),tile:t.subscription.tile,sourceTile:s,sourceTileDepth:e}}}class ze extends Xs{constructor(t,s,e,i,r){super(),this._reader=t,this._queryJSON=s,this._tile=e,this._page=i,this._end=r,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return 0===this._page}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(t){return this._tile.key.id===t.key.id?this.reader:null}}class Ue{constructor(t,s){this.subscription=t,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=q([D(t.signal,(()=>this._controller.abort())),D(s,(()=>this._controller.abort()))])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let t=-1;for(const s of this._pages.values())t=Math.max(t,s);return t+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(t,s){this._pages.add(t),this._done=this._done||s}}class Be extends Ge{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const t of this._loadStates.values())t.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(t){this._loadStates.has(t.key.id)||this._loadStates.set(t.key.id,new Ue(t,this._options));const s=this._loadStates.get(t.key.id);let e;try{await this._fetchPages(s)}catch(t){e=t}const i=new ze(Zs.empty(this._metadata),null,t.tile,-1,!0);if(O(s.options)||this._addChunk(i),e)throw e}unload(t){super.unload(t),this._loadStates.get(t.key.id)?.destroy(),this._loadStates.delete(t.key.id)}async _fetchPages(t){const s=4,e=20;let i=0,r=t.pageStart,n=1;for(;i<e&&!t.done;){const e=[];for(let s=0;s<n;s++)e.push(this._fetchChunk(t,r++));const h=await Promise.all(e);for(const s of h)(0!==s.size()||s.first)&&(t.add(s.page,!s.reader.exceededTransferLimit),S(t.options),this._addChunk(s));i++,n=Math.min(n+1,s)}}async _fetchChunk(t,s){const e=t.subscription.tile,i=this._queryInfo.createPagedTileQuery(e,s),r=await this._fetch(i,t.options);return new ze(r,i.inner.toJSON(),e,s,!1)}}let Ve;const We=new Array(128).fill(void 0);function Qe(t){return We[t]}We.push(void 0,null,!0,!1);let Xe=We.length;function Ze(t){t<132||(We[t]=Xe,Xe=t)}function Ye(t){const s=Qe(t);return Ze(t),s}function He(t){Xe===We.length&&We.push(We.length+1);const s=Xe;return Xe=We[s],We[s]=t,s}const Je="undefined"!=typeof TextDecoder?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};"undefined"!=typeof TextDecoder&&Je.decode();let Ke=null;function ti(){return null!==Ke&&0!==Ke.byteLength||(Ke=new Uint8Array(Ve.memory.buffer)),Ke}function si(t,s){return t>>>=0,Je.decode(ti().subarray(t,t+s))}const ei="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>{Ve.__wbindgen_export_0.get(t.dtor)(t.a,t.b)}));function ii(t,s,e,i){const r={a:t,b:s,cnt:1,dtor:e},n=(...t)=>{r.cnt++;const s=r.a;r.a=0;try{return i(s,r.b,...t)}finally{0==--r.cnt?(Ve.__wbindgen_export_0.get(r.dtor)(s,r.b),ei.unregister(r)):r.a=s}};return n.original=r,ei.register(n,r,r),n}function ri(t,s,e){Ve._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7be72b1871260ae2(t,s,He(e))}function ni(){Ve.enableTracing()}let hi=0;const oi="undefined"!=typeof TextEncoder?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},ai="function"==typeof oi.encodeInto?function(t,s){return oi.encodeInto(t,s)}:function(t,s){const e=oi.encode(t);return s.set(e),{read:t.length,written:e.length}};function ci(t,s,e){if(void 0===e){const e=oi.encode(t),i=s(e.length,1)>>>0;return ti().subarray(i,i+e.length).set(e),hi=e.length,i}let i=t.length,r=s(i,1)>>>0;const n=ti();let h=0;for(;h<i;h++){const s=t.charCodeAt(h);if(s>127)break;n[r+h]=s}if(h!==i){0!==h&&(t=t.slice(h)),r=e(r,i,i=h+3*t.length,1)>>>0;const s=ti().subarray(r+h,r+i);h+=ai(t,s).written,r=e(r,i,h,1)>>>0}return hi=h,r}let ui=null;function li(){return(null===ui||!0===ui.buffer.detached||void 0===ui.buffer.detached&&ui.buffer!==Ve.memory.buffer)&&(ui=new DataView(Ve.memory.buffer)),ui}function di(t,s){try{return t.apply(this,s)}catch(t){Ve.__wbindgen_exn_store(He(t))}}function fi(t,s,e,i){Ve.wasm_bindgen__convert__closures__invoke2_mut__h35729c14da098d24(t,s,He(e),He(i))}let pi=null;function yi(){return null!==pi&&0!==pi.byteLength||(pi=new Uint16Array(Ve.memory.buffer)),pi}function gi(t,s){const e=s(2*t.length,2)>>>0;return yi().set(t,e/2),hi=t.length,e}function wi(t,s,e){const i=ci(t,Ve.__wbindgen_malloc,Ve.__wbindgen_realloc),r=hi;return Ye(Ve.readMetadata(i,r,He(s),He(e)))}function mi(t,s){if(!(t instanceof s))throw new Error(`expected instance of ${s.name}`);return t.ptr}function bi(t,s,e,i,r){const n=ci(t,Ve.__wbindgen_malloc,Ve.__wbindgen_realloc),h=hi;mi(i,xi);var o=i.__destroy_into_raw();mi(r,Mi);var a=r.__destroy_into_raw();return Ye(Ve.readFile(n,h,He(s),He(e),o,a))}function Si(t){return null==t}const Ii="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Ve.__wbg_fieldmetadata_free(t>>>0,1)));class _i{static __wrap(t){t>>>=0;const s=Object.create(_i.prototype);return s.__wbg_ptr=t,Ii.register(s,s.__wbg_ptr,s),s}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Ii.unregister(this),t}free(){const t=this.__destroy_into_raw();Ve.__wbg_fieldmetadata_free(t,0)}get name(){let t,s;try{const r=Ve.__wbindgen_add_to_stack_pointer(-16);Ve.fieldmetadata_name(r,this.__wbg_ptr);var e=li().getInt32(r+0,!0),i=li().getInt32(r+4,!0);return t=e,s=i,si(e,i)}finally{Ve.__wbindgen_add_to_stack_pointer(16),Ve.__wbindgen_free(t,s,1)}}get index(){return Ve.fieldmetadata_index(this.__wbg_ptr)}get type(){return["esriFieldTypeSmallInteger","esriFieldTypeInteger","esriFieldTypeBigInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong","esriFieldTypeString","esriFieldTypeDate","esriFieldTypeOID","esriFieldTypeGeometry","esriFieldTypeBlob","esriFieldTypeRaster","esriFieldTypeGUID","esriFieldTypeGlobalID","esriFieldTypeXML","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"][Ve.fieldmetadata_esri_type(this.__wbg_ptr)]}}const Fi="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Ve.__wbg_filemetadata_free(t>>>0,1)));class xi{static __wrap(t){t>>>=0;const s=Object.create(xi.prototype);return s.__wbg_ptr=t,Fi.register(s,s.__wbg_ptr,s),s}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Fi.unregister(this),t}free(){const t=this.__destroy_into_raw();Ve.__wbg_filemetadata_free(t,0)}version(){return Ve.filemetadata_version(this.__wbg_ptr)}numRows(){return Ve.filemetadata_numRows(this.__wbg_ptr)>>>0}numFields(){return Ve.filemetadata_numFields(this.__wbg_ptr)>>>0}keyValueMetadata(t){try{const i=Ve.__wbindgen_add_to_stack_pointer(-16),r=ci(t,Ve.__wbindgen_malloc,Ve.__wbindgen_realloc),n=hi;Ve.filemetadata_keyValueMetadata(i,this.__wbg_ptr,r,n);var s=li().getInt32(i+0,!0),e=li().getInt32(i+4,!0);let h;return 0!==s&&(h=si(s,e).slice(),Ve.__wbindgen_free(s,1*e,1)),h}finally{Ve.__wbindgen_add_to_stack_pointer(16)}}getFieldIndex(t){const s=ci(t,Ve.__wbindgen_malloc,Ve.__wbindgen_realloc),e=hi,i=Ve.filemetadata_getFieldIndex(this.__wbg_ptr,s,e);return 16777215===i?void 0:i}getFieldByIndex(t){const s=Ve.filemetadata_getFieldByIndex(this.__wbg_ptr,t);return 0===s?void 0:_i.__wrap(s)}}const vi="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Ve.__wbg_geometryinfodescriptor_free(t>>>0,1)));class Mi{static __wrap(t){t>>>=0;const s=Object.create(Mi.prototype);return s.__wbg_ptr=t,vi.register(s,s.__wbg_ptr,s),s}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,vi.unregister(this),t}free(){const t=this.__destroy_into_raw();Ve.__wbg_geometryinfodescriptor_free(t,0)}get wkbIndex(){const t=Ve.__wbg_get_geometryinfodescriptor_wkbIndex(this.__wbg_ptr);return 16777215===t?void 0:t}set wkbIndex(t){Ve.__wbg_set_geometryinfodescriptor_wkbIndex(this.__wbg_ptr,Si(t)?16777215:t)}get lngIndex(){const t=Ve.__wbg_get_geometryinfodescriptor_lngIndex(this.__wbg_ptr);return 16777215===t?void 0:t}set lngIndex(t){Ve.__wbg_set_geometryinfodescriptor_lngIndex(this.__wbg_ptr,Si(t)?16777215:t)}get latIndex(){const t=Ve.__wbg_get_geometryinfodescriptor_latIndex(this.__wbg_ptr);return 16777215===t?void 0:t}set latIndex(t){Ve.__wbg_set_geometryinfodescriptor_latIndex(this.__wbg_ptr,Si(t)?16777215:t)}static new(){const t=Ve.geometryinfodescriptor_new();return Mi.__wrap(t)}}const Ai="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Ve.__wbg_parquetchunk_free(t>>>0,1)));class Ei{static __wrap(t){t>>>=0;const s=Object.create(Ei.prototype);return s.__wbg_ptr=t,Ai.register(s,s.__wbg_ptr,s),s}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Ai.unregister(this),t}free(){const t=this.__destroy_into_raw();Ve.__wbg_parquetchunk_free(t,0)}size(){return Ve.parquetchunk_size(this.__wbg_ptr)>>>0}hasField(t){return 0!==Ve.parquetchunk_hasField(this.__wbg_ptr,t)}readX(t){return Ve.parquetchunk_readX(this.__wbg_ptr,t)}readY(t){return Ve.parquetchunk_readY(this.__wbg_ptr,t)}readAttributes(t){return Ye(Ve.parquetchunk_readAttributes(this.__wbg_ptr,t))}readAttribute(t,s){return Ye(Ve.parquetchunk_readAttribute(this.__wbg_ptr,t,s))}}const ji="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Ve.__wbg_parquetfile_free(t>>>0,1)));let Ti=class t{static __wrap(s){s>>>=0;const e=Object.create(t.prototype);return e.__wbg_ptr=s,ji.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,ji.unregister(this),t}free(){const t=this.__destroy_into_raw();Ve.__wbg_parquetfile_free(t,0)}metadata(){const t=Ve.parquetfile_metadata(this.__wbg_ptr);return xi.__wrap(t)}readChunksWithCallback(t,s){const e=gi(t,Ve.__wbindgen_malloc),i=hi;return Ye(Ve.parquetfile_readChunksWithCallback(this.__wbg_ptr,e,i,He(s)))}updateChunks(t){const s=gi(t,Ve.__wbindgen_malloc),e=hi;return Ye(Ve.parquetfile_updateChunks(this.__wbg_ptr,s,e))}};const ki="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Ve.__wbg_rangeproviderjs_free(t>>>0,1)));class Ci{static __wrap(t){t>>>=0;const s=Object.create(Ci.prototype);return s.__wbg_ptr=t,ki.register(s,s.__wbg_ptr,s),s}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,ki.unregister(this),t}free(){const t=this.__destroy_into_raw();Ve.__wbg_rangeproviderjs_free(t,0)}static new(t,s){const e=Ve.rangeproviderjs_new(He(t),He(s));return Ci.__wrap(e)}static withFetch(){const t=Ve.rangeproviderjs_withFetch();return Ci.__wrap(t)}}async function Ri(t,s){if("function"==typeof Response&&t instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(t,s)}catch(s){if("application/wasm"==t.headers.get("Content-Type"))throw s;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",s)}const e=await t.arrayBuffer();return await WebAssembly.instantiate(e,s)}{const e=await WebAssembly.instantiate(t,s);return e instanceof WebAssembly.Instance?{instance:e,module:t}:e}}function Pi(){const t={wbg:{}};return t.wbg.__wbg_new_abda76e883ba8a5f=function(){return He(new Error)},t.wbg.__wbg_stack_658279fe44541cf6=function(t,s){const e=ci(Qe(s).stack,Ve.__wbindgen_malloc,Ve.__wbindgen_realloc),i=hi;li().setInt32(t+4,i,!0),li().setInt32(t+0,e,!0)},t.wbg.__wbg_error_f851667af71bcfc6=function(t,s){let e,i;try{e=t,i=s,console.error(si(t,s))}finally{Ve.__wbindgen_free(e,i,1)}},t.wbg.__wbindgen_object_drop_ref=function(t){Ye(t)},t.wbg.__wbindgen_is_function=function(t){return"function"==typeof Qe(t)},t.wbg.__wbg_self_3093d5d1f7bcb682=function(){return di((function(){return He(self.self)}),arguments)},t.wbg.__wbg_window_3bcfc4d31bc012f8=function(){return di((function(){return He(window.window)}),arguments)},t.wbg.__wbg_globalThis_86b222e13bdf32ed=function(){return di((function(){return He(globalThis.globalThis)}),arguments)},t.wbg.__wbg_global_e5a3fe56f8be9485=function(){return di((function(){return He(global.global)}),arguments)},t.wbg.__wbindgen_is_undefined=function(t){return void 0===Qe(t)},t.wbg.__wbg_newnoargs_76313bd6ff35d0f2=function(t,s){return He(new Function(si(t,s)))},t.wbg.__wbindgen_object_clone_ref=function(t){return He(Qe(t))},t.wbg.__wbindgen_number_new=function(t){return He(t)},t.wbg.__wbg_new_525245e2b9901204=function(){return He(new Object)},t.wbg.__wbindgen_string_new=function(t,s){return He(si(t,s))},t.wbg.__wbg_call_1084a111329e68ce=function(){return di((function(t,s){return He(Qe(t).call(Qe(s)))}),arguments)},t.wbg.__wbg_call_89af060b4e1523f2=function(){return di((function(t,s,e){return He(Qe(t).call(Qe(s),Qe(e)))}),arguments)},t.wbg.__wbg_call_7de908392845a9a5=function(){return di((function(t,s,e,i,r){return He(Qe(t).call(Qe(s),Qe(e),Qe(i),Qe(r)))}),arguments)},t.wbg.__wbg_valueOf_563b3487b1b116aa=function(t){return Qe(t).valueOf()},t.wbg.__wbg_set_eacc7d73fefaafdf=function(){return di((function(t,s,e){return Reflect.set(Qe(t),Qe(s),Qe(e))}),arguments)},t.wbg.__wbg_buffer_b7b08af79b0b0974=function(t){return He(Qe(t).buffer)},t.wbg.__wbg_new_b85e72ed1bfd57f9=function(t,s){try{var e={a:t,b:s},i=(t,s)=>{const i=e.a;e.a=0;try{return fi(i,e.b,t,s)}finally{e.a=i}};return He(new Promise(i))}finally{e.a=e.b=0}},t.wbg.__wbg_resolve_570458cb99d56a43=function(t){return He(Promise.resolve(Qe(t)))},t.wbg.__wbg_then_95e6edc0f89b73b1=function(t,s){return He(Qe(t).then(Qe(s)))},t.wbg.__wbg_then_876bb3c633745cc6=function(t,s,e){return He(Qe(t).then(Qe(s),Qe(e)))},t.wbg.__wbg_new_ea1883e1e5e86686=function(t){return He(new Uint8Array(Qe(t)))},t.wbg.__wbg_length_8339fcf5d8ecd12e=function(t){return Qe(t).length},t.wbg.__wbg_set_d1e79e2388520f18=function(t,s,e){Qe(t).set(Qe(s),e>>>0)},t.wbg.__wbindgen_throw=function(t,s){throw new Error(si(t,s))},t.wbg.__wbindgen_memory=function(){return He(Ve.memory)},t.wbg.__wbg_queueMicrotask_48421b3cc9052b68=function(t){return He(Qe(t).queueMicrotask)},t.wbg.__wbindgen_cb_drop=function(t){const s=Ye(t).original;if(1==s.cnt--)return s.a=0,!0;return!1},t.wbg.__wbg_queueMicrotask_12a30234db4045d3=function(t){queueMicrotask(Qe(t))},t.wbg.__wbg_parquetchunk_new=function(t){return He(Ei.__wrap(t))},t.wbg.__wbindgen_bigint_from_i64=function(t){return He(t)},t.wbg.__wbg_parquetfile_new=function(t){return He(Ti.__wrap(t))},t.wbg.__wbg_filemetadata_new=function(t){return He(xi.__wrap(t))},t.wbg.__wbindgen_closure_wrapper1401=function(t,s,e){return He(ii(t,s,74,ri))},t}function qi(t,s){return Ve=t.exports,Oi.__wbindgen_wasm_module=s,ui=null,pi=null,Ke=null,Ve}function Di(t){if(void 0!==Ve)return Ve;void 0!==t&&Object.getPrototypeOf(t)===Object.prototype?({module:t}=t):console.warn("using deprecated parameters for `initSync()`; pass a single object instead");const s=Pi();t instanceof WebAssembly.Module||(t=new WebAssembly.Module(t));return qi(new WebAssembly.Instance(t,s),t)}async function Oi(t){if(void 0!==Ve)return Ve;void 0!==t&&Object.getPrototypeOf(t)===Object.prototype?({module_or_path:t}=t):console.warn("using deprecated parameters for the initialization function; pass a single object instead");const s=Pi();("string"==typeof t||"function"==typeof Request&&t instanceof Request||"function"==typeof URL&&t instanceof URL)&&(t=fetch(t));const{instance:e,module:i}=await Ri(await t,s);return qi(e,i)}const Gi=Object.freeze(Object.defineProperty({__proto__:null,FieldMetadata:_i,FileMetadata:xi,GeometryInfoDescriptor:Mi,ParquetChunk:Ei,ParquetFile:Ti,RangeProviderJs:Ci,default:Oi,enableTracing:ni,initSync:Di,readFile:bi,readMetadata:wi},Symbol.toStringTag,{value:"Module"}));let Li=null;async function $i(){return Li||(Li=Ni()),Li}async function Ni(){const t=await Promise.resolve().then((()=>Gi));return await t.default({module_or_path:G("esri/libs/parquet/pkg/arcgis_parquet_bg.wasm")}),t.enableTracing(),t}const zi=t=>async function(s,e,i){const r=t(),{data:n}=await L(s,{responseType:"array-buffer",query:r,headers:{range:`bytes=${e}-${i}`}});return n},Ui=t=>async function(s){const e=t(),{data:i}=await L(s,{responseType:"native",method:"head",query:e}),r=i.headers.get("Content-Length");if(null==r)throw new Error("Unable to parse content length");return parseInt(r,10)};class Bi{static async create(t,s){const e=await $i(),i=await e.readMetadata(t,zi(s),Ui(s));return Bi.fromFileMetadata(i)}static fromFileMetadata(t){const s=[];for(let e=0;e<t.numFields();e++){const i=t.getFieldByIndex(e);s.push({name:i.name,type:i.type,alias:i.name,index:i.index}),i.free()}return new Bi(t,s)}constructor(t,s){this._inner=t,this.fields=s}destroy(){this._inner.free()}[Symbol.dispose](){this.destroy()}get size(){return this._inner.numRows()}getFieldIndex(t){return this._inner.getFieldIndex(t)}tryReadGeoMetadata(){const t=this._inner.keyValueMetadata("geo");return null==t?null:JSON.parse(t)}}class Vi{static async create(t,s){const e=await $i(),i=zi(s.getCustomParameters),r=Ui(s.getCustomParameters),n=await wi(t,i,r),{geometryInfo:h}=s,o=Mi.new();"location"===h.type?(o.latIndex=n.getFieldIndex(h.latitudeFieldName),o.lngIndex=n.getFieldIndex(h.longitudeFieldName)):o.wkbIndex=n.getFieldIndex(h.primaryFieldName);const a=await e.readFile(t,i,r,n,o);return new Vi(a,Bi.fromFileMetadata(a.metadata()))}constructor(t,s){this.inner=t,this.metadata=s}destroy(){this.inner.free(),this.metadata.destroy()}[Symbol.dispose](){this.destroy()}}class Wi extends Xs{constructor(t,s,e,i){super(),this._reader=t,this._queryJSON=s,this._page=e,this._end=i,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return 0===this._page}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(t){const s=this.queryFeaturesInBounds(t.bounds);return s.setTransformForDisplay(t.transform),s}}class Qi extends et{constructor(t,s,e,i,r,n=new Uint32Array(i.size())){super(t),this._fields=s,this._geometryInfo=e,this._inner=i,this._chunkId=r,this._displayIds=n,this._index=-1,this._size=this._inner.size(),"geometry"===this._geometryInfo.type&&(this._primaryGeometryIndex=this._fields.get(this._geometryInfo.primaryFieldName)?.index),null!=t.objectIdField&&(this._objectIdFieldIndex=this._fields.get(t.objectIdField)?.index),this._chunkId>65535&&console.error("Exceeded max allowed parquet reader size")}destroy(){super.destroy(),this._inner.free()}get fields(){return this._fields}get geometryType(){return"esriGeometryPoint"}get hasFeatures(){return!0}get hasNext(){throw new Error("Method not implemented.")}get exceededTransferLimit(){return!1}get hasZ(){return!1}get hasM(){return!1}getInTransform(){return null}getSize(){return this._size}getCursor(){return this.copy()}getAttributeHash(){let t="";for(const s of this.fields.fields)t+=this._readAttribute(s.name,!1)+".";return t}getObjectId(){return null!=this._objectIdFieldIndex?this._inner.readAttribute(this._index,this._objectIdFieldIndex):this._index<<16|this._chunkId}getDisplayId(){return this._displayIds[this._index]}setDisplayId(t){this._displayIds[this._index]=t}setIndex(t){this._index=t}getIndex(){return this._index}next(){for(;++this._index<this._size&&!this._getExists(););return this._index<this._size}readGeometryArea(){throw new Error("Method not implemented.")}copy(){const t=new Qi(this.metadata,this._fields,this._geometryInfo,this._inner,this._chunkId,this._displayIds);return this.copyInto(t),t}copyInto(t){super.copyInto(t),t._index=this._index}_readGeometry(t){const s=$(this._inner.readX(this._index),this._inner.readY(this._index));return new kt([],s)}_readX(){return this._readGeometry()?.coords[0]}_readY(){return this._readGeometry()?.coords[1]}_readServerCentroid(){return null}_readAttribute(t,s){const e=this.fields.get(t);if(!e)return;const i=this._inner.readAttribute(this._index,e.index);if(null==i)return i;const r=this.fields.isDateField(e.name);return s?null==i?i:r?new Date(i):i:i}_readAttributes(){const t={};for(const s of this._fields.fields)this._inner.hasField(s.index)&&s.index!==this._primaryGeometryIndex&&(t[s.name]=this._readAttribute(s.name,!1));return null==this._objectIdFieldIndex&&(t.__OBJECTID=this.getObjectId()),t}}class Xi extends pe{constructor(t,s,e,i){super(i),this._service=t,this._metadata=s,this._schema=e,this._chunkId=0,this._files=[],this._availableFields=new Set(e.mutable.availableFields);const{geometryInfo:r}=this._service;"location"===r.type?(this._availableFields.add(r.latitudeFieldName),this._availableFields.add(r.longitudeFieldName)):this._availableFields.add(r.primaryFieldName)}destroy(){for(const t of this._files)t.destroy()}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}async updateFields(t){await this._promise;const s=new Set(t),e=N(s,this._availableFields);this._availableFields=z(e,this._availableFields),await Promise.all(this._files.map((t=>{const s=Array.from(e).map((s=>t.metadata.getFieldIndex(s)));return t.inner.updateChunks(new Uint16Array(s))})))}async load(t){return null==this._promise&&(this._promise=this._download()),this._promise}unload(t){}async addParquetFile(t){this._insert(t)}async _insert(t){const s=await Vi.create(t,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.mutable.dataFilter.customParameters}),{geometryInfo:e}=this._service;S(this._options);const{fields:i,timeZoneByFieldName:r}=this._service.metadata.fieldsIndex,n=i.map((t=>({...t,index:s.metadata.getFieldIndex(t.name)}))),h=p.fromJSON({fields:n,timeZoneByFieldName:r}),o=new Uint16Array(Array.from(this._availableFields.values()).map((t=>h.get(t)?.index)));await s.inner.readChunksWithCallback(o,(t=>{const s=this._chunkId++,i=new Qi(this._metadata,h,e,t,s),r=new Wi(i,null,s,!1);this._store.insert(r)})),this._files.push(s)}async _download(){try{await Promise.all(this._service.source.urls.map((t=>this._insert(t))));const t=new Wi(Zs.empty(this._metadata),null,-1,!0);this._store.insert(t)}catch(t){throw console.error(t),t}}}class Zi extends Oe{constructor(t,s,e,i,r,n){super(t,s,e,r,n),this._random=new U(1e3),this._featureCount=i}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(t){return null==this._promise&&(this._promise=this._downloadPages(this._featureCount)),this._promise}unload(t){}async _downloadPages(t){const s=Math.ceil(t/this._queryInfo.pageSize),e=Array.from({length:s},((t,s)=>s)).sort(((t,s)=>this._random.getInt()-this._random.getInt())),i=await Promise.all(e.map((t=>this._downloadPage(t)))),r=new Wi(Zs.empty(this._metadata),null,-1,!0);this._store.insert(r);const n=i.filter((t=>t));if(n.length)throw new T("featurelayer-query","Encountered errors when downloading data",{errors:n})}async _downloadPage(t){try{const s=this._queryInfo.createPagedQuery(t),e=await this._fetch(s,this._options),i=new Wi(e,s.inner.toJSON(),t,!1);return S(this._options),this._store.insert(i),null}catch(t){return t}}}const Yi="__esri_stream_id__",Hi="__esri_timestamp__",Ji=1e3;class Ki{constructor(t,s,e,i,r=128){this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=e,this._purgeOptions=i,this.store=t,this.objectIdField=s,this.purgeInterval=r,this._useGeneratedIds=this.objectIdField===Yi}removeById(t){this._removed.push(t)}removeByTrackId(t){const s=this._trackIdToObservations.get(t);if(s)for(const t of s.entries)this._removed.push(t)}add(t){if(this._useGeneratedIds){const s=this._nextId();t.attributes[this.objectIdField]=s,t.objectId=s}else t.objectId=t.attributes[this.objectIdField];const s=t.objectId;if(this._addOrUpdated.set(s,t),this._maxAge=Math.max(this._maxAge,t.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return null==this._trackIdLessObservations&&(this._trackIdLessObservations=new Lt(1e5)),void this._trackIdLessObservations.enqueue(s);const e=t.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(e)){const t=null!=this._purgeOptions?.maxObservations?this._purgeOptions.maxObservations:Ji,s=B(t,0,Ji);this._trackIdToObservations.set(e,new Lt(s))}const i=this._trackIdToObservations.get(e),r=i?.enqueue(s);null!=r&&(this._addOrUpdated.has(r)?this._addOrUpdated.delete(r):this._removed.push(r))}checkForUpdates(){const t=this._getToAdd(),s=this._getToRemove(),e=performance.now();e-this._lastPurge>=this.purgeInterval&&(this._purge(e),this._lastPurge=e);const i=[];if(null!=s)for(const t of s){const s=this.store.removeById(t);null!=s&&i.push(s)}const r=[];if(null!=t){const i=new Set(s??[]);for(const s of t)i.has(s.objectId)||(s.attributes[Hi]=e,this.store.add(s),r.push(s))}return!(!r.length&&!i?.length)&&(this.store.update(r,i),!0)}_getToAdd(){if(!this._addOrUpdated.size)return null;const t=new Array(this._addOrUpdated.size);let s=0;return this._addOrUpdated.forEach((e=>t[s++]=e)),this._addOrUpdated.clear(),t}_getToRemove(){const t=this._removed;return this._removed.length?(this._removed=[],t):null}_nextId(){const t=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,t}_purge(t){const s=this._purgeOptions;null!=s&&(this._purgeSomeByDisplayCount(s),this._purgeByAge(s),this._purgeByAgeReceived(t,s),this._purgeTracks())}_purgeSomeByDisplayCount(t){if(!t.displayCount)return;let s=this.store.size;if(s>t.displayCount){if(this._timeInfo.trackIdField)for(const e of this._trackIdToObservations.values())if(s>t.displayCount&&e.size){const t=e.dequeue();this._removed.push(t),s--}if(null!=this._trackIdLessObservations){let e=s-t.displayCount;for(;e-- >0;){const t=this._trackIdLessObservations.dequeue();null!=t&&this._removed.push(t)}}}}_purgeByAge(t){const s=this._timeInfo?.startTimeField;if(!t.age||!s)return;const e=60*t.age*1e3,i=this._maxAge-e;this.store.forEach((t=>{t.attributes[s]<i&&this._removed.push(t.objectId)}))}_purgeByAgeReceived(t,s){if(!s.ageReceived)return;const e=t-60*s.ageReceived*1e3;this.store.forEach((t=>{t.attributes[Hi]<e&&this._removed.push(t.objectId)}))}_purgeTracks(){this._trackIdToObservations.forEach(((t,s)=>{0===t.size&&this._trackIdToObservations.delete(s)}))}}let tr=class extends E{constructor(t){super(t)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};v([M()],tr.prototype,"connection",void 0),v([M()],tr.prototype,"connectionStatus",null),v([M()],tr.prototype,"errorString",null),tr=v([A("esri.views.2d.layers.features.sources.StreamConnectionState")],tr);class sr{constructor(t,s){this._metadata=t,this._onUpdate=s,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return Zs.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(t){this._objectIdToFeature.set(t.objectId,t)}forEach(t){this._objectIdToFeature.forEach(t)}removeById(t){const s=this._objectIdToFeature.get(t);return s?(this._objectIdToFeature.delete(t),s):null}clear(){this._objectIdToFeature=new Map}update(t,s){this._onUpdate(t?.length??0)}}class er extends Xs{constructor(t){super(),this._reader=t,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(t){const s=this.queryFeaturesInBounds(t.bounds);return s.setTransformForDisplay(t.transform),s}}class ir extends pe{constructor(t,s,e,i,n){super(e),this._service=t,this._dataFilter=s,this._streamOptions=i,this._metadata=n,this._connectionState=new tr,this._forceRefresh=!1,this.events=new r;const{objectIdField:h,timeInfo:o}=this._metadata,{purgeOptions:a}=s;this._stagingStore=new sr(this._metadata,(t=>this.events.emit("features-updated",t))),this._manager=new Ki(this._stagingStore,h,o,a),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const t=null!=this._chunk;this._manager.checkForUpdates()||!t||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new er(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")):this.events.emit("tick")}async updateFields(t){throw new Error("Updating available fields not supported for StreamLayer")}async load(t){}unload(t){}disconnect(){this._connection=b(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(null!=this._connection)return;const{geometryType:t,spatialReference:s}=this._metadata,{maxReconnectionAttempts:e,maxReconnectionInterval:i,geometryDefinition:r,definitionExpression:n,customParameters:h}=this._dataFilter;this._connection=$t(this._service.source,s,this._streamOptions.outSR,t,n,r,e,i,h),this._handlesGroup=q([this._connection.on("data-received",(t=>this._onFeature(t))),this._connection.on("message-received",(t=>this._onWebSocketMessage(t)))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(t){this._connection?.updateCustomParameters(t)}sendMessageToSocket(t){this._connection?.sendMessageToSocket(t)}sendMessageToClient(t){this._connection?.sendMessageToClient(t)}_onWebSocketMessage(t){if("type"in t)switch(t.type){case"delete":if(t.objectIds)for(const s of t.objectIds)this._manager.removeById(s);if(t.trackIds)for(const s of t.trackIds)this._manager.removeByTrackId(s);break;case"clear":this.clear()}this.events.emit("message-received",t)}_onFeature(t){try{this._manager.add(t),this.events.emit("data-received",t)}catch(t){}}}class rr{constructor(t){this._onChange=t,this._chunks=new Map,this._chunksToRemove=[],this.events=new r,this.featureAdapter=new ct}destroy(){this.clear()}clear(){for(const t of this._chunks.values())this._chunksToRemove.push(t);this._chunks.clear(),null!=this._localEditChunk&&this._chunksToRemove.push(this._localEditChunk),this._localEditChunk=null}*chunks(){this._localEditChunk&&(yield this._localEditChunk),this._localOverridesChunk&&(yield this._localOverridesChunk),yield*this._chunks.values()}dataChunks(){return this._chunks.values()}insert(t){g("esri-2d-update-debug")&&console.debug(`Chunk[${t.chunkId}] SourceChunkStore.insert`),this._localOverridesChunk?.overriddenIds.size&&(t.reader.removeIds(this._localOverridesChunk.overriddenIds),t.invalidate()),this._localEditChunk?.overriddenIds.size&&this._localEditChunk.removeOverrides(t),this._chunks.set(t.chunkId,t),this.events.emit("changed"),this._onChange()}remove(t){g("esri-2d-update-debug")&&console.debug(`Chunk[${t.chunkId}] SourceChunkStore.remove`),this._chunks.delete(t.chunkId),this._chunksToRemove.push(t)}cleanupRemovedChunks(){const t=this._chunksToRemove;return this._chunksToRemove=[],t}applyLocalOverrides(t,s){null==this._localOverridesChunk&&(this._localOverridesChunk=new Hs(s,"localOverride")),this._localOverridesChunk.applyOverrides(t);for(const t of this._chunks.values())t.reader.removeIds(this._localOverridesChunk.overriddenIds),t.invalidate();this.events.emit("changed")}applyLocalEdit(t,s){null==this._localEditChunk&&(this._localEditChunk=new Hs(s,"localEdit")),this._localEditChunk.applyOverrides(t);for(const t of this._chunks.values())t.reader.removeIds(this._localEditChunk.overriddenIds),t.invalidate();this.events.emit("changed")}forEach(t){const s=new Set;for(const e of this.chunks()){const i=e.reader.getCursor();for(;i.next();){const e=i.getObjectId();s.has(e)||(t(i.copy()),s.add(e))}}}forEachUnsafe(t){const s=new Set;for(const e of this.chunks()){const i=e.reader.getCursor();for(;i.next();){const e=i.getObjectId();s.has(e)||(t(i),s.add(e))}}}forEachInBounds(t,s){const e=new Set;for(const i of this.chunks()){const r=i.queryFeaturesInBounds(t);for(;r.next();){const t=r.getObjectId();e.has(t)||(s(r.copy()),e.add(t))}}}forEachBounds(t,s){const e=n();for(const i of t){i.getBounds(e)&&s(e)}}}class nr{constructor(t,s,e,i,r){this.service=t,this._aggregateAdapter=s,this._subscriptions=e,this._onChange=i,this._connection=r,this._updateTracking=new Nt({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._store=new rr(this._onChange),this._metadata=nt.createFeature(t.metadata)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy(),"memory"===this.service.type&&this.service.source.map((t=>t.close()))}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return null==this._streamMessenger&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return ae.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:t}=this._schema.mutable,s=this._schema.mutable.availableFields,e=this._metadata;this._queryEngine=new Tt({featureStore:this._store,fieldsIndex:e.fieldsIndex,geometryType:e.geometryType,objectIdField:e.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:e.timeInfo,definitionExpression:t.definitionExpression,availableFields:s})}return this._queryEngine}get isStream(){return"stream"===this._schema.type}chunks(){return Array.from(this._store.chunks())}cleanupRemovedChunks(){return this._store.cleanupRemovedChunks()}onSubscribe(t){this._connection.onEvent({type:"subscribe",tile:t.tile.id});const s=this._strategy?.load(t);s&&(s.then((()=>this._connection.onEvent({type:"loaded",tile:t.tile.id}))).catch((s=>this._connection.onEvent({type:"error",tile:t.tile.id,error:s}))),this._updateTracking.addPromise(s))}onResume(t){this._updateTracking.addPromise(V(this._strategy?.load(t)))}onUnsubscribe(t){this._connection.onEvent({type:"unsubscribe",tile:t.tile.id}),this._strategy?.unload(t)}getLocalEdit(t){return this._updateTracking.addPromise(this._getGetLocalEdit(t))}applyLocalEdit(t){this._didInvalidateData=!0,this._store.applyLocalEdit(t,this.metadata)}async update(t,s){const e=t.source,i=w(this._schema?.mutable,e.mutable);if(!i)return!1;if(g("esri-2d-update-debug")&&console.debug(`Version[${s}] FeatureSource.update`,{changes:i}),this._schema=e,this._queryEngine?.destroy(),this._queryEngine=null,"feature-service"===this.service.type&&null!=this.service.queryMetadata.lastEditDate&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),null==this._streamMessenger&&"stream"===this._schema.type&&this._initStreamMessenger(),W(i,"sourceRefreshVersion")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if(("feature"===e.type||"parquet"===e.type)&&W(i,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(s);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(e.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(t){this._connection.onEvent({type:"updateFieldsError",error:t})}}return!1}return!(!Q(i,"dataFilter")&&!Q(i,"sourceRefreshVersion"))&&(await this._updateStrategy(s),!0)}async addParquetFile(t){this._strategy.addParquetFile(t)}_initStreamMessenger(){null==this._streamMessenger&&(this._streamMessenger=new fe(this._connection))}async _getGetLocalEdit(t){if(t.historicMoment&&"feature"===this._schema.type&&(this._schema.mutable.dataFilter.historicMoment=t.historicMoment,this._strategy.unsafeSetQueryHistoricMoment(new Date(t.historicMoment))),"edit-by-feature"===t.type){const s=[...t.added,...t.updated].map((t=>Mt.fromJSON(t,this.metadata.objectIdField)));return{reader:Zs.fromOptimizedFeatures(s,this.metadata),removed:this._resolveIdentifiers(t.removed)}}const s=this._resolveIdentifiers(t.removed);if(!t.updated.length&&!t.added.length)return{reader:Zs.empty(this.metadata),removed:s};const e=this._resolveIdentifiers([...t.added,...t.updated]);return{reader:await this._strategy.queryByObjectId(e),removed:s}}_resolveIdentifiers(t){const s=[],e=[];for(const i of t)null!=i.objectId&&-1!==i.objectId?e.push(i.objectId):s.push(i.globalId);if(s.length){const t=new Set(s),i=this.metadata.globalIdField;if(null==i)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");this._store.forEachUnsafe((s=>{const r=s.readAttribute(i);t.has(r)&&e.push(s.getObjectId())}))}return e}async _queryLastEditDateChanged(){if(null==this._lastEditDate)return!1;const t=this.service.source,s={...t.query,f:"json"},e=(await L(t.path,{query:s,responseType:"json"})).data.editingInfo.lastEditDate;return e!==this._lastEditDate&&(this._lastEditDate=e,!0)}async _createStrategy(){const t="isSourceHosted"in this.service&&this.service.isSourceHosted,s=Array.isArray(this.service.source),e=this.service.source&&"collection"in this.service.source,i=t||s||e;if("stream"===this._schema.type){const t=new ir(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=t,t}if("parquet"===this._schema.type){const t=this.service;return new Xi(t,this._metadata,this._schema,this._store)}const r=this.service,n=le.fromSchema(r,this._schema,this._metadata),h=await this._supportSnapshotMode(r,n);return h?new Zi(r,n,this._store,h.featureCount,this.metadata,this._connection):i?new Be(r,n,this._store,this.metadata,this._connection):new Ne(r,n,this._store,this.metadata,this._connection)}async _updateStrategy(t){const s=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:s.about});const e=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=s,g("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.updateStrategy`,{strategy:s});const i=Array.from(this._subscriptions.values());if(!i.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const r=Promise.all(i.map((t=>this._strategy.load(t).then((()=>this._connection.onEvent({type:"loaded",tile:t.tile.id}))).catch((s=>this._connection.onEvent({type:"error",tile:t.tile.id,error:s}))))));this._updateTracking.addPromise(r);try{e&&await r}catch(t){m(t)}this._connection.onEvent({type:"updateStrategyEnd"}),g("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.updateStrategyEnd`,{strategy:s})}async _supportSnapshotMode(t,s){const{queryMetadata:e}=t,i=e.snapshotInfo;if(!i||!i.supportsSnapshotMinThreshold||!i.snapshotCountThresholds)return null;const r=t.source,n=s.createQuery();n.inner.orderByFields=[],n.inner.returnGeometry=!1;const h=(await Pt(r,n.inner,{query:n.customParameters})).data.count,{min:o,max:a}=i.snapshotCountThresholds;return h<=o||i.supportsSnapshotMaxThreshold&&h<a?{featureCount:h}:null}}class hr{constructor(t,s){this.tile=t,this.version=s,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class or{constructor(t){this.inner=t,this.resolver=J()}}class ar{constructor(){this._aggregateAdapter={getFeatureObjectIds:t=>this._processor.getFeatureObjectIdsForAggregate(t)},this._subscriptions=new Map,this._updateRequested=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor?.destroy(),this._source?.destroy(),this._handles?.remove(),this._updateLocalEditsRequest=null,this._tileInfoView=null}onAttach(t){g("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const s=this._connection,e=X.fromJSON(t.tileInfoJSON);this._tileInfoView=new Z(e),this._source=new nr(t.service,this._aggregateAdapter,this._subscriptions,(()=>this._requestUpdate()),s),this._processor=new oe(s,this._source),this._handles=q([j((()=>this._source.updateTracking.updating),(()=>{this._requestUpdate(),V(this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}))}))])}onDetach(){g("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(t){this._connection=new zt(t)}get features(){const t=this._source?.queryEngine;if(!t)throw new T("no-queryEngine","No query engine defined");return t}get aggregates(){const t=this._processor?.aggregateQueryEngine;if(!t)throw new T("no-queryEngine","No aggregate query engine defined");return t}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(t){return this._processor.getDisplayFeatures(t)}getDisplayIds(t){return this._processor.getDisplayIds(t)}async updateSchema(t,s){return g("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new or({schema:t,version:s}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(t){const s=new or(t);return this._updateSubscriptionRequests.push(s),this._requestUpdate(),s.resolver.promise}updateHighlight(t){const s=new or(t);return this._updateHighlightRequests.push(s),this._requestUpdate(),s.resolver.promise}async addParquetFile(t){return this._source.addParquetFile(t)}async onEdits(t){if(null!=this._updateLocalEditsRequest)throw new T("InternalError - Already processing an edit");this._updateLocalEditsRequest=new or(t);const s=this._updateLocalEditsRequest.resolver.promise;return this._requestUpdate(),s}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(t,s){return this.features.executeQuery(t,s)}async queryHeatmapStatistics(t){const s=Math.round(K(t.radius));let i=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const n="string"==typeof t.fieldOffset,h=t.fieldOffset??0,o=Array.from(this._subscriptions.values()),a=this._source.chunks(),c=s**2,u=3/(Math.PI*c),l=2*s,d=Math.ceil(e/l);for(const s of o){const e=s.tile,o=new Float64Array(d*d);for(const s of a){const i=s.getTileReader(e);if(!i)continue;const r=i.getCursor();for(;r.next();){let s=1;if(null!=t.field){const e=r.readAttribute(t.field);s=n?-1*+e:+e+h}const e=r.readXForDisplay()/l,i=r.readYForDisplay()/l,a=Math.floor(e),f=Math.floor(i);if(a<0||f<0||a>=d||f>=d)continue;const p=((.5+a-e)*l)**2+((.5+f-i)*l)**2;if(p>c)continue;const y=s*(u*(1-p/c)**2);o[f+a*d]+=y}}for(let t=0;t<o.length;t++)i=Math.min(i,o[t]),r=Math.max(r,o[t])}return{max:r,min:i}}async getSampleFeatures(t){const s=this._source.chunks();if(s.reduce(((t,s)=>t+s.size()),0)<=t.minFeatureCount){if(!this._source.updateTracking.updating){const t=[];return this._source.store.forEachUnsafe((s=>t.push(s.readLegacyFeatureWorldSpace()))),t}return null}const e=new Set,i=[],r=s.map((t=>t.reader.getCursor())),n=new U,h=3*t.sampleSize;for(let o=0;o<h&&i.length<t.sampleSize;o++){const t=r[n.getIntRange(0,s.length-1)];if(0===t.getSize())continue;const h=n.getIntRange(0,t.getSize()-1);t.setIndex(h);const o=t.getObjectId();e.has(o)||(e.add(o),i.push(t.readLegacyFeatureWorldSpace()))}return i.length>=t.sampleSize?i:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,Y((()=>this._scheduleNextUpdate())))}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=t(this._doUpdate()).finally((()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()})),this._updateRequested=!1))}_subscribe(t){const s=t.tileId;if(this._subscriptions.has(s))return;g("esri-2d-update-debug")&&console.debug(`Tile[${s}] Pipeline.subscribe`);const e=new H(this._tileInfoView,s),i=new hr(e,t.version);this._subscriptions.set(s,i),this._source.onSubscribe(i),this._processor.onSubscribe(i)}_unsubscribe(t){const s=this._subscriptions.get(t);s&&(g("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.unsubscribe`),s.abort(),this._source.onUnsubscribe(s),this._processor.onUnsubscribe(s),this._subscriptions.delete(s.key.id))}async _doUpdate(){if(g("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const t=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const s of t)this._doUpdateSubscriptions(s.inner),s.resolver.resolve()}const t=this._updateSchemaRequest;if(this._updateSchemaRequest=null,null!=t){const{schema:s,version:e}=t.inner;await this._doUpdateSchema(s,e)}const s=this._updateLocalEditsRequest;if(this._updateLocalEditsRequest=null,null!=s){g("esri-2d-update-debug")&&console.debug("Pipeline.applyEditOverride",s.inner);const t=await this._source.getLocalEdit(s.inner);await this._processor.applyLocalEdit(t),this._source.applyLocalEdit(t),g("esri-2d-update-debug")&&console.debug("Pipeline.endEditOverride",s.inner)}if(this._updateHighlightRequests.length){const t=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const s of t)this._processor.updateHighlight(s.inner),s.resolver.resolve()}const e=this._source.cleanupRemovedChunks();this._processor.removeChunks(e);try{this._subscriptions.size&&(g("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),g("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(t){m(t)}null!=s&&s.resolver.resolve(),null!=t&&t.resolver.resolve(),this._updateRequested?(g("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0})):(g("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(t,s){g("esri-2d-update-debug")&&console.debug(`Version[${s}] Pipeline.updateStart`,{schema:t});const e={tileInfo:this._tileInfoView?.tileInfo},i=await this._source.update(t,s),r=Array.from(this._subscriptions.values());await this._processor.update(t,s,e,i,r),g("esri-2d-update-debug")&&console.debug(`Version[${s}] Pipeline.updateEnd`)}_doUpdateSubscriptions(t){g("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",t);for(const s of t.subscribe)this._subscribe(s);for(const s of t.unsubscribe)this._unsubscribe(s)}}export default ar;
//# sourceMappingURL=p-33c9703c.js.map