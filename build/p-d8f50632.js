import{l0 as t,a7 as i,kB as e,s,U as a,kI as n,r,p as l,q as o,ac as h,kz as c,l1 as u,w as f,bD as m,di as w,l2 as p,l3 as v,db as d,dc as b,k5 as y,hc as $,l4 as g}from"./p-aad64c9f.js";function O(i,e=!1){return i<=t?e?new Array(i).fill(0):new Array(i):new Uint32Array(i)}class A{constructor(t){q(t);const{location:s,data:a}=t;this.location=Object.freeze(i(s));const n=this.location.width,r=this.location.height;let l=!0,o=!0;const h=Math.ceil(n*r/32),c=O(h);let u=0;for(let t=0;t<a.length;t++){const i=t%32;a[t]?(o=!1,c[u]|=1<<i):l=!1,31===i&&++u}o?(this._availability="unavailable",this.byteSize=40):l?(this._availability="available",this.byteSize=40):(this._availability=c,this.byteSize=40+e(c))}getAvailability(t,i){if("unavailable"===this._availability||"available"===this._availability)return this._availability;const e=(t-this.location.top)*this.location.width+(i-this.location.left),s=e%32,a=e>>5,n=this._availability;return a<0||a>n.length?"unknown":n[a]&1<<s?"available":"unavailable"}static fromDefinition(t,i){const e=t.service.request||a,{row:n,col:r,width:l,height:o}=t,h={query:{f:"json"}};return i=i?{...h,...i}:h,e(D(t),i).then((t=>t.data)).catch((t=>{if(422===t?.details?.httpStatus)return{location:{top:n,left:r,width:l,height:o},valid:!0,data:new Array(l*o).fill(0)};throw t})).then((t=>{if(t.location&&(t.location.top!==n||t.location.left!==r||t.location.width!==l||t.location.height!==o))throw new s("tilemap:location-mismatch","Tilemap response for different location than requested",{response:t,definition:{top:n,left:r,width:l,height:o}});return A.fromJSON(t)}))}static fromJSON(t){return Object.freeze(new A(t))}}function k(t){return`${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`}function D(t){let i;if(t.service.tileServers?.length){const e=t.service.tileServers;i=`${e&&e.length?e[t.row%e.length]:t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`}else i=`${t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`;const e=t.service.query;return e&&(i=`${i}?${e}`),i}function q(t){if(!t?.location)throw new s("tilemap:missing-location","Location missing from tilemap response");if(!1===t.valid)throw new s("tilemap:invalid","Tilemap response was marked as invalid");if(!t.data)throw new s("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(t.data))throw new s("tilemap:data-mismatch","Data must be an array of numbers");if(t.data.length!==t.location.width*t.location.height)throw new s("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}var L;function P(t,i,e){return new s("tile-map:tile-unavailable","Tile is not available",{level:t,row:i,col:e})}let T=L=class extends h{constructor(t){super(t),this._pendingTilemapRequests={},this.request=a,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new c(2*u.MEGABYTES),this.addHandles(f((()=>{const{layer:t}=this;return[t?.parsedUrl,t?.tileServers,t?.apiKey,t?.customParameters]}),(()=>this._initializeTilemapDefinition()),m))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(t,i,e){if(!this.layer.tileInfo.lodAt(t)||t<this.effectiveMinLOD||t>this.effectiveMaxLOD)return"unavailable";const s=this._tilemapFromCache(t,i,e,this._tmpTilemapDefinition);return s?s.getAvailability(i,e):"unknown"}fetchAvailability(t,i,e,s){return!this.layer.tileInfo.lodAt(t)||t<this.effectiveMinLOD||t>this.effectiveMaxLOD?Promise.reject(P(t,i,e)):this._fetchTilemap(t,i,e,s).catch((t=>t)).then((s=>{if(s instanceof A){const a=s.getAvailability(i,e);if("unavailable"===a)throw P(t,i,e);return a}if(w(s))throw s;return"unknown"}))}fetchAvailabilityUpsample(t,i,e,s,a){s.level=t,s.row=i,s.col=e;const n=this.layer.tileInfo;n.updateTileInfo(s);const r=this.fetchAvailability(t,i,e,a).catch((t=>{if(w(t))throw t;if(n.upsampleTile(s))return this.fetchAvailabilityUpsample(s.level,s.row,s.col,s,a);throw t}));return this._fetchAvailabilityUpsamplePrefetch(s.id,t,i,e,a,r),r}async _fetchAvailabilityUpsamplePrefetch(t,i,e,s,a,n){if(!this._prefetchingEnabled||null==t)return;const r=`prefetch-${t}`;if(this.hasHandles(r))return;const l=new AbortController;n.then((()=>l.abort()),(()=>l.abort()));let o=!1;const h=$((()=>{o||(o=!0,l.abort())}));if(this.addHandles(h,r),await p(10,l.signal).catch((()=>{})),o||(o=!0,this.removeHandles(r)),v(l))return;const c=new g(t,i,e,s),u={...a,signal:l.signal},f=this.layer.tileInfo;for(let t=0;L._prefetches.length<L._maxPrefetch&&f.upsampleTile(c);++t){const t=this.fetchAvailability(c.level,c.row,c.col,u);L._prefetches.push(t);const i=()=>{L._prefetches.removeUnordered(t)};t.then(i,i)}}_fetchTilemap(t,i,e,a){if(!this.layer.tileInfo.lodAt(t)||t<this.effectiveMinLOD||t>this.effectiveMaxLOD)return Promise.reject(new s("tilemap-cache:level-unavailable",`Level ${t} is unavailable in the service`));const n=this._tmpTilemapDefinition,r=this._tilemapFromCache(t,i,e,n);if(r)return Promise.resolve(r);const l=a?.signal;return a={...a,signal:null},new Promise(((t,i)=>{d(l,(()=>i(b())));const e=k(n);let s=this._pendingTilemapRequests[e];if(!s){s=A.fromDefinition(n,a).then((t=>(this._tilemapCache.put(e,t,t.byteSize),t)));const t=()=>{delete this._pendingTilemapRequests[e]};this._pendingTilemapRequests[e]=s,s.then(t,t)}s.then(t,i)}))}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:e}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:y({...t.query,...e,token:i??t.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(t,i,e,s){s.level=t,s.row=i-i%this.size,s.col=e-e%this.size;const a=k(s);return this._tilemapCache.get(a)}get test(){}};T._maxPrefetch=4,T._prefetches=new n({initialSize:L._maxPrefetch}),r([l({constructOnly:!0})],T.prototype,"layer",void 0),r([l({constructOnly:!0})],T.prototype,"minLOD",void 0),r([l({constructOnly:!0})],T.prototype,"maxLOD",void 0),r([l({constructOnly:!0})],T.prototype,"request",void 0),r([l({constructOnly:!0})],T.prototype,"size",void 0),T=L=r([o("esri.layers.support.TilemapCache")],T);export{T};
//# sourceMappingURL=p-d8f50632.js.map