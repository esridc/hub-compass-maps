import{T as e,iU as t,nk as n,U as r,nl as a,s as o,nm as s,nn as i,no as c,np as u,j as p,bi as l,e6 as y,nq as f,E as m,bn as d,lu as w}from"./p-aad64c9f.js";import{u as g}from"./p-07f1865a.js";import{n as b,o as T}from"./p-0befabd0.js";const S="xlink:href",h="2.0.0",E="__esri_wfs_id__",x="wfs-layer:getWFSLayerTypeInfo-error",F="wfs-layer:empty-service",k="wfs-layer:feature-type-not-found",P="wfs-layer:geojson-not-supported",R="wfs-layer:kvp-encoding-not-supported",C="wfs-layer:malformed-json",v="wfs-layer:unknown-geometry-type",N="wfs-layer:unknown-field-type",j="wfs-layer:unsupported-spatial-reference",M="wfs-layer:unsupported-wfs-version";async function V(e,t){const n=I((await r(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:h,...t?.customParameters},signal:t?.signal})).data);return O(e,n),n}function I(e){const t=te(e);re(t),ae(t);const n=t.firstElementChild,r=a(D(n));return{operations:G(n),get featureTypes(){return Array.from(r())},readFeatureTypes:r}}const U=["json","application/json","geojson","application/json; subtype=geojson","application/geo+json"];function $(e){for(const t of U){const n=e.findIndex((e=>e.toLowerCase()===t));if(n>=0)return e[n]}return null}function G(e){let t=!1;const n={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}},r=[],a=[];if(T(e,{OperationsMetadata:{Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:({textContent:e})=>{e&&r.push(e)}}}},Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{n.GetCapabilities.url=e.getAttribute(S)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{n.DescribeFeatureType.url=e.getAttribute(S)}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{n.GetFeature.url=e.getAttribute(S)}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:({textContent:e})=>{e&&a.push(e)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{t="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{n.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),n.GetFeature.outputFormat=$(a)??$(r),!t)throw new o(R,"WFS service doesn't support key/value pair (KVP) encoding");if(null==n.GetFeature.outputFormat)throw new o(P,"WFS service doesn't support GeoJSON output format");return n}function O(e,t){s(e)&&(i(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=c(t.operations.DescribeFeatureType.url)),i(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=c(t.operations.GetFeature.url)))}function A(e){const t=parseInt(e.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);if(!Number.isNaN(t))return t}function D(e){return b(e,{FeatureTypeList:{FeatureType:e=>{const t={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},n=new Set;return T(e,{Name:e=>{const{name:n,prefix:r}=ne(e.textContent);t.typeName=`${r}:${n}`,t.name=n,t.namespacePrefix=r,t.namespaceUri=e.lookupNamespaceURI(r)},Abstract:e=>{t.description=e.textContent},Title:e=>{t.title=e.textContent},WGS84BoundingBox:e=>{t.extent=m.fromJSON(L(e))},DefaultCRS:e=>{const r=A(e);r&&(t.defaultSpatialReference=r,n.add(r))},OtherCRS:e=>{const t=A(e);t&&n.add(t)}}),t.title||(t.title=t.name),n.add(4326),t.supportedSpatialReferences.push(...n),t}}})}function L(e){let t,n,r,a;for(const o of e.children)switch(o.localName){case"LowerCorner":[t,n]=o.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[r,a]=o.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:n,xmax:r,ymax:a,spatialReference:d}}function W(e,t,r){return n(e,(e=>r?e.name===t&&e.namespaceUri===r:e.typeName===t||e.name===t))}async function Y(t,n,r,a={}){const{featureType:o,extent:s}=await q(t,n,r,a),{spatialReference:i}=oe(t.operations.GetFeature.url,o,a.spatialReference),{fields:c,geometryType:u,swapXY:p,objectIdField:l,geometryField:y}=await X(t,o,i,a);return{url:t.operations.GetCapabilities.url,name:o.name,namespaceUri:o.namespaceUri,fields:c,geometryField:y,geometryType:u,objectIdField:l,spatialReference:a.spatialReference??new e({wkid:o.defaultSpatialReference}),extent:s,swapXY:p,wfsCapabilities:t,customParameters:a.customParameters}}async function q(t,n,r,a={}){const s=t.readFeatureTypes(),i=n?W(s,n,r):s.next().value,{spatialReference:c=new e({wkid:i?.defaultSpatialReference})}=a;if(null==i)throw n?new o(k,`The type '${n}' could not be found in the service`):new o(F,"The service is empty");let u=i.extent;if(u&&!p(u.spatialReference,c))try{await l(u.spatialReference,c,void 0,a),u=y(u,c)}catch{throw new o(j,"Projection not supported")}return{extent:u,spatialReference:c,featureType:i}}async function X(e,t,n,r={}){const{typeName:a}=t,[s,i]=await Promise.allSettled([Q(e.operations.DescribeFeatureType.url,a,r),z(e,a,n,r)]),c=e=>new o(x,`An error occurred while getting info about the feature type '${a}'`,{error:e});if("rejected"===s.status)throw c(s.reason);if("rejected"===i.status)throw c(i.reason);const{fields:u,errors:p}=s.value??{},l=s.value?.geometryType||i.value?.geometryType,y=i.value?.swapXY??!1;if(null==l)throw new o(v,`The geometry type could not be determined for type '${a}`,{typeName:a,geometryType:l,fields:u,errors:p});return{..._(u??[]),geometryType:l,swapXY:y}}function _(e){const n=e.find((e=>"geometry"===e.type));let r=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),r||(r=new t({name:E,type:"oid",alias:E}),e.unshift(r)),{geometryField:n?.name??null,objectIdField:r.name,fields:e}}async function z(e,t,n,a={}){let o,s=!1;const[i,c]=await Promise.all([K(e.operations.GetFeature.url,t,n,e.operations.GetFeature.outputFormat,{...a,count:1}),r(e.operations.GetFeature.url,{responseType:"text",query:Z(t,n,void 0,{...a,count:1}),signal:a?.signal})]),u="FeatureCollection"===i.type&&i.features[0]?.geometry;if(u){let e;switch(o=f.fromJSON(g(u.type)),u.type){case"Point":e=u.coordinates;break;case"LineString":case"MultiPoint":e=u.coordinates[0];break;case"MultiLineString":case"Polygon":e=u.coordinates[0][0];break;case"MultiPolygon":e=u.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(c.data);if(t){const n=e[0].toFixed(3),r=e[1].toFixed(3),a=parseFloat(t[1]).toFixed(3);n===parseFloat(t[2]).toFixed(3)&&r===a&&(s=!0)}}return{geometryType:o,swapXY:s}}async function Q(e,t,n){return H(t,(await r(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:h,TYPENAME:t,TYPENAMES:t,...n?.customParameters},signal:n?.signal})).data)}function H(e,t){const{name:r}=ne(e),a=te(t);ae(a);const s=n(b(a.firstElementChild,{element:e=>e}),(e=>e.getAttribute("name")===r));if(null!=s){const e=s.getAttribute("type"),t=e?n(b(a.firstElementChild,{complexType:e=>e}),(t=>t.getAttribute("name")===ne(e).name)):n(b(s,{complexType:e=>e}),(()=>!0));if(t)return J(t)}throw new o(k,`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(a)})}const B=new Set(["objectid","fid"]);function J(e){const n=[],r=[];let a;const s=b(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const i of s){const s=i.getAttribute("name");if(!s)continue;let c,u;if(i.hasAttribute("type")?c=ne(i.getAttribute("type")).name:T(i,{simpleType:{restriction:e=>(c=ne(e.getAttribute("base")).name,{maxLength:e=>{u=+e.getAttribute("value")}})}}),!c)continue;const p="true"===i.getAttribute("nillable");let l=!1;switch(c.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":r.push(new t({name:s,alias:s,type:"integer",nullable:p,length:w("integer")}));break;case"float":case"double":case"decimal":r.push(new t({name:s,alias:s,type:"double",nullable:p,length:w("double")}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":r.push(new t({name:s,alias:s,type:"string",nullable:p,length:u??w("string")}));break;case"datetime":case"date":r.push(new t({name:s,alias:s,type:"date",nullable:p,length:u??w("date")}));break;case"pointpropertytype":a="point",l=!0;break;case"multipointpropertytype":a="multipoint",l=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":a="polyline",l=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":a="polygon",l=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":l=!0,n.push(new o(v,`geometry type '${c}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:n.push(new o(N,`Unknown field type '${c}'`,{type:(new XMLSerializer).serializeToString(e)}))}l&&r.push(new t({name:s,alias:s,type:"geometry",nullable:p}))}for(const e of r)if("integer"===e.type&&!e.nullable&&B.has(e.name.toLowerCase())){e.type="oid";break}return{geometryType:a,fields:r,errors:n}}async function K(e,t,n,a,s){let{data:i}=await r(e,{responseType:"text",query:Z(t,n,a,s),signal:s?.signal});i=i.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(i)}catch(e){throw new o(C,"Error while parsing theÂ response",{response:i,error:e})}}function Z(e,t,n,r){const a="number"==typeof t?t:t.wkid;return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:h,TYPENAMES:e,OUTPUTFORMAT:n,SRSNAME:"EPSG:"+a,STARTINDEX:r?.startIndex,COUNT:r?.count,...r?.customParameters}}async function ee(e,t,n){const a=await r(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:h,TYPENAMES:t,RESULTTYPE:"hits",...n?.customParameters},signal:n?.signal}),o=/numberMatched=["'](?<numberMatched>\d+)["']/gi.exec(a.data);if(o?.groups)return+o.groups.numberMatched}function te(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function ne(e){const[t,n]=e.split(":");return{prefix:n?t:"",name:n??t}}function re(e){const t=e.firstElementChild?.getAttribute("version");if(t&&t!==h)throw new o(M,`Unsupported WFS version ${t}. Supported version: ${h}`)}function ae(e){let t="",n="";if(T(e.firstElementChild,{Exception:e=>(t=e.getAttribute("exceptionCode"),{ExceptionText:e=>{n=e.textContent}})}),t)throw new o(`wfs-layer:${t}`,n)}function oe(e,t,n){const r={wkid:t.defaultSpatialReference},a=null!=n?.wkid?{wkid:n.wkid}:r;return{spatialReference:a,getFeatureSpatialReference:u(e)||a.wkid&&t.supportedSpatialReferences.includes(a.wkid)?{wkid:a.wkid}:{wkid:t.defaultSpatialReference}}}export{K,E as S,Y as W,W as Y,ee as e,oe as o,V as v,_ as z};
//# sourceMappingURL=p-d7feeb63.js.map