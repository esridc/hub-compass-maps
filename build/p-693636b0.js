import{r as e,p as t,q as s,t as r,ae as i,hD as o,T as n,jf as a,s as p,oe as u,od as l,oS as d,os as c,kM as y,oF as h,oG as f,kN as g,kV as m,kW as v,o4 as S,kX as j,iP as w,ot as C,o7 as R,X as b,oT as F,oi as O,iU as x,E as D,nq as I,ow as T,ox as P,oy as q,oh as B,o9 as E,jO as A,oB as M,o8 as Q,oV as G,oM as k,k_ as _,oa as H}from"./p-aad64c9f.js";import{R as U,C as z,P as L,O as V,N as Z,q as K,v as N,k as $,x as W}from"./p-4e1cc544.js";import{s as X}from"./p-e33d4456.js";import"./p-2af77f97.js";import"./p-875cbb57.js";import"./p-da522976.js";import"./p-aff89b86.js";import"./p-d492d39b.js";import"./p-07f1865a.js";import"./p-49632661.js";import"./p-4c90e3f2.js";import"./p-1317d6d9.js";import"./p-512046c6.js";let J=class extends r{constructor(){super(...arguments),this.featureDefinition=null,this.type="ogc-feature"}load(e){return this.addResolvingPromise(this._loadOGCServices(this.layer,e)),this.when()}getSource(){const{featureDefinition:{collection:e,layerDefinition:t,spatialReference:s,supportedCrs:r},layer:{apiKey:i,customParameters:o,effectiveMaxRecordCount:n}}=this;return{type:"ogc-source",collection:e,layerDefinition:t,maxRecordCount:n,queryParameters:{apiKey:i,customParameters:o},spatialReference:s,supportedCrs:r}}queryExtent(e,t={}){return null}queryFeatureCount(e,t={}){return null}queryFeatures(e,t={}){return this.queryFeaturesJSON(e,t).then((e=>i.fromJSON(e)))}queryFeaturesJSON(e,t={}){const s=this.getSource();return this.load(t).then((()=>U(s,e,t)))}queryObjectIds(e,t={}){return null}serviceSupportsSpatialReference(e){return!(!e.isWGS84&&!e.isWebMercator)||!!this.featureDefinition.supportedCrs[e.wkid]}_conformsToType(e,t){const s=new RegExp(`^${o(t)}$`,"i");return e.conformsTo.some((e=>s.test(e)))??!1}_getCapabilities(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryBins:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:t,maxRecordCountFactor:void 0,standardMaxRecordCount:void 0,supportsCacheHint:!1,supportsCentroid:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsStatistics:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,supportsSqlExpression:!1,tileMaxRecordCount:void 0},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},queryBins:X,editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUploadWithItemId:!1,supportsUpdateWithoutM:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}_getMaxRecordCount(e){const t=e?.components?.parameters;return t?.limit?.schema?.maximum??t?.limitFeatures?.schema?.maximum}_getStorageSpatialReference(e){const t=e.storageCrs??W,s=z(t);return null==s?n.WGS84:new n({wkid:s})}_getSupportedSpatialReferences(e,t){const s="#/crs",r=e.crs??[W],i=r.includes(s)?r.filter((e=>e!==s)).concat(t.crs??[]):r,o=/^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;return i.filter((e=>!o.test(e)))}async _loadOGCServices(e,t){const s=null!=t?t.signal:null,{apiKey:r,collectionId:i,customParameters:n,fields:u,geometryType:l,hasZ:d,objectIdField:c,timeInfo:y,url:h}=e,f={fields:u?.map((e=>e.toJSON())),geometryType:a.toJSON(l),hasZ:d??!1,objectIdField:c,timeInfo:y?.toJSON()},g={apiKey:r,customParameters:n,signal:s},m=await L(h,g),[v,S]=await Promise.all([V(m,g),Z(m,g)]);if(!this._conformsToType(v,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"))throw new p("ogc-feature-layer:no-geojson-support","Server does not support geojson");const j=S.collections.find((({id:e})=>e===i));if(!j)throw new p("ogc-feature-layer:collection-not-found","Server does not contain the named collection");const w=this._conformsToType(v,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30")?await K(m,g):null,C=await N(j,f,g),R=this._getMaxRecordCount(w),b=this._getCapabilities(C.hasZ,R),F=this._getStorageSpatialReference(j).toJSON(),O=this._getSupportedSpatialReferences(j,S),x=new RegExp(`^${o($)}`,"i"),D={};for(const e of O){const t=z(e);null!=t&&(D[t]||(D[t]=e.replace(x,"")))}this.featureDefinition={capabilities:b,collection:j,layerDefinition:C,spatialReference:F,supportedCrs:D}}};e([t()],J.prototype,"featureDefinition",void 0),e([t({constructOnly:!0})],J.prototype,"layer",void 0),e([t()],J.prototype,"type",void 0),J=e([s("esri.layers.graphics.sources.OGCFeatureSource")],J);const Y=H();let ee=class extends(u(l(d(c(y(h(f(g(m(v(S(j(w))))))))))))){constructor(e){super(e),this.capabilities=null,this.collectionId=null,this.copyright=null,this.description=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelingInfo=null,this.labelsVisible=!0,this.legendEnabled=!0,this.maxRecordCount=null,this.objectIdField=null,this.operationalLayerType="OGCFeatureLayer",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new J({layer:this}),this.spatialReference=null,this.title=null,this.type="ogc-feature",this.typeIdField=null,this.types=null,this.url=null}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["OGCFeatureServer"]},e).then((()=>this._fetchService(e)))),this.when()}get defaultPopupTemplate(){return this.createPopupTemplate()}get effectiveMaxRecordCount(){return this.maxRecordCount??this.capabilities?.query.maxRecordCount??5e3}get isTable(){return this.loaded&&null==this.geometryType}set renderer(e){C(e,this.fieldsIndex),this._set("renderer",e)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return R(this,e)}createQuery(){return new b}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){let s,r=!1;const i=t?.feature?.attributes,o=this.typeIdField&&i?.[this.typeIdField];return null!=o&&this.types&&(r=this.types.some((t=>t.id==o&&(s=t.domains?.[e],"inherited"===s?.type&&(s=this._getLayerDomain(e)),!0)))),r||s||(s=this._getLayerDomain(e)),s}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(b.from(e)||this.createQuery(),t))).then((e=>(e?.features?.forEach((e=>{e.layer=e.sourceLayer=this})),e)))}serviceSupportsSpatialReference(e){return this.source?.serviceSupportsSpatialReference(e)??!1}async _fetchService(e){await this.source.load(e),this.read(this.source.featureDefinition,{origin:"service"}),C(this.renderer,this.fieldsIndex),F(this.timeInfo,this.fieldsIndex)}_getLayerDomain(e){if(!this.fields)return null;for(const t of this.fields)if(t.name===e&&t.domain)return t.domain;return null}};e([t({readOnly:!0,json:{origins:{service:{read:!0}}}})],ee.prototype,"capabilities",void 0),e([t({type:String,json:{write:!0}})],ee.prototype,"collectionId",void 0),e([t({type:String})],ee.prototype,"copyright",void 0),e([t({readOnly:!0})],ee.prototype,"defaultPopupTemplate",null),e([t({readOnly:!0,type:String,json:{origins:{service:{name:"collection.description"}}}})],ee.prototype,"description",void 0),e([t({type:String})],ee.prototype,"displayField",void 0),e([t({type:Number})],ee.prototype,"effectiveMaxRecordCount",null),e([t(O)],ee.prototype,"elevationInfo",void 0),e([t({type:[x],json:{origins:{service:{name:"layerDefinition.fields"}}}})],ee.prototype,"fields",void 0),e([t(Y.fieldsIndex)],ee.prototype,"fieldsIndex",void 0),e([t({readOnly:!0,type:D,json:{origins:{service:{name:"layerDefinition.extent"}}}})],ee.prototype,"fullExtent",void 0),e([t({type:I.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:I.read}}}}})],ee.prototype,"geometryType",void 0),e([t({type:Boolean,json:{origins:{service:{name:"layerDefinition.hasZ"}}}})],ee.prototype,"hasZ",void 0),e([t({type:Boolean,readOnly:!0})],ee.prototype,"isTable",null),e([t({type:[T],json:{origins:{"web-document":{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:P},write:!0}}}})],ee.prototype,"labelingInfo",void 0),e([t(q)],ee.prototype,"labelsVisible",void 0),e([t(B)],ee.prototype,"legendEnabled",void 0),e([t({type:Number})],ee.prototype,"maxRecordCount",void 0),e([t({type:String,json:{origins:{service:{name:"layerDefinition.objectIdField"}}}})],ee.prototype,"objectIdField",void 0),e([t({type:["OGCFeatureLayer"]})],ee.prototype,"operationalLayerType",void 0),e([t(E)],ee.prototype,"popupEnabled",void 0),e([t({type:A,json:{name:"popupInfo",write:!0}})],ee.prototype,"popupTemplate",void 0),e([t({types:M,json:{origins:{service:{name:"layerDefinition.drawingInfo.renderer",write:!1},"web-scene":{types:Q,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:!0}})],ee.prototype,"renderer",null),e([t(G)],ee.prototype,"screenSizePerspectiveEnabled",void 0),e([t({readOnly:!0})],ee.prototype,"source",void 0),e([t({readOnly:!0,type:n,json:{origins:{service:{read:!0}}}})],ee.prototype,"spatialReference",void 0),e([t({type:String,json:{write:{enabled:!0,ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"collection.title"}}}})],ee.prototype,"title",void 0),e([t({readOnly:!0,json:{read:!1}})],ee.prototype,"type",void 0),e([t({type:String,readOnly:!0})],ee.prototype,"typeIdField",void 0),e([t({type:[k]})],ee.prototype,"types",void 0),e([t(_)],ee.prototype,"url",void 0),ee=e([s("esri.layers.OGCFeatureLayer")],ee);const te=ee;export default te;
//# sourceMappingURL=p-693636b0.js.map