import{e6 as t,a0 as s,d8 as i,ch as e,ci as a,cg as r,c4 as o,U as h,da as n,iW as p,az as c,w as m,d_ as l,dN as d,E as f,jU as j,T as u,jl as w,k4 as b,a8 as g,k5 as x,r as y,p as v,q as _}from"./p-aad64c9f.js";import{b as k,g as S,d as D}from"./p-f98d3f50.js";import{g as I,f as L,S as M}from"./p-2527295a.js";import{a as V}from"./p-43638f6d.js";import{j as E,y as T}from"./p-bbb18646.js";import{t as U}from"./p-d8c74537.js";import{F as z}from"./p-4f2b7ad8.js";import{C as A,i as C}from"./p-a8618b5c.js";import{n as P}from"./p-682c165c.js";import{y as q,o as B}from"./p-25f9a898.js";import{E as R}from"./p-1c4b55c0.js";import{c as F}from"./p-8c708562.js";import"./p-2af77f97.js";import"./p-3f2fef32.js";import"./p-31b7e91d.js";import"./p-23e8befe.js";import"./p-2d2f231a.js";import"./p-17d8c81f.js";import"./p-dc645a50.js";import"./p-22458323.js";import"./p-7ce0ff48.js";import"./p-a0004a96.js";import"./p-d6556377.js";import"./p-591e796f.js";import"./p-559f4b2d.js";import"./p-7281a451.js";import"./p-b947b9d2.js";import"./p-aff89b86.js";import"./p-b8a25c33.js";import"./p-e7a66915.js";import"./p-2ea4a2b9.js";import"./p-44881b12.js";import"./p-deddb82e.js";import"./p-717596a8.js";import"./p-fa2632fc.js";import"./p-4295487d.js";import"./p-1c285990.js";import"./p-875cbb57.js";import"./p-da522976.js";import"./p-d492d39b.js";import"./p-e3657bc3.js";import"./p-bac7b09c.js";import"./p-2250105d.js";import"./p-e7002be3.js";import"./p-204b6b8c.js";import"./p-9ad0e060.js";import"./p-c0b174ee.js";import"./p-439fba24.js";import"./p-af33d18c.js";import"./p-790e1969.js";import"./p-dc92c2ea.js";import"./p-dddb66c6.js";import"./p-08681176.js";import"./p-de84037a.js";class G{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(G._instance)return G._instanceRefCount++,G._instance;G._instanceRefCount=1,G._instance=this,this._ownsRctx=!0;const t=document.createElement("canvas").getContext("webgl2");t.getExtension("OES_texture_float"),this._rctx=new q(t,{})}const s={applyProjection:!0,bilinear:!1,bicubic:!1},i=B("raster/reproject","raster/reproject",new Map([["a_position",0]]),s);this._program=this._rctx.programCache.acquire(i.shaders.vertexShader,i.shaders.fragmentShader,i.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new P(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(o,h,p=!1){const c=t(o.extent,h),m=new s({x:(o.extent.xmax-o.extent.xmin)/o.texture.descriptor.width,y:(o.extent.ymax-o.extent.ymin)/o.texture.descriptor.height,spatialReference:o.extent.spatialReference}),{x:l,y:d}=A(m,h,o.extent);let f=(l+d)/2;const j=Math.round((c.xmax-c.xmin)/f),u=Math.round((c.ymax-c.ymin)/f);f=(c.width/j+c.height/u)/2;const w=new s({x:f,y:f,spatialReference:c.spatialReference}),b=C({projectedExtent:c,srcBufferExtent:o.extent,pixelSize:w,hasWrapAround:!0,spacing:[16,16]}),g=F(this._rctx,b),x=new n(j,u);x.wrapMode=i.CLAMP_TO_EDGE;const y=new R(this._rctx,x);this._rctx.bindFramebuffer(y),this._rctx.setViewport(0,0,j,u),this._rctx.useProgram(this._program),this._rctx.bindTexture(o.texture,0),this._rctx.bindTexture(g,1),this._quad.bind();const{width:v=0,height:_=0}=o.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",v,_),this._program.setUniform2fv("u_transformSpacing",b.spacing),this._program.setUniform2fv("u_transformGridSize",b.size),this._program.setUniform2f("u_targetImageSize",j,u),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),g.dispose(),p){const{width:t,height:s}=y,i=new ImageData(t??0,s??0);y.readPixels(0,0,t??0,s??0,e.RGBA,a.UNSIGNED_BYTE,i.data);const o=y.detachColorTexture(r.COLOR_ATTACHMENT0);return y.dispose(),{texture:o,extent:c,imageData:i}}const k=y.detachColorTexture(r.COLOR_ATTACHMENT0);return y.dispose(),{texture:k,extent:c}}reprojectBitmapData(t,s){const e=I(t.bitmapData)?L(t.bitmapData):t.bitmapData,a=new n;a.wrapMode=i.CLAMP_TO_EDGE,a.width=t.bitmapData.width,a.height=t.bitmapData.height;const r=new o(this._rctx,a,e),h=this.reprojectTexture({texture:r,extent:t.extent},s,!0);h.texture.dispose();const p=document.createElement("canvas"),c=h.imageData;p.width=c.width,p.height=c.height;return p.getContext("2d").putImageData(c,0,0),{bitmapData:p,extent:h.extent}}async loadAndReprojectBitmapData(t,s,i){const e=(await h(t,{responseType:"image"})).data,a=document.createElement("canvas");a.width=e.width,a.height=e.height;const r=a.getContext("2d");r.drawImage(e,0,0);const o=r.getImageData(0,0,a.width,a.height);if(s.spatialReference.equals(i))return{bitmapData:o,extent:s};const n=this.reprojectBitmapData({bitmapData:o,extent:s},i);return{bitmapData:n.bitmapData,extent:n.extent}}destroy(){this._ownsRctx?(G._instanceRefCount--,0===G._instanceRefCount&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),G._instance=null)):(this._quad.dispose(),this._program.dispose())}}G._instanceRefCount=0;class N{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let W=class extends(E(T)){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new V,this._kmlVisualData=new N,this._fetchController=null,this.allVisiblePoints=new p,this.allVisiblePolylines=new p,this.allVisiblePolygons=new p,this.allVisibleMapImages=new c}async hitTest(t,s){const i=this.layer;return[this._pointsView?.hitTest(t),this._polylinesView?.hitTest(t),this._polygonsView?.hitTest(t)].flat().filter(Boolean).map((s=>(s.layer=i,s.sourceLayer=i,{type:"graphic",graphic:s,layer:i,mapPoint:t})))}update(t){this._polygonsView&&this._polygonsView.processUpdate(t),this._polylinesView&&this._polylinesView.processUpdate(t),this._pointsView&&this._pointsView.processUpdate(t)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new z({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new z({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new z({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",(t=>{t.added.forEach((t=>this._addMapImage(t))),t.removed.forEach((t=>this._removeMapImage(t)))})),m((()=>this.layer.visibleSublayers),(t=>{for(const t of this._kmlVisualData.allSublayers.values())t.visibility=0;for(const s of t){const t=this._kmlVisualData.allSublayers.get(s.id);t&&(t.visibility=1)}this._refreshCollections()}))]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new G}detach(){this._fetchController=l(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=d(this._polygonsView),this._polylinesView=d(this._polylinesView),this._pointsView=d(this._pointsView),this._imageReprojector=d(this._imageReprojector)}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(t){(this.view.spatialReference?.isWGS84||this.view.spatialReference?.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(t.href,f.fromJSON(t.extent),this.view.spatialReference).then((s=>{const i=new M(s.bitmapData);i.x=s.extent.xmin,i.y=s.extent.ymax,i.resolution=s.extent.width/s.bitmapData.width,i.rotation=t.rotation,this._mapImageContainer.addChild(i),this._bitmapIndex.set(t,i)}))}async _getViewDependentUrl(s,i){const{viewFormat:e,viewBoundScale:a,httpQuery:r}=s;if(null!=e){if(null==i)throw new Error("Loading this network link requires a view state.");let o;if(await j(),null!=a&&1!==a){const t=new f(i.extent);t.expand(a),o=t}else o=i.extent;o=t(o,u.WGS84);const h=t(o,u.WebMercator),n=o.xmin,p=o.xmax,c=o.ymin,m=o.ymax,l=i.size[0]*i.pixelRatio,d=i.size[1]*i.pixelRatio,y=Math.max(h.width,h.height),v={"[bboxWest]":n.toString(),"[bboxEast]":p.toString(),"[bboxSouth]":c.toString(),"[bboxNorth]":m.toString(),"[lookatLon]":o.center.x.toString(),"[lookatLat]":o.center.y.toString(),"[lookatRange]":y.toString(),"[lookatTilt]":"0","[lookatHeading]":i.rotation.toString(),"[lookatTerrainLon]":o.center.x.toString(),"[lookatTerrainLat]":o.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":o.center.x.toString(),"[cameraLat]":o.center.y.toString(),"[cameraAlt]":y.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":l.toString(),"[vertPixels]":d.toString(),"[terrainEnabled]":"0","[clientVersion]":w,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},_=t=>{for(const s in t){let i;for(i in v)t[s]=t[s].replace(i,v[i])}},k=b(e);_(k);let S={};null!=r&&(S=b(r),_(S));const D=g(s.href);D.query={...D.query,...k,...S};return`${D.path}?${x(k)}`}return s.href}async _fetchService(t){const s=new N;await this._loadVisualData(this.layer.url,s,t),this._kmlVisualData=s,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((t=>this._isSublayerVisible(t.sublayerId))).map((({item:t})=>t))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((t=>this._isSublayerVisible(t.sublayerId))).map((({item:t})=>t))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((t=>this._isSublayerVisible(t.sublayerId))).map((({item:t})=>t))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((t=>this._isSublayerVisible(t.sublayerId))).map((({item:t})=>t)))}_isSublayerVisible(t){const s=this._kmlVisualData.allSublayers.get(t);return!!s?.visibility&&(-1===s.parentFolderId||this._isSublayerVisible(s.parentFolderId))}_loadVisualData(t,s,i){return this._fetchParsedKML(t,i).then((async t=>{for(const e of t.sublayers){s.allSublayers.set(e.id,e);const t=e.points?await k(e.points):[],a=e.polylines?await k(e.polylines):[],r=e.polygons?await k(e.polygons):[],o=e.mapImages||[];if(s.allPoints.push(...t.map((t=>({item:t,sublayerId:e.id})))),s.allPolylines.push(...a.map((t=>({item:t,sublayerId:e.id})))),s.allPolygons.push(...r.map((t=>({item:t,sublayerId:e.id})))),s.allMapImages.push(...o.map((t=>({item:t,sublayerId:e.id})))),e.networkLink){const t=await this._getViewDependentUrl(e.networkLink,this.view.state);await this._loadVisualData(t,s,i)}}}))}_fetchParsedKML(t,s){return S(t,this.layer.spatialReference,this.layer.refreshInterval,s).then((t=>D(t.data)))}_removeMapImage(t){const s=this._bitmapIndex.get(t);s&&(this._mapImageContainer.removeChild(s),this._bitmapIndex.delete(t))}};y([v()],W.prototype,"_pointsView",void 0),y([v()],W.prototype,"_polylinesView",void 0),y([v()],W.prototype,"_polygonsView",void 0),y([v()],W.prototype,"updating",void 0),W=y([_("esri.views.2d.layers.KMLLayerView2D")],W);const K=W;export default K;
//# sourceMappingURL=p-c01d6b7b.js.map