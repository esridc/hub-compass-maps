import{c as e,h as a,d as r,F as t,l as n,a as o,f as s,u as i,L as c,s as l,i as u}from"./p-aad64c9f.js";import{i as f}from"./p-f3c2956c.js";import{P as y,y as m,w as p,$ as d,d as w,v,p as P,f as h,I as $,m as S}from"./p-645faad3.js";import{t as b,a as I,i as N}from"./p-c679ddd9.js";import"./p-2af77f97.js";import"./p-7523d580.js";import"./p-cc72a972.js";const j="Feature Service",A="feature-layer-utils",T=`${A}-save`,F=`${A}-save-as`,O=`${A}-saveall`,x=`${A}-saveall-as`;function J(e){return{isValid:c(e)&&(!("dynamicDataSource"in e)||!e.dynamicDataSource),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}function g(e){const a=[],r=[];for(const{layer:t,layerJSON:n}of e)t.isTable?r.push(n):a.push(n);return{layers:a,tables:r}}function K(e){return g([e])}async function L(e,a){return/\/\d+\/?$/.test(e.url)?K(a[0]):M(a,e)}async function M(e,a){if(e.reverse(),!a)return g(e);const r=await D(a,e);for(const a of e)H(a.layer,a.layerJSON,r);return R(r,e),r}async function D(e,a){let r=await e.fetchData("json");if(E(r))return r;r||={},G(r);const{layer:{url:t,customParameters:n,apiKey:o}}=a[0];return await q(r,{url:t??"",customParameters:n,apiKey:o},a.map((e=>e.layer.layerId))),r}function E(e){return!!(e&&Array.isArray(e.layers)&&Array.isArray(e.tables))}function G(e){e.layers||=[],e.tables||=[]}function R(e,a){const r=[],t=[];for(const{layer:e}of a){const{isTable:a,layerId:n}=e;a?t.push(n):r.push(n)}V(e.layers,r),V(e.tables,t)}function V(a,r){if(a.length<2)return;const t=[];for(const{id:e}of a)t.push(e);e(t.sort(k),r.slice().sort(k))&&a.sort(((e,a)=>{const t=r.indexOf(e.id),n=r.indexOf(a.id);return t<n?-1:t>n?1:0}))}function k(e,a){return e<a?-1:e>a?1:0}async function q(e,a,r){const{url:t,customParameters:n,apiKey:o}=a,{serviceJSON:s,layersJSON:i}=await b(t,{customParameters:n,apiKey:o}),c=z(e.layers,s.layers,r),l=z(e.tables,s.tables,r);e.layers=c.itemResources,e.tables=l.itemResources;const u=[...c.added,...l.added],f=i?[...i.layers,...i.tables]:[];await B(e,u,t,f)}function z(e,r,t){const n=a(e,r,((e,a)=>e.id===a.id));e=e.filter((e=>!n.removed.some((a=>a.id===e.id))));const o=n.added;return o.forEach((({id:a})=>{e.push({id:a})})),{itemResources:e,added:o.filter((({id:e})=>!t.includes(e)))}}async function B(e,a,r,t){const n=await C(a),o=a.map((({id:e,type:a})=>new(n.get(a))({url:r,layerId:e,sourceJSON:t.find((({id:a})=>a===e))})));await Promise.allSettled(o.map((e=>e.load()))),o.forEach((a=>{const{layerId:r,loaded:t,defaultPopupTemplate:n}=a;if(!t||null==n)return;const o={id:r,popupInfo:n.toJSON()};"ArcGISFeatureLayer"!==a.operationalLayerType&&(o.layerType=a.operationalLayerType),H(a,o,e)}))}async function C(e){const a=[];e.forEach((({type:e})=>{const r=N(e),t=I[r];a.push(t())}));const r=await Promise.all(a),t=new Map;return e.forEach((({type:e},a)=>{t.set(e,r[a])})),t}function H(e,a,r){e.isTable?Q(r.tables,a):Q(r.layers,a)}function Q(e,a){const r=e.findIndex((({id:e})=>e===a.id));-1===r?e.push(a):e[r]=a}function U(e,a){if(!e.length)throw new l(`${a}:missing-parameters`,"'layers' array should contain at least one feature layer")}function W(e,a){const r=e.map((e=>e.portalItem.id));if(new Set(r).size>1)throw new l(`${a}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item")}function X(e,a){const r=e.map((e=>e.layerId));if(new Set(r).size!==r.length)throw new l(`${a}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service")}async function Y(e){U(e,O),await Promise.all(e.map((e=>e.load())));for(const a of e)P(a,O,J),h({layer:a,itemType:j,errorNamePrefix:O});W(e,O),X(e,O)}function Z(e,a){const r=e.some((e=>"oriented-imagery"===e.type));i(a,s.ORIENTED_IMAGERY_LAYER,r)}async function _(e,a){Z([e],a)}async function ee(e,a){const{url:t,layerId:c,title:l,fullExtent:f,isTable:y}=e,m=r(t);a.url=("FeatureServer"===m?.serverType?t:`${t}/${c}`)??null,a.title||=l,a.extent=null,y||null==f||(a.extent=await n(f)),o(a,s.METADATA),o(a,s.MULTI_LAYER),u(a,s.SINGLE_LAYER),i(a,s.TABLE,y),Z([e],a)}function ae(e,a){for(const t of e){const n=t.parsedUrl.path,o=r(n),s=o?.url.path;if(!s)throw new l(`${a}:invalid-parameters`,S(t,`has unsupported url pattern: ${n}`),{layer:t});const i=o?.serverType;if("FeatureServer"!==i&&"MapServer"!==i)throw new l(`${a}:invalid-parameters`,S(t,`has unsupported server type: ${i}`),{layer:t});if("MapServer"===i&&e.length>1)throw new l(`${a}:invalid-parameters`,"Only one layer or table in a map service can be saved")}const t=r(e[0].parsedUrl.path),n=t?.url.path,o=e.every((e=>{const a=r(e.parsedUrl.path);return a?.url.path===n}));if(!o)throw new l(`${a}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service")}async function re(e){U(e,x),await Promise.all(e.map((e=>e.load())));for(const a of e)P(a,x,J);ae(e,x),X(e,x)}function te(e,a){Z(a,e),$(e)}async function ne(e,a){let c=0,l=0;for(const{isTable:e}of a)e?l++:c++;const u=a[0].parsedUrl.path,f=r(u);if(e.url="FeatureServer"===f?.serverType?f.url.path:u,e.title||=f.title,e.extent=null,c>0){const r=a.map((e=>e.fullExtent)).filter(t).reduce(((e,a)=>e.clone().union(a)));r&&(e.extent=await n(r))}o(e,s.METADATA),i(e,s.MULTI_LAYER,a.length>1),i(e,s.SINGLE_LAYER,1===a.length),i(e,s.TABLE,l>0&&0===c),Z(a,e),$(e)}async function oe(e,a){return y({layer:e,itemType:j,validateLayer:J,createItemData:(e,a)=>L(a,[e]),errorNamePrefix:T,setItemProperties:_},a)}async function se(e,a){await Y(e);const r=e[0].portalItem,t=m(r),n=await Promise.all(e.map((e=>p(e,t,a)))),o=await L(r,e.map(((e,a)=>({layer:e,layerJSON:n[a]}))));return te(r,e),await r.update({data:o}),await Promise.all(e.slice(1).map((e=>e.portalItem.reload()))),f(t),r.clone()}async function ie(e,a,r){return d({layer:e,itemType:j,validateLayer:J,createItemData:(e,a)=>Promise.resolve(K(e)),errorNamePrefix:F,newItem:a,setItemProperties:ee},r)}async function ce(e,a,r){await re(e);const t=w({itemType:j,errorNamePrefix:x,newItem:a}),n=m(t),o=await Promise.all(e.map((e=>p(e,n,r)))),s=await M(e.map(((e,a)=>({layer:e,layerJSON:o[a]}))));await ne(t,e),await v(t,s,r);for(const a of e)a.portalItem=t.clone();return f(n),t}export{oe as save,se as saveAll,ce as saveAllAs,ie as saveAs};
//# sourceMappingURL=p-ffdea19b.js.map