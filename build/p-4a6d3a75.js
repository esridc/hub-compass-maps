import{$ as e,j as r}from"./p-2848d626.js";import{da as a,cN as t,d0 as i,cO as s}from"./p-028496e2.js";import"./p-055b59cb.js";import"./p-8be499c9.js";import"./p-ec296019.js";import"./p-16e782ba.js";import"./p-3b51db5e.js";const m="Image Service",o="imagery-layer-save",n="imagery-layer-save-as",c="imagery-tile-layer-save",l="imagery-tile-layer-save-as";function y(e){if("imagery"===e.type)return{isValid:!0};const{raster:r}=e,a="Function"===r?.datasetFormat?r.primaryRasters?.rasters[0]:r;return{isValid:"RasterTileServer"===a?.datasetFormat&&("Raster"===a.tileType||"Map"===a.tileType),errorMessage:"imagery tile layer should be created from a tiled image service."}}function p(e){const r=e.layerJSON;return Promise.resolve(r&&Object.keys(r).length?r:null)}async function u(e,r){const{parsedUrl:m,title:o,fullExtent:n}=e;r.url=m.path,r.title||=o;try{r.extent=await a(n)}catch{r.extent=void 0}t(r,i.METADATA),"imagery-tile"===e.type&&s(r,i.TILED_IMAGERY)}async function d(r,a){const t="imagery"===r.type?o:c;return e({layer:r,itemType:m,validateLayer:y,createItemData:p,errorNamePrefix:t},a)}async function f(e,a,t){const i="imagery"===e.type?n:l;return r({layer:e,itemType:m,validateLayer:y,createItemData:p,errorNamePrefix:i,newItem:a,setItemProperties:u},t)}export{d as save,f as saveAs};
//# sourceMappingURL=p-4a6d3a75.js.map