import{a as t,hg as e,h9 as n,cP as r,cL as a,d9 as o}from"./p-028496e2.js";import{t as i}from"./p-75e7bc9e.js";import{a as s,n as c,u,i as p,c as l,s as f,t as y,r as m,l as w,e as d}from"./p-29f2499f.js";import{populateGroupLayer as b}from"./p-6684cc8f.js";import{t as g,a as h}from"./p-2db650ee.js";import"./p-3b51db5e.js";import"./p-abeef152.js";async function S(t,e){const n=t.instance.portalItem;if(n?.id)return await n.load(e),v(t),t.validateItem&&t.validateItem(n),I(t,e)}function v(e){const n=e.instance.portalItem;if(!n?.type||!e.supportedTypes.includes(n.type))throw new t("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:n?.type,expectedType:e.supportedTypes.join(", ")})}async function I(t,r){const a=t.instance,o=a.portalItem;if(!o)return;const{url:i,title:s}=o,c=e(o,"portal-item");if("group"===a.type)return L(a,c,t);i&&"media"!==a.type&&a.read({url:i},c);const u=new d,p=await C(t,u,r);return p&&a.read(p,c),a.resourceReferences={portalItem:o,paths:c.readResourcePaths??[]},"subtype-group"!==a.type&&a.read({title:s},c),n(a,c)}async function L(e,n,a){const o=e.portalItem;if(!e.sourceIsPortalItem)return;const{title:i,type:s}=o;if("Group Layer"===s){if(!r(o,"Map"))throw new t("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return j(e)}return e.read({title:i},n),T(e,a)}async function j(t){const n=t.portalItem,r=await n.fetchData("json");if(!r)return;const a=e(n,"web-map");t.read(r,a),await b(t,r,{context:a}),t.resourceReferences={portalItem:n,paths:a.readResourcePaths??[]}}async function T(e,n){let r;const{portalItem:a}=e;if(!a)return;const o=a.type,i=n.layerModuleTypeMap;switch(o){case"Feature Service":case"Feature Collection":r=i.FeatureLayer;break;case"Stream Service":r=i.StreamLayer;break;case"Scene Service":r=i.SceneLayer;break;default:throw new t("portal:unsupported-item-type-as-group",`The item type '${o}' is not supported as a 'IGroupLayer'`)}const y=new d;let[m,b]=await Promise.all([r(),C(n,y)]),g=()=>m;if("Feature Service"===o){const t=w(b)?.customParameters;b=a.url?await s(b,a.url,y):{};const n=c(b),r=u(b),o=p(b),l=[];if(n.length||r?.length){n.length&&l.push("SubtypeGroupLayer"),r?.length&&l.push("OrientedImageryLayer"),o?.length&&l.push("CatalogLayer");const t=[];for(const e of l){const n=i[e];t.push(n())}const e=await Promise.all(t),a=new Map;l.forEach(((t,n)=>{a.set(t,e[n])})),g=t=>t.layerType?a.get(t.layerType)??m:m}const f=await $(a.url,{customParameters:t,loadContext:y});return await G(e,g,b,f)}return"Scene Service"===o&&a.url&&(b=await l(a,b,y)),f(b)>0?await G(e,g,b):await x(e,g)}async function x(t,e){const{portalItem:n}=t;if(!n?.url)return;const r=await g(n.url);r&&G(t,e,{layers:r.layers?.map(y),tables:r.tables?.map(y)})}async function G(t,e,n,r){let a=n.layers||[];const o=n.tables||[];if("Feature Collection"===t.portalItem?.type?(a.forEach(((t,e)=>{t.id=e,"Table"===t?.layerDefinition?.type&&o.push(t)})),a=a.filter((t=>"Table"!==t?.layerDefinition?.type))):(a.reverse(),o.reverse()),a.forEach((a=>{const o=r?.(a);if(o||!r){const r=k(t,e(a),n,a,o);t.add(r)}})),o.length){const e=await h.FeatureLayer();o.forEach((a=>{const o=r?.(a);if(o||!r){const r=k(t,e,n,a,o);t.tables.add(r)}}))}}function k(t,e,n,r,o){const i=t.portalItem,s={portalItem:i.clone(),layerId:r.id};null!=r.url&&(s.url=r.url);const c=new e(s);if("sourceJSON"in c&&(c.sourceJSON=o),"subtype-group"!==c.type&&"catalog"!==c.type&&(c.sublayerTitleMode="service-name"),"Feature Collection"===i.type){const t={origin:"portal-item",portal:i.portal||a.getDefault()};c.read(r,t);const e=n.showLegend;null!=e&&c.read({showLegend:e},t)}return c}async function C(t,e,n){if(!1===t.supportsData)return;const r=t.instance,a=r.portalItem;if(!a)return;let o=null;try{o=await a.fetchData("json",n)}catch(t){}if(M(r)){let t=null;const n=await F(a,o,e);if((o?.layers||o?.tables)&&n>0){if(null==r.layerId){const t=c(o);r.layerId="subtype-group"===r.type?t?.[0]:m(o)}t=P(o,r),t&&null!=o.showLegend&&(t.showLegend=o.showLegend)}return n>1&&"sublayerTitleMode"in r&&"service-name"!==r.sublayerTitleMode&&(r.sublayerTitleMode="item-title-and-service-name"),t}return o}async function F(t,e,n){if(e?.layers&&e?.tables)return f(e);const r=o(t.url);if(!r)return 1;const a=await n.fetchServiceMetadata(r.url.path,{customParameters:w(e)?.customParameters}).catch((()=>null));return(e?.layers?.length??a?.layers?.length??0)+(e?.tables?.length??a?.tables?.length??0)}function P(t,e){const{layerId:n}=e,r=t.layers?.find((t=>t.id===n))||t.tables?.find((t=>t.id===n));return r&&O(r,e)?r:null}function M(t){return"stream"!==t.type&&"layerId"in t}function O(t,e){return!("feature"===e.type&&"layerType"in t&&"SubtypeGroupLayer"===t.layerType||"subtype-group"===e.type&&!("layerType"in t))}async function $(t,e){const{layersJSON:n}=await i(t,e);if(!n)return null;const r=[...n.layers,...n.tables];return t=>r.find((e=>e.id===t.id))}export{S as load};
//# sourceMappingURL=p-5fcbe838.js.map