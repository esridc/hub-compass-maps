import{cC as t,br as s,bq as i,aQ as n,b0 as h,a_ as o,aT as r,cD as e,cE as c,aO as a,aV as f,cF as m,cG as x,cj as u}from"./p-028496e2.js";function l(t){return _(t,!0)}function y(t){return _(t,!1)}function _(c,a){if(null==c)return null;const l=c.spatialReference,y=f(l),_=t(c)?c.toJSON():c;if(!y)return _;const p=u(l)?102100:4326,T=m[p].maxX,I=m[p].minX;if(s(_))return d(_,T,I);if(i(_))return _.points=_.points.map((t=>d(t,T,I))),_;if(n(_))return w(_,y);if(h(_)||o(_)){const t=r(j,_),s={xmin:t[0],ymin:t[1],xmax:t[2],ymax:t[3]},i=x(s.xmin,I)*(2*T),n=0===i?_:e(_,i);return s.xmin+=i,s.xmax+=i,s.xmax>T?b(n,T,a):s.xmin<I?b(n,I,a):n}return _}function w(t,s){if(!s)return t;const i=p(t,s).map((t=>t.extent));return i.length<2?i[0]||t:i.length>2?(t.xmin=s.valid[0],t.xmax=s.valid[1],t):{rings:i.map((t=>[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]]))}}function d(t,s,i){if(Array.isArray(t)){const n=t[0];if(n>s){const i=x(n,s);t[0]=n+i*(-2*s)}else if(n<i){const s=x(n,i);t[0]=n+s*(-2*i)}}else{const n=t.x;if(n>s){const i=x(n,s);t.x+=i*(-2*s)}else if(n<i){const s=x(n,i);t.x+=s*(-2*i)}}return t}function p(t,s){const i=[],{ymin:n,ymax:h,xmin:o,xmax:r}=t,e=t.xmax-t.xmin,[c,a]=s.valid,{x:f,frameId:m}=T(t.xmin,s),{x,frameId:u}=T(t.xmax,s),l=f===x&&e>0;if(e>2*a){const t={xmin:o<r?f:x,ymin:n,xmax:a,ymax:h},s={xmin:c,ymin:n,xmax:o<r?x:f,ymax:h},e={xmin:0,ymin:n,xmax:a,ymax:h},l={xmin:c,ymin:n,xmax:0,ymax:h},y=[],_=[];I(t,e)&&y.push(m),I(t,l)&&_.push(m),I(s,e)&&y.push(u),I(s,l)&&_.push(u);for(let t=m+1;t<u;t++)y.push(t),_.push(t);i.push(new g(t,[m]),new g(s,[u]),new g(e,y),new g(l,_))}else f>x||l?i.push(new g({xmin:f,ymin:n,xmax:a,ymax:h},[m]),new g({xmin:c,ymin:n,xmax:x,ymax:h},[u])):i.push(new g({xmin:f,ymin:n,xmax:x,ymax:h},[m]));return i}function T(t,s){const[i,n]=s.valid,h=2*n;let o,r=0;return t>n?(o=Math.ceil(Math.abs(t-n)/h),t-=o*h,r=o):t<i&&(o=Math.ceil(Math.abs(t-i)/h),t+=o*h,r=-o),{x:t,frameId:r}}function I(t,s){const{xmin:i,ymin:n,xmax:h,ymax:o}=s;return M(t,i,n)&&M(t,i,o)&&M(t,h,o)&&M(t,h,n)}function M(t,s,i){return s>=t.xmin&&s<=t.xmax&&i>=t.ymin&&i<=t.ymax}function b(t,s,i=!0){const n=!o(t);if(n&&c(t),i){return(new v).cut(t,s)}const h=n?t.rings:t.paths,r=n?4:2,e=h.length,a=-2*s;for(let t=0;t<e;t++){const s=h[t];if(s&&s.length>=r){const t=[];for(const i of s)t.push([i[0]+a,i[1]]);h.push(t)}}return n?t.rings=h:t.paths=h,t}class g{constructor(t,s){this.extent=t,this.frameIds=s}}const j=a();class v{constructor(){this._linesIn=[],this._linesOut=[]}cut(t,s){let i;if(this._xCut=s,t.rings)this._closed=!0,i=t.rings,this._minPts=4;else{if(!t.paths)return null;this._closed=!1,i=t.paths,this._minPts=2}for(const t of i){if(!t||t.length<this._minPts)continue;let s=!0;for(const i of t)s?(this.moveTo(i),s=!1):this.lineTo(i);this._closed&&this.close()}this._pushLineIn(),this._pushLineOut(),i=[];for(const t of this._linesIn)t&&t.length>=this._minPts&&i.push(t);const n=-2*this._xCut;for(const t of this._linesOut)if(t&&t.length>=this._minPts){for(const s of t)s[0]+=n;i.push(t)}return this._closed?t.rings=i:t.paths=i,t}moveTo(t){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(t[0]),this._moveTo(t[0],t[1],this._prevSide),this._prevPt=t,this._firstPt=t}lineTo(t){const s=this._side(t[0]);if(s*this._prevSide==-1){const i=this._intersect(this._prevPt,t);this._lineTo(this._xCut,i,0),this._prevSide=0,this._lineTo(t[0],t[1],s)}else this._lineTo(t[0],t[1],s);this._prevSide=s,this._prevPt=t}close(){const t=this._firstPt,s=this._prevPt;t[0]===s[0]&&t[1]===s[1]||this.lineTo(t),this._checkClosingPt(this._lineIn),this._checkClosingPt(this._lineOut)}_moveTo(t,s,i){this._closed?(this._lineIn.push([i<=0?t:this._xCut,s]),this._lineOut.push([i>=0?t:this._xCut,s])):(i<=0&&this._lineIn.push([t,s]),i>=0&&this._lineOut.push([t,s]))}_lineTo(t,s,i){this._closed?(this._addPolyVertex(this._lineIn,i<=0?t:this._xCut,s),this._addPolyVertex(this._lineOut,i>=0?t:this._xCut,s)):i<0?(0===this._prevSide&&this._pushLineOut(),this._lineIn.push([t,s])):i>0?(0===this._prevSide&&this._pushLineIn(),this._lineOut.push([t,s])):this._prevSide<0?(this._lineIn.push([t,s]),this._lineOut.push([t,s])):this._prevSide>0&&(this._lineOut.push([t,s]),this._lineIn.push([t,s]))}_addPolyVertex(t,s,i){const n=t.length;n>1&&t[n-1][0]===s&&t[n-2][0]===s?t[n-1][1]=i:t.push([s,i])}_checkClosingPt(t){const s=t.length;s>3&&t[0][0]===this._xCut&&t[s-2][0]===this._xCut&&t[1][0]===this._xCut&&(t[0][1]=t[s-2][1],t.pop())}_side(t){return t<this._xCut?-1:t>this._xCut?1:0}_intersect(t,s){const i=(this._xCut-t[0])/(s[0]-t[0]);return t[1]+i*(s[1]-t[1])}_pushLineIn(){this._lineIn&&this._lineIn.length>=this._minPts&&this._linesIn.push(this._lineIn),this._lineIn=[]}_pushLineOut(){this._lineOut&&this._lineOut.length>=this._minPts&&this._linesOut.push(this._lineOut),this._lineOut=[]}}export{y as a,l as p};
//# sourceMappingURL=p-f87a9f21.js.map