import{m as t,r as e,p as r,q as i,_ as o,T as s,b7 as n,hz as a,hA as l,gZ as u}from"./p-aad64c9f.js";import"./p-2af77f97.js";const p=new t({startingPoint:"starting-point",barrier:"barrier"});let d=class extends o{constructor(t){super(t),this.globalId=null,this.isFilterBarrier=!1,this.percentAlong=null,this.terminalId=null,this.type=null}};e([r({type:String,json:{write:!0}})],d.prototype,"globalId",void 0),e([r({type:Boolean,json:{write:!0}})],d.prototype,"isFilterBarrier",void 0),e([r({type:Number,json:{write:!0}})],d.prototype,"percentAlong",void 0),e([r({type:Number,json:{write:!0}})],d.prototype,"terminalId",void 0),e([r({type:p.apiValues,json:{type:p.jsonValues,read:{reader:p.read,source:"traceLocationType"},write:{writer:p.write,target:"traceLocationType"}}})],d.prototype,"type",void 0),d=e([i("esri.rest.networks.support.TraceLocation")],d);const c=d;var w;let y=w=class extends o{static from(t){return u(w,t)}constructor(t){super(t),this.namedTraceConfigurationGlobalId=null,this.gdbVersion=null,this.traceLocations=[],this.moment=null,this.outSpatialReference=null,this.traceConfiguration=null,this.resultTypes=null,this.traceType=null}writeOutSR(t,e,r){if(null!=t){const{wkid:i,latestWkid:o,wkt:s,wkt2:n}=t;e[r]=JSON.stringify({wkid:i??void 0,latestWkid:o??void 0,wkt:s??void 0,wkt2:n??void 0})}}};e([r({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],y.prototype,"namedTraceConfigurationGlobalId",void 0),e([r({type:String,json:{write:!0}})],y.prototype,"gdbVersion",void 0),e([r({type:[c],json:{write:!0}})],y.prototype,"traceLocations",void 0),e([r({type:Date,json:{type:Number,write:{writer:(t,e)=>{e.moment=t?t.getTime():null}}}})],y.prototype,"moment",void 0),e([r({type:s,json:{write:{allowNull:!0,target:"outSR"}}})],y.prototype,"outSpatialReference",void 0),e([n("outSpatialReference")],y.prototype,"writeOutSR",null),e([r({type:a,json:{write:!0}})],y.prototype,"traceConfiguration",void 0),e([r({type:[Object],json:{write:!0}})],y.prototype,"resultTypes",void 0),e([r({type:l.apiValues,json:{type:l.jsonValues,read:l.read,write:l.write}})],y.prototype,"traceType",void 0),y=w=e([i("esri.rest.networks.support.TraceParameters")],y);const v=y;export default v;
//# sourceMappingURL=p-4ebdd836.js.map