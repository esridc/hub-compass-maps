import{U as e,dP as t,eu as o,dA as n,dC as r}from"./p-3013819f.js";import{t as s}from"./p-71d25f62.js";import"./p-3b51db5e.js";import"./p-a71453e3.js";import"./p-ad726e47.js";import"./p-94b15954.js";import"./p-1f0b604e.js";import"./p-347800d3.js";function a(e,o){const n=e.toJSON();return n.objectIds&&(n.objectIds=n.objectIds.join(",")),n.orderByFields&&(n.orderByFields=n.orderByFields.join(",")),n.outFields&&!o?.returnCountOnly?n.outFields.includes("*")?n.outFields="*":n.outFields=n.outFields.join(","):delete n.outFields,n.outSR&&(n.outSR=t(n.outSR)),n.dynamicDataSource&&(n.layer=JSON.stringify({source:n.dynamicDataSource}),delete n.dynamicDataSource),n}async function c(e,t,o){const n=await i(e,t,o),r=n.data,s=r.geometryType,a=r.spatialReference,c={};for(const e of r.relatedRecordGroups){const t={fields:void 0,objectIdFieldName:void 0,geometryType:s,spatialReference:a,hasZ:!!r.hasZ,hasM:!!r.hasM,features:e.relatedRecords};if(null!=e.objectId)c[e.objectId]=t;else for(const o of Object.keys(e))"relatedRecords"!==o&&(c[e[o]]=t)}return{...n,data:c}}async function u(e,t,o){const n=await i(e,t,o,{returnCountOnly:!0}),r=n.data,s={};for(const e of r.relatedRecordGroups)null!=e.objectId&&(s[e.objectId]=e.count);return{...n,data:s}}async function i(t,o,n={},r){const c=s({...t.query,f:"json",...r,...a(o,r)});return e(t.path+"/queryRelatedRecords",{...n,query:{...n.query,...c}})}async function f(e,t,s){t=o.from(t);const a=n(e);return c(a,t,s).then((e=>{const t=e.data,o={};return Object.keys(t).forEach((e=>o[e]=r.fromJSON(t[e]))),o}))}async function p(e,t,r){t=o.from(t);const s=n(e);return u(s,t,{...r}).then((e=>e.data))}export{f as executeRelationshipQuery,p as executeRelationshipQueryForCount};
//# sourceMappingURL=p-30f957c5.js.map