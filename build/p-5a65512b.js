import{s as t,i as e,f as i,m as s,r,o as n}from"./p-028496e2.js";import{u as o,a,e as h,m as l,b as u,c}from"./p-711ed159.js";import{A as f,F as d,V as g,C as p,X as m,G as x,U as _,t as w,n as v,M as y,B as b,H as D}from"./p-8567e6fe.js";const M=()=>t.getLogger("esri.views.webgl.BufferObject");class T{static createIndex(t,e,i){return new T(t,f.ELEMENT_ARRAY_BUFFER,e,i)}static createVertex(t,e,i){return new T(t,f.ARRAY_BUFFER,e,i)}static createUniform(t,e,i){return new T(t,f.UNIFORM_BUFFER,e,i)}static createPixelPack(t,e=d.STREAM_READ,i){const s=new T(t,f.PIXEL_PACK_BUFFER,e);return i&&s.setSize(i),s}static createPixelUnpack(t,e=d.STREAM_DRAW,i){return new T(t,f.PIXEL_UNPACK_BUFFER,e,i)}static createTransformFeedback(t,e=d.STATIC_DRAW,i){const s=new T(t,f.TRANSFORM_FEEDBACK_BUFFER,e);return s.setSize(i),s}constructor(t,e,i,s){this._context=t,this.bufferType=e,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(g.BufferObject,this),this._glName=this._context.gl.createBuffer(),o(this._context.gl),s&&this.setData(s)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get usedMemory(){return this.bufferType===f.ELEMENT_ARRAY_BUFFER?this._indexType===p.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===f.ELEMENT_ARRAY_BUFFER||this.bufferType===f.ARRAY_BUFFER}dispose(){if(this._context?.gl){if(this._glName){this._context.gl.deleteBuffer(this._glName),this._glName=null}this._context.instanceCounter.decrement(g.BufferObject,this),this._context=null}else this._glName&&M().warn("Leaked WebGL buffer object")}setSize(t,e=null){if(t<=0&&M().error("Buffer size needs to be positive!"),this.bufferType===f.ELEMENT_ARRAY_BUFFER&&null!=e)switch(this._indexType=e,e){case p.UNSIGNED_SHORT:t*=2;break;case p.UNSIGNED_INT:t*=4}this._setBufferData(t)}setData(t){if(!t)return;let s=t.byteLength;this.bufferType===f.ELEMENT_ARRAY_BUFFER&&(e(t)&&(s/=2,this._indexType=p.UNSIGNED_SHORT),i(t)&&(s/=4,this._indexType=p.UNSIGNED_INT)),this._setBufferData(s,t)}_setBufferData(t,e=null){this._size=t;const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const s=this._context.gl;null!=e?s.bufferData(this.bufferType,e,this.usage):s.bufferData(this.bufferType,t,this.usage),o(s),this._isVAOAware&&this._context.bindVAO(i)}setSubData(t,e,i,s){if(!t)return;(e<0||e*t.BYTES_PER_ELEMENT>=this.usedMemory)&&M().error("offset is out of range!"),i>=s&&M().error("end must be bigger than start!"),(e+(s-i))*t.BYTES_PER_ELEMENT>this.usedMemory&&M().error("An attempt to write beyond the end of the buffer!");const r=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const{gl:n}=this._context;n.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,t,i,s-i),o(n),this._isVAOAware&&this._context.bindVAO(r)}getSubData(t,e=0,i,s){if(i<0||s<0)return void M().error("Problem getting subdata: offset and length were less than zero!");const r=P(t)?t.BYTES_PER_ELEMENT:1;if(r*((i??0)+(s??0))>t.byteLength)return void M().error("Problem getting subdata: offset and length exceeded destination size!");e+r*(s??0)>this.usedMemory&&M().warn("Potential problem getting subdata: requested data exceeds buffer size!");const n=this._context.gl;this.bufferType===f.TRANSFORM_FEEDBACK_BUFFER?(this._context.bindBuffer(this,f.TRANSFORM_FEEDBACK_BUFFER),n.getBufferSubData(f.TRANSFORM_FEEDBACK_BUFFER,e,t,i,s),this._context.unbindBuffer(f.TRANSFORM_FEEDBACK_BUFFER)):(this._context.bindBuffer(this,f.COPY_READ_BUFFER),n.getBufferSubData(f.COPY_READ_BUFFER,e,t,i,s),this._context.unbindBuffer(f.COPY_READ_BUFFER))}async getSubDataAsync(t,e=0,i,s){await this._context.clientWaitAsync(),this.getSubData(t,e,i,s)}}function P(t){return s(t)}class C{constructor(t,e,i=e){this.internalFormat=t,this.width=e,this.height=i,this.multisampled=!1,this.samples=1}}function S(t){return t.width<=0||t.height<=0||null==t.internalFormat?0:t.width*t.height*a(t.internalFormat)}class k{constructor(t,e){this._context=t,this._descriptor=e,this.type=h.RenderBuffer,this._context.instanceCounter.increment(g.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:s,height:r,internalFormat:n,multisampled:o}=e;o?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,n,s,r):i.renderbufferStorage(i.RENDERBUFFER,n,s,r)}get descriptor(){return this._descriptor}get samples(){const t=this._descriptor.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}get usedMemory(){return S(this._descriptor)}resize(t,e){const i=this._descriptor;if(i.width===t&&i.height===e)return;i.width=t,i.height=e;const s=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?s.renderbufferStorageMultisample(s.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):s.renderbufferStorage(s.RENDERBUFFER,i.internalFormat,i.width,i.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(g.Renderbuffer,this),this._context=null)}}const E=()=>t.getLogger("esri.views.webgl.FramebufferObject");class F{constructor(t,e,i=null){this._context=t,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,t.instanceCounter.increment(g.FramebufferObject,this);const s=A(e)?e:new l(this._context,e);if(this._colorAttachments.set(m.COLOR_ATTACHMENT0,s),this._validateTextureDescriptor(s.descriptor),this._validateColorAttachmentPoint(m.COLOR_ATTACHMENT0),null!=i)if(U(i))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),this._depthStencilTexture=A(i)?i:new l(this._context,i),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const t=L(i)?i:new k(this._context,i);this._depthStencilBuffer=t,this._validateRenderBufferDescriptor(t.descriptor)}}dispose(){if(0===this._colorAttachments.size&&!this._glName)return;const t=this._context.getBoundFramebufferObject();if(this._colorAttachments.forEach(((t,e)=>this.detachColorTexture(e)?.dispose())),this.detachDepthStencilBuffer()?.dispose(),this.detachDepthStencilTexture()?.dispose(),this._glName){this._context.gl.deleteFramebuffer(this._glName),this._glName=null}this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(g.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(m.COLOR_ATTACHMENT0)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){const t=this._colorAttachments.get(m.COLOR_ATTACHMENT0);return t?.descriptor?.width??0}get height(){const t=this._colorAttachments.get(m.COLOR_ATTACHMENT0);return t?.descriptor?.height??0}get usedMemory(){return[...this._colorAttachments].reduce(((t,[e,i])=>t+i.usedMemory),this.depthStencil?.usedMemory??0)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&A(e)?e:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(t,e=m.COLOR_ATTACHMENT0){if(!t)return;this._validateColorAttachmentPoint(e);const i=t.descriptor;this._validateTextureDescriptor(i),this.detachColorTexture(e)?.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e)),this._colorAttachments.set(e,t)}detachColorTexture(t=m.COLOR_ATTACHMENT0){const e=this._colorAttachments.get(t);if(e){if(this._initialized){const e=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t),this._context.bindFramebuffer(e)}return this._colorAttachments.delete(t),e}}setColorTextureTarget(t,e=m.COLOR_ATTACHMENT0){const i=this._colorAttachments.get(e);i&&this._framebufferTexture2D(i.glName,e,t)}attachDepthStencil(t){if(t)switch(t.type){case h.Texture:return this._attachDepthStencilTexture(t);case h.RenderBuffer:return this._attachDepthStencilBuffer(t)}}_attachDepthStencilTexture(t){if(null==t)return;const e=t.descriptor;e.pixelFormat!==x.DEPTH_STENCIL&&e.pixelFormat!==x.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),e.dataType!==_.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,w)),this._depthStencilTexture?.dispose(),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,w)),this._depthStencilTexture=null,t}_attachDepthStencilBuffer(t){if(null==t)return;const e=t.descriptor;if(this._validateRenderBufferDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const i=this._context.gl,s=this._getGLAttachmentPoint(e);i.framebufferRenderbuffer(v.FRAMEBUFFER,s,i.RENDERBUFFER,t.glName)}this._depthStencilBuffer=t}detachDepthStencilBuffer(){const t=this._depthStencilBuffer;if(t&&this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,i=this._getGLAttachmentPoint(t.descriptor);e.framebufferRenderbuffer(v.FRAMEBUFFER,i,e.RENDERBUFFER,null)}return this._depthStencilBuffer=null,t}copyToTexture(t,e,i,s,r,n,o){(t<0||e<0||r<0||n<0)&&console.error("Offsets cannot be negative!"),(i<=0||s<=0)&&console.error("Copy width and height must be greater than zero!");const a=o.descriptor;o.descriptor.target!==y.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==a?.width||null==a?.height||t+i>this.width||e+s>this.height||r+i>a.width||n+s>a.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const h=this._context,u=h.bindTexture(o,l.TEXTURE_UNIT_FOR_UPDATES);h.setActiveTexture(l.TEXTURE_UNIT_FOR_UPDATES),h.bindFramebuffer(this),h.gl.copyTexSubImage2D(y.TEXTURE_2D,0,r,n,t,e,i,s),h.bindTexture(u,l.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,i,s,r,n,o){(i<=0||s<=0)&&console.error("Copy width and height must be greater than zero!"),o||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,i,s,r,n,o)}async readPixelsAsync(t,e,i,s,r,n,o){const{gl:a}=this._context,h=T.createPixelPack(this._context,d.STREAM_READ,o.byteLength);this._context.bindBuffer(h),this._context.bindFramebuffer(this),a.readPixels(t,e,i,s,r,n,0),this._context.unbindBuffer(f.PIXEL_PACK_BUFFER),await h.getSubDataAsync(o),h.dispose()}resize(t,e){if(this.width===t&&this.height===e)return;const i={width:t,height:e};j(i,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((t=>t.resize(i.width,i.height))),this._depthStencilTexture?.resize(i.width,i.height),this._initialized&&(j(i,this._context.parameters.maxRenderbufferSize),this._depthStencilBuffer?.resize(i.width,i.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(t=v.FRAMEBUFFER){const e=this._context.gl;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const i=e.createFramebuffer();if(e.bindFramebuffer(t,i),this._colorAttachments.forEach(((e,i)=>this._framebufferTexture2D(e.glName,i,B(e),t))),this._depthStencilBuffer){const i=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(t,i,e.RENDERBUFFER,this._depthStencilBuffer.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,e.DEPTH_STENCIL_ATTACHMENT,B(this._depthStencilTexture),t);if(u()){e.checkFramebufferStatus(t)!==e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!")}this._glName=i,this._initialized=!0}_framebufferTexture2D(t,e=m.COLOR_ATTACHMENT0,i=y.TEXTURE_2D,s=v.FRAMEBUFFER,r=0){this._context.gl.framebufferTexture2D(s,e,i,t,r)}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const e=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(v.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthStencilBuffer=r(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=r(this._depthStencilTexture))}_validateTextureDescriptor(t){t.target!==y.TEXTURE_2D&&t.target!==y.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),j(t,this._context.parameters.maxTextureSize),this._validateBufferDimensions(t)}_validateRenderBufferDescriptor(t){j(t,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(t)}_validateBufferDimensions(t){t.width<=0&&(t.width=this.width),t.height<=0&&(t.height=this.height),this.width>0&&this.height>0&&(this.width===t.width&&this.height===t.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(t){switch(t.internalFormat){case b.DEPTH_COMPONENT16:case b.DEPTH_COMPONENT24:case b.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case b.DEPTH24_STENCIL8:case b.DEPTH32F_STENCIL8:case b.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case b.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(e){if(-1===F._MAX_COLOR_ATTACHMENTS){const{gl:t}=this._context;F._MAX_COLOR_ATTACHMENTS=t.getParameter(t.MAX_COLOR_ATTACHMENTS)}const i=e-m.COLOR_ATTACHMENT0;i+1>F._MAX_COLOR_ATTACHMENTS&&t.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${i+1}. Implementation supports up to ${F._MAX_COLOR_ATTACHMENTS} color attachments`)}}function A(t){return null!=t&&"type"in t&&t.type===h.Texture}function L(t){return null!=t&&"type"in t&&t.type===h.RenderBuffer}function U(t){return A(t)||null!=t&&"pixelFormat"in t}function j(t,e){const i=Math.max(t.width,t.height);if(i>e){E().warn(`Resizing FBO attachment size ${t.width}x${t.height} to device limit ${e}`);const s=e/i;return t.width=Math.round(t.width*s),t.height=Math.round(t.height*s),!1}return!0}function B(t){return t.descriptor.target===y.TEXTURE_CUBE_MAP?y.TEXTURE_CUBE_MAP_POSITIVE_X:y.TEXTURE_2D}F._MAX_COLOR_ATTACHMENTS=-1;const z=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"];var G,O={exports:{}};void 0!==(G=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(O.exports=G);const V=n(O.exports);var I,X={exports:{}};I=X,function(t){var e=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"];void 0!==e&&(I.exports=e)}();const R=n(X.exports);var $={exports:{}};!function(t){!function(e){var i=function(){return["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"]}();void 0!==i&&(t.exports=i)}()}($);const N=n($.exports);var q=999,H=9999,W=0,Q=1,K=2,Z=3,J=4,Y=5,tt=6,et=7,it=8,st=9,rt=10,nt=11,ot=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function at(){var t,e,i,s=0,r=0,n=q,o=[],a=[],h=1,l=0,u=0,c=!1,f=!1,d="";return function(t){return a=[],null!==t?p(t.replace?t.replace(/\r\n/g,"\n"):t):m()};function g(t){t.length&&a.push({type:ot[n],data:t,position:u,line:h,column:l})}function p(e){var o;for(s=0,i=(d+=e).length;t=d[s],s<i;){switch(o=s,n){case W:s=y();break;case Q:s=v();break;case K:s=w();break;case Z:s=b();break;case J:s=T();break;case nt:s=M();break;case Y:s=P();break;case H:s=C();break;case st:s=_();break;case q:s=x()}if(o!==s)if("\n"===d[o])l=0,++h;else++l}return r+=s,d=d.slice(s),a}function m(t){return o.length&&g(o.join("")),n=rt,g("(eof)"),a}function x(){return o=o.length?[]:o,"/"===e&&"*"===t?(u=r+s-1,n=W,e=t,s+1):"/"===e&&"/"===t?(u=r+s-1,n=Q,e=t,s+1):"#"===t?(n=K,u=r+s,s):/\s/.test(t)?(n=st,u=r+s,s):(c=/\d/.test(t),f=/[^\w_]/.test(t),u=r+s,n=c?J:f?Z:H,s)}function _(){return/[^\s]/g.test(t)?(g(o.join("")),n=q,s):(o.push(t),e=t,s+1)}function w(){return"\r"!==t&&"\n"!==t||"\\"===e?(o.push(t),e=t,s+1):(g(o.join("")),n=q,s)}function v(){return w()}function y(){return"/"===t&&"*"===e?(o.push(t),g(o.join("")),n=q,s+1):(o.push(t),e=t,s+1)}function b(){if("."===e&&/\d/.test(t))return n=Y,s;if("/"===e&&"*"===t)return n=W,s;if("/"===e&&"/"===t)return n=Q,s;if("."===t&&o.length){for(;D(o););return n=Y,s}if(";"===t||")"===t||"("===t){if(o.length)for(;D(o););return g(t),n=q,s+1}var i=2===o.length&&"="!==t;if(/[\w_\d\s]/.test(t)||i){for(;D(o););return n=q,s}return o.push(t),e=t,s+1}function D(t){for(var e,i,s=0;;){if(e=R.indexOf(t.slice(0,t.length+s).join("")),i=R[e],-1===e){if(s--+t.length>0)continue;i=t.slice(0,1).join("")}return g(i),u+=i.length,(o=o.slice(i.length)).length}}function M(){return/[^a-fA-F0-9]/.test(t)?(g(o.join("")),n=q,s):(o.push(t),e=t,s+1)}function T(){return"."===t||/[eE]/.test(t)?(o.push(t),n=Y,e=t,s+1):"x"===t&&1===o.length&&"0"===o[0]?(n=nt,o.push(t),e=t,s+1):/[^\d]/.test(t)?(g(o.join("")),n=q,s):(o.push(t),e=t,s+1)}function P(){return"f"===t&&(o.push(t),e=t,s+=1),/[eE]/.test(t)||"-"===t&&/[eE]/.test(e)?(o.push(t),e=t,s+1):/[^\d]/.test(t)?(g(o.join("")),n=q,s):(o.push(t),e=t,s+1)}function C(){if(/[^\d\w_]/.test(t)){var i=o.join("");return n=V.indexOf(i)>-1?it:N.indexOf(i)>-1?et:tt,g(o.join("")),n=q,s}return o.push(t),e=t,s+1}}function ht(t){var e=at(),i=[];return i=(i=i.concat(e(t))).concat(e(null))}function lt(t){return ht(t)}function ut(t){return t.map((t=>"eof"!==t.type?t.data:"")).join("")}const ct=new Set(["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"]);function ft(t,e="100",i="300 es"){const s=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const r of t)if("preprocessor"===r.type){const t=s.exec(r.data);if(t){const s=t[1].replaceAll(/\s\s+/g," ");if(s===i)return s;if(s===e)return r.data="#version "+i,e;throw new Error("unknown glsl version: "+s)}}return t.splice(0,0,{type:"preprocessor",data:"#version "+i},{type:"whitespace",data:"\n"}),null}function dt(t,e){for(let i=e-1;i>=0;i--){const e=t[i];if("whitespace"!==e.type&&"block-comment"!==e.type){if("keyword"!==e.type)break;if("attribute"===e.data||"in"===e.data)return!0}}return!1}function gt(t,e,i,s){s=s||i;for(const r of t)if("ident"===r.type&&r.data===i){s in e?e[s]++:e[s]=0;return gt(t,e,s+"_"+e[s],s)}return i}function pt(t,e,i="afterVersion"){function s(t,e){for(let i=e;i<t.length;i++){const e=t[i];if("operator"===e.type&&";"===e.data)return i}return null}function r(t){let e=-1,r=0,n=-1;for(let o=0;o<t.length;o++){const a=t[o];if("preprocessor"===a.type&&(/\#(if|ifdef|ifndef)\s+.+/.test(a.data)?++r:/\#endif\s*.*/.test(a.data)&&--r),"afterVersion"!==i&&"afterPrecision"!==i||"preprocessor"===a.type&&a.data.startsWith("#version")&&(n=Math.max(n,o)),"afterPrecision"===i&&"keyword"===a.type&&"precision"===a.data){const e=s(t,o);if(null===e)throw new Error("precision statement not followed by any semicolons!");n=Math.max(n,e)}e<n&&0===r&&(e=o)}return e+1}const n={data:"\n",type:"whitespace"},o=e=>e<t.length&&/[^\r\n]$/.test(t[e].data);let a=r(t);o(a-1)&&t.splice(a++,0,n);for(const i of e)t.splice(a++,0,i);o(a-1)&&o(a)&&t.splice(a,0,n)}function mt(t,e,i,s="lowp"){pt(t,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:s},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function xt(t,e,i,s,r="lowp"){pt(t,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:s.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function _t(t,e){let i,s,r=-1;for(let n=e;n<t.length;n++){const e=t[n];if("operator"===e.type&&("["===e.data&&(i=n),"]"===e.data)){s=n;break}"integer"===e.type&&(r=parseInt(e.data,10))}return i&&s&&t.splice(i,s-i+1),r}function wt(t,e){if(t.startsWith("#version 300"))return t;const i=lt(t);if("300 es"===ft(i,"100","300 es"))return t;let s=null,r=null;const n={},o={};for(let t=0;t<i.length;++t){const a=i[t];switch(a.type){case"keyword":e===D.VERTEX_SHADER&&"attribute"===a.data?a.data="in":"varying"===a.data&&(a.data=e===D.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(a.data.trim())&&(a.data=a.data.replaceAll(/(2D|Cube|EXT)/g,"")),e===D.FRAGMENT_SHADER&&"gl_FragColor"===a.data&&(s||(s=gt(i,n,"fragColor"),mt(i,s,"vec4")),a.data=s),e===D.FRAGMENT_SHADER&&"gl_FragData"===a.data){const e=_t(i,t+1),s=gt(i,n,"fragData");xt(i,s,"vec4",e,"mediump"),a.data=s}else e===D.FRAGMENT_SHADER&&"gl_FragDepthEXT"===a.data&&(r||(r=gt(i,n,"gl_FragDepth")),a.data=r);break;case"ident":if(z.includes(a.data)){if(e===D.VERTEX_SHADER&&dt(i,t))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");a.data in o||(o[a.data]=gt(i,n,a.data)),a.data=o[a.data]}}}for(let t=i.length-1;t>=0;--t){const e=i[t];if("preprocessor"===e.type){const s=e.data.match(/\#extension\s+(.*)\:/);if(s&&s[1]&&ct.has(s[1].trim())){const e=i[t+1];i.splice(t,e&&"whitespace"===e.type?2:1)}const r=e.data.match(/\#ifdef\s+(.*)/);r&&r[1]&&ct.has(r[1].trim())&&(e.data="#if 1");const n=e.data.match(/\#ifndef\s+(.*)/);n&&n[1]&&ct.has(n[1].trim())&&(e.data="#if 0")}}return vt(t,ut(i))}function vt(t,e){return e}const yt=4294967295;class bt{constructor(t,e,i,s,r=new Map,n=[]){this._context=t,this._locations=s,this._uniformBlockBindings=r,this._transformFeedbackVaryings=n,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,t||console.error("RenderingContext isn't initialized!"),0===e.length&&console.error("Shaders source should not be empty!"),e=wt(e,D.VERTEX_SHADER),i=wt(i,D.FRAGMENT_SHADER),this._vShader=Dt(this._context,D.VERTEX_SHADER,e),this._fShader=Dt(this._context,D.FRAGMENT_SHADER,i),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(g.Shader,this),c()&&(this.vertexShader=e,this.fragmentShader=i),this.usedMemory=e.length+i.length;const o=this._context.gl,a=o.createProgram();o.attachShader(a,this._vShader),o.attachShader(a,this._fShader),this._locations.forEach(((t,e)=>o.bindAttribLocation(a,t,e))),this._transformFeedbackVaryings?.length&&o.transformFeedbackVaryings(a,this._transformFeedbackVaryings,o.SEPARATE_ATTRIBS),o.linkProgram(a),c()&&!o.getProgramParameter(a,o.LINK_STATUS)&&console.error(`Could not link shader\nvalidated: ${o.getProgramParameter(a,o.VALIDATE_STATUS)}, gl error ${o.getError()}, vertex: ${o.getShaderParameter(this._vShader,o.COMPILE_STATUS)}, fragment: ${o.getShaderParameter(this._fShader,o.COMPILE_STATUS)}, info log: ${o.getProgramInfoLog(a)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`);for(const[t,e]of this._uniformBlockBindings){const i=o.getUniformBlockIndex(a,t);i<yt&&o.uniformBlockBinding(a,i,e)}this._glName=a,this._context.instanceCounter.increment(g.Program,this)}get glName(){return this._glName}get hasGLName(){return null!=this._glName}get hasTransformFeedbackVaryings(){return!!this._transformFeedbackVaryings?.length}get compiled(){if(this._compiled)return!0;const t=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==t||null==this.glName?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,t.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const t=this._context.gl,e=this._context.instanceCounter;this._nameToUniformLocation.forEach((t=>t&&e.decrement(g.Uniform,t))),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(e.decrement(g.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),t.deleteShader(this._vShader),this._vShader=null,e.decrement(g.Shader,this)),this._fShader&&(t.deleteShader(this._fShader),this._fShader=null),this._glName&&(t.deleteProgram(this._glName),this._glName=null,e.decrement(g.Program,this))}ref(){++this._refCount}_getUniformLocation(t){const e=this._nameToUniformLocation.get(t);if(void 0!==e)return e;if(this.glName){const e=this._context.gl.getUniformLocation(this.glName,t);return this._nameToUniformLocation.set(t,e),e&&this._context.instanceCounter.increment(g.Uniform,e),e}return null}hasUniform(t){return null!=this._getUniformLocation(t)}setUniform1i(t,e){const i=this._nameToUniform1.get(t);void 0!==i&&e===i||(this._context.gl.uniform1i(this._getUniformLocation(t),e),this._nameToUniform1.set(t,e))}setUniform1iv(t,e){Pt(this._nameToUniform1v,t,e)&&this._context.gl.uniform1iv(this._getUniformLocation(t),e)}setUniform2iv(t,e){Pt(this._nameToUniform2,t,e)&&this._context.gl.uniform2iv(this._getUniformLocation(t),e)}setUniform3iv(t,e){Pt(this._nameToUniform3,t,e)&&this._context.gl.uniform3iv(this._getUniformLocation(t),e)}setUniform4iv(t,e){Pt(this._nameToUniform4,t,e)&&this._context.gl.uniform4iv(this._getUniformLocation(t),e)}setUniform1f(t,e){const i=this._nameToUniform1.get(t);void 0!==i&&e===i||(this._context.gl.uniform1f(this._getUniformLocation(t),e),this._nameToUniform1.set(t,e))}setUniform1fv(t,e){Pt(this._nameToUniform1v,t,e)&&this._context.gl.uniform1fv(this._getUniformLocation(t),e)}setUniform2f(t,e,i){const s=this._nameToUniform2.get(t);void 0===s?(this._context.gl.uniform2f(this._getUniformLocation(t),e,i),this._nameToUniform2.set(t,[e,i])):e===s[0]&&i===s[1]||(this._context.gl.uniform2f(this._getUniformLocation(t),e,i),s[0]=e,s[1]=i)}setUniform2fv(t,e){Pt(this._nameToUniform2,t,e)&&this._context.gl.uniform2fv(this._getUniformLocation(t),e)}setUniform3f(t,e,i,s){const r=this._nameToUniform3.get(t);void 0===r?(this._context.gl.uniform3f(this._getUniformLocation(t),e,i,s),this._nameToUniform3.set(t,[e,i,s])):e===r[0]&&i===r[1]&&s===r[2]||(this._context.gl.uniform3f(this._getUniformLocation(t),e,i,s),r[0]=e,r[1]=i,r[2]=s)}setUniform3fv(t,e){const i=this._getUniformLocation(t);null!=i&&Pt(this._nameToUniform3,t,e)&&this._context.gl.uniform3fv(i,e)}setUniform4f(t,e,i,s,r){const n=this._nameToUniform4.get(t);void 0===n?(this._context.gl.uniform4f(this._getUniformLocation(t),e,i,s,r),this._nameToUniform4.set(t,[e,i,s,r])):void 0!==n&&e===n[0]&&i===n[1]&&s===n[2]&&r===n[3]||(this._context.gl.uniform4f(this._getUniformLocation(t),e,i,s,r),n[0]=e,n[1]=i,n[2]=s,n[3]=r)}setUniform4fv(t,e){const i=this._getUniformLocation(t);null!=i&&Pt(this._nameToUniform4,t,e)&&this._context.gl.uniform4fv(i,e)}setUniformMatrix3fv(t,e,i=!1){const s=this._getUniformLocation(t);null!=s&&Pt(this._nameToUniformMatrix3,t,e)&&this._context.gl.uniformMatrix3fv(s,i,e)}setUniformMatrix4fv(t,e,i=!1){const s=this._getUniformLocation(t);null!=s&&Pt(this._nameToUniformMatrix4,t,e)&&this._context.gl.uniformMatrix4fv(s,i,e)}stop(){}}function Dt(t,e,i){const s=t.gl,r=s.createShader(e);return s.shaderSource(r,i),s.compileShader(r),c()&&!s.getShaderParameter(r,s.COMPILE_STATUS)&&(console.error("Compile error in ".concat(e===D.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(s.getShaderInfoLog(r)),console.error(Mt(i))),r}function Mt(t){let e=2;return t.replaceAll("\n",(()=>"\n"+Tt(e++)+":"))}function Tt(t){return t>=1e3?t.toString():("  "+t).slice(-3)}function Pt(t,e,i){const s=t.get(e);if(!s)return t.set(e,Array.from(i)),!0;const r=i.length;if(s.length!==r)return t.set(e,Array.from(i)),!0;for(let t=0;t<r;++t){const e=i[t];if(s[t]!==e){for(s[t]=e;t<r;++t)s[t]=i[t];return!0}}return!1}export{T as h,C as i,bt as r,k as s,F as x};
//# sourceMappingURL=p-5a65512b.js.map