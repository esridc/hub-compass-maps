import{d as e,s as r,hF as a,hG as t,ad as n,hH as s}from"./p-aad64c9f.js";import{s as o}from"./p-86923af6.js";import{a as l,b as c,i as u,t as i}from"./p-c679ddd9.js";import"./p-2af77f97.js";const y={FeatureLayer:!0,SceneLayer:!0};async function f(e){const{properties:r,url:a}=e,t={...r,url:a},n=await v(a,r?.customParameters),{Constructor:s,layerId:o,sourceJSON:l,parsedUrl:c,layers:u,tables:i}=n;if(u.length+i.length===0)return null!=o&&(t.layerId=o),null!=l&&(t.sourceJSON=l),new s(t);const y=new((await import("./p-3f3508f2.js")).default)({title:c.title});return await w(y,n,t),y}function m(e,r){return e?e.find((({id:e})=>e===r)):null}function p(e,r,a,t,n){const s={...n,layerId:r};return null!=e&&(s.url=e),null!=a&&(s.sourceJSON=a),"sublayerTitleMode"in t.prototype&&(s.sublayerTitleMode="service-name"),new t(s)}async function w(e,r,a){const t=r.sublayerConstructorProvider;for(const{id:n,serverUrl:s}of r.layers){const o=m(r.sublayerInfos,n),l=p(s,n,o,(o&&t?.(o))??r.Constructor,a);e.add(l)}if(r.tables.length){const t=await h("FeatureLayer");r.tables.forEach((({id:n,serverUrl:s})=>{const o=p(s,n,m(r.tableInfos,n),t,a);e.tables.add(o)}))}}async function v(a,t){let n=e(a);if(null==n&&(n=await d(a,t)),null==n)throw new r("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:a});const{serverType:o,sublayer:l}=n;let i;const f={FeatureServer:"FeatureLayer",KnowledgeGraphServer:"KnowledgeGraphLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer",VideoServer:"VideoLayer"},m="FeatureServer"===o,p="SceneServer"===o,w={parsedUrl:n,Constructor:null,layerId:m||p?l??void 0:void 0,layers:[],tables:[]};switch(o){case"MapServer":if(null!=l){const{type:e}=await c(a,{customParameters:t});switch(i="FeatureLayer",e){case"Catalog Layer":i="CatalogLayer";break;case"Catalog Dynamic Group Layer":throw new r("arcgis-layers:unsupported",`fromUrl() not supported for "${e}" layers`)}}else{i=await g(a,t)?"TileLayer":"MapImageLayer"}break;case"ImageServer":{const e=await c(a,{customParameters:t}),{tileInfo:r,cacheType:n}=e;i=r?"LERC"!==r?.format?.toUpperCase()||n&&"elevation"!==n.toLowerCase()?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const e=await c(n.url.path,{customParameters:t});if(i="SceneLayer",e){const r=e?.layers;if("Voxel"===e?.layerType)i="VoxelLayer";else if(r?.length){const e=r[0]?.layerType;null!=e&&null!=s[e]&&(i=s[e])}}break}case"3DTilesServer":throw new r("arcgis-layers:unsupported","fromUrl() not supported for 3DTiles layers");case"FeatureServer":if(i="FeatureLayer",null!=l){const e=await c(a,{customParameters:t});w.sourceJSON=e,i=u(e.type)}break;default:i=f[o]}if(y[i]&&null==l){const e=await L(a,o,t);m&&(w.sublayerInfos=e.layerInfos,w.tableInfos=e.tableInfos);if(1!==e.layers.length+e.tables.length)w.layers=e.layers,w.tables=e.tables,m&&e.layerInfos?.length&&(w.sublayerConstructorProvider=await I(e.layerInfos));else if(m||p){const r=e.layerInfos?.[0]??e.tableInfos?.[0];if(w.layerId=e.layers[0]?.id??e.tables[0]?.id,w.sourceJSON=r,m){const e=r?.type;i=u(e)}}}return w.Constructor=await h(i),w}async function d(e,r){const s=await c(e,{customParameters:r});let o=null,l=null;const u=s.type;if("Feature Layer"===u||"Table"===u?(o="FeatureServer",l=s.id??null):"indexedVector"===u?o="VectorTileServer":s.hasOwnProperty("mapName")?o="MapServer":s.hasOwnProperty("bandCount")&&s.hasOwnProperty("pixelSizeX")?o="ImageServer":s.hasOwnProperty("maxRecordCount")&&s.hasOwnProperty("allowGeometryUpdates")?o="FeatureServer":s.hasOwnProperty("streamUrls")?o="StreamServer":S(s)?(o="SceneServer",l=s.id):s.hasOwnProperty("layers")&&S(s.layers?.[0])&&(o="SceneServer"),!o)return null;const i=null!=l?a(e):null;return{title:null!=i&&s.name||t(e),serverType:o,sublayer:l,url:{path:null!=i?i.serviceUrl:n(e).path}}}function S(e){return null!=e&&e.hasOwnProperty("store")&&e.hasOwnProperty("id")&&"number"==typeof e.id}async function L(e,r,a){let t,n,s=!1;switch(r){case"FeatureServer":{const r=await i(e,{customParameters:a});s=!!r.layersJSON,t=r.layersJSON||r.serviceJSON;break}case"SceneServer":{const r=await b(e,a);t=r.serviceInfo,n=r.tableServerUrl;break}default:t=await c(e,{customParameters:a})}const o=t?.layers,l=t?.tables;return{layers:o?.map((e=>({id:e.id}))).reverse()||[],tables:l?.map((e=>({serverUrl:n,id:e.id}))).reverse()||[],layerInfos:s?o:[],tableInfos:s?l:[]}}async function b(e,r){const a=await c(e,{customParameters:r}),t=a.layers?.[0];if(!t)return{serviceInfo:a};try{const{serverUrl:t}=await o(e),n=await c(t,{customParameters:r}).catch((()=>null));return n&&(a.tables=n.tables),{serviceInfo:a,tableServerUrl:t}}catch{return{serviceInfo:a}}}async function h(e){return(0,l[e])()}async function g(e,r){return(await c(e,{customParameters:r})).tileInfo}async function I(e){if(!e.length)return;const r=new Set,a=[];for(const{type:t}of e)r.has(t)||(r.add(t),a.push(h(u(t))));const t=await Promise.all(a),n=new Map;return Array.from(r).forEach(((e,r)=>{n.set(e,t[r])})),e=>n.get(e.type)}export{f as fromUrl};
//# sourceMappingURL=p-318eb6a8.js.map