import{S as e,s as r,hH as a,hf as t}from"./p-aad64c9f.js";import{s as n}from"./p-86923af6.js";import{b as s,i as c,a as u}from"./p-c679ddd9.js";class i{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(e,r){const a=this._serviceMetadatas.get(e);if(a)return a;const t=await s(e,r);return this._serviceMetadatas.set(e,t),t}async fetchItemData(e){const{id:r}=e;if(!r)return null;const{_itemDatas:a}=this;if(a.has(r))return a.get(r);const t=await e.fetchData();return a.set(r,t),t}async fetchCustomParameters(e,r){const a=await this.fetchItemData(e);return a&&"object"==typeof a&&(r?r(a):a.customParameters)||null}}function o(e){const r={id:e.id,name:e.name},a=c(e.type);return"FeatureLayer"!==a&&(r.layerType=a),r}async function l(e,r,a){if(null==e?.layers||null==e?.tables){const t=await a.fetchServiceMetadata(r,{customParameters:y(e)?.customParameters});(e=e||{}).layers=e.layers||t?.layers?.map(o),e.tables=e.tables||t?.tables?.map(o)}return e}function y(e){if(!e)return null;const{layers:r,tables:a}=e;return r?.length?r[0]:a?.length?a[0]:null}function f(e,r){if(null==r)return null;return[...e.layers||[],...e.tables||[]].find((e=>e.id===r))}function m(e,r){return[...e.layers||[],...e.tables||[]].filter((({layerType:e})=>e?e===r:"ArcGISFeatureLayer"===r))}function p(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function L(e){switch(e){case"catalog":return"CatalogLayer";case"feature":return"ArcGISFeatureLayer";case"oriented-imagery":return"OrientedImageryLayer";case"subtype-group":return"SubtypeGroupLayer"}return null}function w(e){switch(e){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":return"SubtypeGroupLayer"}return"FeatureLayer"}async function N(e,r,a){if(!e?.url)return r??{};if(r??={},!r.layers){const t=await a.fetchServiceMetadata(e.url);r.layers=t.layers?.map(o)}const{serverUrl:t,portalItem:s}=await n(e.url,{sceneLayerItem:e,customParameters:y(r)?.customParameters}).catch((()=>({serverUrl:null,portalItem:null})));if(null==t)return r.tables=[],r;if(!r.tables&&s){const e=await s.fetchData().catch((()=>null));if(e?.tables)r.tables=e.tables.map(o);else{const n=await a.fetchServiceMetadata(t,{customParameters:y(e)?.customParameters}).catch((()=>null));r.tables=n?.tables?.map(o)}}if(r.tables)for(const e of r.tables)e.url=`${t}/${e.id}`;return r}async function S(r){let{portalItem:a}=r;!a||a instanceof e||(a=new e(a));const t=await g(a);return new t.constructor({portalItem:a,...t.properties})}async function g(e){await e.load();const r=new i;return d(await I(e,r))}async function I(e,a){switch(e.type){case"3DTiles Service":return O();case"CSV":return P();case"Feature Collection":return G(e);case"Feature Service":return v(e,a);case"Feed":return _();case"GeoJson":return j();case"Group Layer":return x();case"Image Service":return b(e,a);case"KML":return C();case"Knowledge Graph Layer":return V();case"Map Service":return h(e,a);case"Media Layer":return A();case"Scene Service":return M(e,a);case"Stream Service":return F();case"Vector Tile Service":return T();case"WFS":return W();case"WMS":return $();case"WMTS":return J();default:throw new r("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function d(e){const r=e.className,a=u[r];return{constructor:await a(),properties:e.properties}}async function h(e,r){return await D(e,r)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function v(e,r){const a=await K(e,r);if("object"==typeof a){const{sourceJSON:e,className:r}=a,t={sourceJSON:e};return null!=a.id&&(t.layerId=a.id),{className:r||"FeatureLayer",properties:t}}return{className:"GroupLayer"}}async function M(e,r){const t=await K(e,r,(async()=>{try{if(!e.url)return[];const{serverUrl:a}=await n(e.url,{sceneLayerItem:e}),t=await r.fetchServiceMetadata(a);return t?.tables??[]}catch{return[]}}));if("object"==typeof t){const n={};let s;if(null!=t.id?(n.layerId=t.id,s=`${e.url}/layers/${t.id}`):s=e.url,e.typeKeywords?.length)for(const r of Object.keys(a))if(e.typeKeywords.includes(r))return{className:a[r]};const c=await r.fetchServiceMetadata(s,{customParameters:await r.fetchCustomParameters(e,(e=>y(e)?.customParameters))});return{className:a[c?.layerType]||"SceneLayer",properties:n}}if(!1===t){const a=await r.fetchServiceMetadata(e.url);if("Voxel"===a?.layerType)return{className:"VoxelLayer"}}return{className:"GroupLayer"}}async function G(e){await e.load();const r=t(e,"Map Notes"),a=t(e,"Markup");if(r||a)return{className:"MapNotesLayer"};if(t(e,"Route Layer"))return{className:"RouteLayer"};const n=await e.fetchData();return 1===p(n)?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function b(e,r){await e.load();const a=e.typeKeywords?.map((e=>e.toLowerCase()))??[];if(a.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(a.includes("tiled imagery"))return{className:"ImageryTileLayer"};const t=await r.fetchItemData(e),n=t?.layerType;if("ArcGISTiledImageServiceLayer"===n)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===n)return{className:"ImageryLayer"};const s=await r.fetchServiceMetadata(e.url,{customParameters:await r.fetchCustomParameters(e)}),c=s.cacheType?.toLowerCase(),u=s.capabilities?.toLowerCase().includes("tilesonly"),i=s.tileInfo?.format?.toLowerCase()??"",o=null==c&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(i);return"map"===c||o||u?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function F(){return{className:"StreamLayer"}}function T(){return{className:"VectorTileLayer"}}function j(){return{className:"GeoJSONLayer"}}function O(){return{className:"IntegratedMesh3DTilesLayer"}}function P(){return{className:"CSVLayer"}}function C(){return{className:"KMLLayer"}}function V(){return{className:"KnowledgeGraphLayer"}}function W(){return{className:"WFSLayer"}}function $(){return{className:"WMSLayer"}}function J(){return{className:"WMTSLayer"}}function _(){return{className:"StreamLayer"}}function x(){return{className:"GroupLayer"}}function A(){return{className:"MediaLayer"}}async function D(e,r){const{tileInfo:a}=await r.fetchServiceMetadata(e.url,{customParameters:await r.fetchCustomParameters(e)});return a}async function K(e,r,a){const{url:t,type:n}=e,s="Feature Service"===n;if(!t)return{};if(/\/\d+$/.test(t)){if(s){const a=await r.fetchServiceMetadata(t,{customParameters:await r.fetchCustomParameters(e,(e=>y(e)?.customParameters))});return{id:a.id,className:c(a.type),sourceJSON:a}}return{}}await e.load();let u=await r.fetchItemData(e);if(s){const e=await l(u,t,r),a=U(e);if("object"==typeof a){const r=f(e,a.id);a.className=w(r?.layerType)}return a}"Scene Service"===n&&(u=await N(e,u,r));if(p(u)>0)return U(u);const i=await r.fetchServiceMetadata(t);return a&&(i.tables=await a()),U(i)}function U(e){return 1===p(e)&&{id:y(e)?.id}}const k=Object.freeze({__proto__:null,fromItem:S,selectLayerClassPath:I});export{I as L,l as a,L as c,i as e,w as i,y as l,m as n,N as o,k as p,o as t,p as u};
//# sourceMappingURL=p-014b10d8.js.map