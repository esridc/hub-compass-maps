import{a3 as o,s as p,a7 as r}from"./p-aad64c9f.js";import{p as t}from"./p-fefc46e8.js";import{B as e}from"./p-25b70cc1.js";import"./p-2af77f97.js";import"./p-79c28fb7.js";import"./p-88dd7081.js";import"./p-1826fadd.js";import"./p-e51694e6.js";import"./p-66c1870a.js";import"./p-5d8d2e95.js";import"./p-17b3a90f.js";import"./p-dcc79702.js";import"./p-fa12d64c.js";import"./p-a0f1b2e3.js";async function s(s,i,a){await Promise.resolve(),o(a);const c=e(s,i,{useEllipsoid:a?.useEllipsoid});if(!c)throw new p("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const m=s.cloneAndModifyVertexAttributes(new t({...c,uv:r(s.vertexAttributes.uv),color:r(s.vertexAttributes.color)}),i);return m.transform=null,m}export{s as convertMeshVertexSpace};
//# sourceMappingURL=p-86731423.js.map