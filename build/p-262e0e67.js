import{a1 as t,r as s,aU as i,cb as e,b9 as a,a6 as o,bf as n,a4 as r,a5 as l,af as h}from"./p-028496e2.js";import{i as c,r as u}from"./p-44dc1c97.js";import{a as p,N as m}from"./p-d1d0c06b.js";import{b as f}from"./p-6339641f.js";import{aK as d}from"./p-eaa7279e.js";import{r as g}from"./p-325c6878.js";import{b}from"./p-5c282fdd.js";import{h as v}from"./p-5a65512b.js";import{R as y,E as x,C as _,F as j}from"./p-8567e6fe.js";import{o as z}from"./p-0b0f20ea.js";let S=0;function M(t,s,i){return new c(d(S++),t,t.meshWriter.name,s,i)}const R={geometry:{visualVariableColor:null,visualVariableOpacity:null,visualVariableSizeMinMaxValue:null,visualVariableSizeScaleStops:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null,visualVariableRotation:null}};class V{constructor(){this.instances={fill:M(f.fill,R,{zoomRange:!0}),marker:M(f.marker,R,{zoomRange:!0}),line:M(f.line,R,{zoomRange:!0}),text:M(f.text,R,{zoomRange:!0,referenceSymbol:!1,clipAngle:!1}),complexFill:M(f.complexFill,R,{zoomRange:!0}),texturedLine:M(f.texturedLine,R,{zoomRange:!0})},this._instancesById=Object.values(this.instances).reduce(((t,s)=>(t.set(s.instanceId,s),t)),new Map)}getInstance(t){return this._instancesById.get(t)}}const w=Math.PI/180,A=4;class C extends p{constructor(s){super(),this._program=null,this._vao=null,this._vertexBuffer=null,this._indexBuffer=null,this._dvsMat3=t(),this._localOrigin={x:0,y:0},this._getBounds=s}destroy(){this._vao&&(this._vao.dispose(),this._vao=null,this._vertexBuffer=null,this._indexBuffer=null),this._program=s(this._program)}doRender(t){const{context:s}=t,i=this._getBounds();if(i.length<1)return;this._createShaderProgram(s),this._updateMatricesAndLocalOrigin(t),this._updateBufferData(s,i),s.setBlendingEnabled(!0),s.setDepthTestEnabled(!1),s.setStencilWriteMask(0),s.setStencilTestEnabled(!1),s.setBlendFunction(y.ONE,y.ONE_MINUS_SRC_ALPHA),s.setColorMask(!0,!0,!0,!0);const e=this._program;s.bindVAO(this._vao),s.useProgram(e),e.setUniformMatrix3fv("u_dvsMat3",this._dvsMat3),s.gl.lineWidth(1),s.drawElements(x.LINES,8*i.length,_.UNSIGNED_INT,0),s.bindVAO()}_createTransforms(){return{displayViewScreenMat3:t()}}_createShaderProgram(t){if(this._program)return;const s="precision highp float;\n        uniform mat3 u_dvsMat3;\n\n        attribute vec2 a_position;\n\n        void main() {\n          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);\n          gl_Position = vec4(pos.xy, 0.0, 1.0);\n        }",i="precision mediump float;\n      void main() {\n        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);\n      }";this._program=t.programCache.acquire(s,i,F().attributes)}_updateMatricesAndLocalOrigin(t){const{state:s}=t,{displayMat3:h,size:c,resolution:u,pixelRatio:p,rotation:m,viewpoint:f}=s,d=w*m,{x:b,y:v}=f.targetGeometry,y=i(b,s.spatialReference);this._localOrigin.x=y,this._localOrigin.y=v;const x=p*c[0],_=p*c[1],j=u*x,z=u*_,S=e(this._dvsMat3);a(S,S,h),o(S,S,n(x/2,_/2)),r(S,S,g(c[0]/j,-_/z,1)),l(S,S,-d)}_updateBufferData(t,s){const{x:i,y:e}=this._localOrigin,a=2*A*s.length,o=new Float32Array(a),n=new Uint32Array(8*s.length);let r=0,l=0;for(const t of s)t&&(o[2*r]=t[0]-i,o[2*r+1]=t[1]-e,o[2*r+2]=t[0]-i,o[2*r+3]=t[3]-e,o[2*r+4]=t[2]-i,o[2*r+5]=t[3]-e,o[2*r+6]=t[2]-i,o[2*r+7]=t[1]-e,n[l]=r+0,n[l+1]=r+3,n[l+2]=r+3,n[l+3]=r+2,n[l+4]=r+2,n[l+5]=r+1,n[l+6]=r+1,n[l+7]=r+0,r+=4,l+=8);if(this._vertexBuffer?this._vertexBuffer.setData(o.buffer):this._vertexBuffer=v.createVertex(t,j.DYNAMIC_DRAW,o.buffer),this._indexBuffer?this._indexBuffer.setData(n):this._indexBuffer=v.createIndex(t,j.DYNAMIC_DRAW,n),!this._vao){const s=F();this._vao=new z(t,s.attributes,s.bufferLayouts,{geometry:this._vertexBuffer},this._indexBuffer)}}}const F=()=>b("bounds",{geometry:[{location:0,name:"a_position",count:2,type:_.FLOAT}]});class O extends u{constructor(t){super(t),this._instanceStore=new V,this.checkHighlight=()=>!0}destroy(){super.destroy(),this._boundsRenderer=h(this._boundsRenderer)}get instanceStore(){return this._instanceStore}enableRenderingBounds(t){this._boundsRenderer=new C(t),this.requestRender()}get hasHighlight(){return this.checkHighlight()}onTileData(t,s){t.onMessage(s),this.contains(t)||this.addChild(t),this.requestRender()}_renderChildren(t,s){t.selection=s;for(const s of this.children){if(!s.visible)continue;const i=s.getDisplayList(t.drawPhase,this._instanceStore,m.STRICT_ORDER);i?.render(t)}}}export{O as i};
//# sourceMappingURL=p-262e0e67.js.map