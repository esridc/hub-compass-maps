import{a as t,W as s,aX as e,hS as a,aj as i,s as r,k6 as o,ch as n,X as h}from"./p-3013819f.js";import{o as c,r as p}from"./p-ec95a4fb.js";import{m as u}from"./p-aa275c19.js";import{x as l,j as m}from"./p-8b1f6523.js";import{$ as f}from"./p-37d27f4e.js";import{E as d,N as y}from"./p-19067929.js";import{p as w}from"./p-8c0cd8a3.js";import{o as j,e as g,K as x}from"./p-84aa6e6d.js";import"./p-3b51db5e.js";import"./p-1f0b604e.js";import"./p-347800d3.js";import"./p-94b15954.js";import"./p-6dec395d.js";import"./p-9a9a9a0b.js";import"./p-4f73c6ea.js";import"./p-a20ea8a0.js";import"./p-1cf43261.js";import"./p-976040d8.js";import"./p-9a63ab56.js";import"./p-c1b8730f.js";import"./p-2779f4bc.js";import"./p-b821ae32.js";import"./p-cf1b911c.js";const b="esri.layers.WFSLayer";class C{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(i,r={}){const{getFeatureUrl:o,getFeatureOutputFormat:n,fields:h,geometryType:c,featureType:p,maxRecordCount:m,maxTotalRecordCount:d,maxPageCount:y,objectIdField:w,customParameters:g}=i,{spatialReference:x,getFeatureSpatialReference:b}=j(o,p,i.spatialReference);try{await l(b,x)}catch{throw new t("unsupported-projection","Projection not supported",{inSpatialReference:b,outSpatialReference:x})}s(r),this._customParameters=g,this._featureType=p,this._fieldsIndex=e.fromLayerJSON({fields:h,dateFieldsTimeReference:h.some((t=>"esriFieldTypeDate"===t.type))?{timeZoneIANA:a}:null}),this._geometryType=c,this._getFeatureUrl=o,this._getFeatureOutputFormat=n,this._getFeatureSpatialReference=b,this._maxRecordCount=m,this._maxTotalRecordCount=d,this._maxPageCount=y,this._objectIdField=w,this._spatialReference=x;let C=await this._snapshotFeatures(r);if(C.errors.length>0&&(this._supportsPagination=!1,C=await this._snapshotFeatures(r),C.errors.length>0))throw C.errors[0];return this._queryEngine=new f({fieldsIndex:this._fieldsIndex,geometryType:c,hasM:!1,hasZ:!1,objectIdField:w,spatialReference:x,timeInfo:null,featureStore:new u({geometryType:c,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(C.features),{warnings:T(C),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new t("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,s.signal)}async queryFeatureCount(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,s.signal)}async queryObjectIds(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,s.signal)}async queryExtent(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,s.signal)}async querySnapping(t,s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,s.signal)}async refresh(t){return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=i((t=>this._snapshotFeatures({signal:t}))),this._snapshotTask.promise.then((t=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(t.features);for(const s of T(t))r.getLogger(b).warn(new o("wfs-layer:refresh-warning",s.message,s.details));t.errors?.length&&r.getLogger(b).warn(new o("wfs-layer:refresh-error","Refresh completed with errors",{errors:t.errors}))}),(()=>{this._queryEngine.featureStore.clear()})),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t?.signal,a=this._maxTotalRecordCount,i=this._maxPageCount,r=this._supportsPagination?await g(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let o=[];const n=[];if(null==r)try{o=await this._singleQuery(e)}catch(t){h(t)||n.push(t)}else{const t=Math.min(r,a),s=R(this,Math.max(1,Math.min(Math.ceil(t/this._maxRecordCount),i)),e);await Promise.allSettled(Array.from({length:10}).map((()=>F(s,o,n))))}return s(e),{features:o,totalRecordCount:r,maxTotalRecordCount:a,maxPageCount:i,errors:n}}async _singleQuery(t){const s=await x(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:t});return this._processGeoJSON(s,{signal:t})}async _pageQuery(t,s){const e=t*this._maxRecordCount,a=await x(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:e,count:this._maxRecordCount,signal:s});return this._processGeoJSON(a,{startIndex:e,signal:s})}_processGeoJSON(t,e){d(t,this._getFeatureSpatialReference.wkid);const{startIndex:a,signal:i}=e;s(i);const r=y(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!n(this._spatialReference,this._getFeatureSpatialReference))for(const t of r)null!=t.geometry&&(t.geometry=c(m(p(t.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let o=a??1;for(const t of r){const s={};w(this._fieldsIndex,s,t.attributes,!0),t.attributes=s,null==s[this._objectIdField]&&(t.objectId=s[this._objectIdField]=o++)}return r}}function*R(t,s,e){for(let a=0;a<s;a++)yield t._pageQuery(a,e)}async function F(t,s,e){let a=t.next();for(;!a.done;){try{const t=await a.value;s.push(...t)}catch(t){h(t)||e.push(t)}a=t.next()}}function T(t){const s=[];return null!=t.totalRecordCount&&(t.features.length<t.totalRecordCount&&s.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${t.features.length} of ${t.totalRecordCount} in ${t.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:t.features.length,totalRecordCount:t.totalRecordCount}}),t.totalRecordCount>t.maxTotalRecordCount&&s.push({name:"wfs-layer:large-dataset",message:`The number of ${t.totalRecordCount} features exceeds the maximum allowed of ${t.maxTotalRecordCount}.`,details:{recordCount:t.features.length,totalRecordCount:t.totalRecordCount,maxTotalRecordCount:t.maxTotalRecordCount}})),s}export default C;
//# sourceMappingURL=p-81c142ad.js.map