import{dE as s,dG as t,an as i,ao as e,ap as p,c3 as o,dc as h,af as r,ah as l,ai as a}from"./p-3013819f.js";import{h as m}from"./p-b4639a86.js";import{m as n,u as c}from"./p-4e55d8f0.js";import{t as j}from"./p-9cf72458.js";import{$ as d}from"./p-6d5c327b.js";import"./p-3b51db5e.js";import"./p-0d83e514.js";import"./p-7b13247d.js";import"./p-b362a32c.js";import"./p-8567e6fe.js";import"./p-c268fbe3.js";import"./p-17c1fa4b.js";import"./p-b6b871c6.js";import"./p-ffa11fc1.js";import"./p-808395fb.js";import"./p-30a1f911.js";import"./p-508fdb0a.js";import"./p-f1aede5a.js";import"./p-94b15954.js";import"./p-a9376829.js";import"./p-3811f238.js";import"./p-e6812c2f.js";import"./p-a925664a.js";import"./p-a897fcf8.js";import"./p-c7810a6f.js";import"./p-201cec5f.js";import"./p-89242a33.js";import"./p-7580bdba.js";import"./p-a62b18ce.js";import"./p-2d8c68ca.js";import"./p-d97e7de8.js";import"./p-595ce045.js";import"./p-10e5b6ea.js";import"./p-3b8b0ae8.js";import"./p-ec95a4fb.js";import"./p-1f0b604e.js";import"./p-347800d3.js";import"./p-72db18d5.js";import"./p-325c6878.js";import"./p-721433ed.js";import"./p-1cf43261.js";import"./p-8b1f6523.js";import"./p-4f73c6ea.js";import"./p-ffb26433.js";let f=class extends(s(t)){constructor(s){super(s),this.frameCenter=null,this.frameOutline=null,this.lineOfSight=null,this.sensorLocation=null,this.sensorTrail=null}};i([e({type:Boolean})],f.prototype,"frameCenter",void 0),i([e({type:Boolean})],f.prototype,"frameOutline",void 0),i([e({type:Boolean})],f.prototype,"lineOfSight",void 0),i([e({type:Boolean})],f.prototype,"sensorLocation",void 0),i([e({type:Boolean})],f.prototype,"sensorTrail",void 0),f=i([p("esri.layers.support.TelemetryDisplay")],f);const b=f;const u=new o([255,127,0]);let y=class extends(n(c)){constructor(){super(...arguments),this._graphicsLayer=new m,this._frameOutlineGraphic=new h({symbol:{type:"simple-fill",outline:{type:"simple-line",color:u}}}),this._sensorTrailGraphic=new h({symbol:{type:"simple-line",color:u}}),this._lineOfSightGraphic=new h({symbol:{type:"simple-line",color:u}}),this._sensorLocationGraphic=new h({symbol:{type:"simple-marker",color:u}}),this._frameCenterGraphic=new h({symbol:{type:"simple-marker",color:u}}),this.layer=null,this.symbolColor=u,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=r(this._graphicsLayer)}initialize(){this.addHandles(l((()=>this.symbolColor),(()=>{this._frameOutlineGraphic.symbol.outline.color=this.symbolColor,this._sensorTrailGraphic.symbol.color=this.symbolColor,this._lineOfSightGraphic.symbol.color=this.symbolColor,this._sensorLocationGraphic.symbol.color=this.symbolColor,this._frameCenterGraphic.symbol.color=this.symbolColor}),a)),this._graphicsLayer.graphics.addMany([this._frameOutlineGraphic,this._sensorTrailGraphic,this._lineOfSightGraphic,this._sensorLocationGraphic,this._frameCenterGraphic]),this.visibleTelemetryElements=new b({frameCenter:this.layer.telemetryDisplay?.frameCenter??!0,frameOutline:this.layer.telemetryDisplay?.frameOutline??!0,lineOfSight:this.layer.telemetryDisplay?.lineOfSight??!0,sensorLocation:this.layer.telemetryDisplay?.sensorLocation??!0,sensorTrail:this.layer.telemetryDisplay?.sensorTrail??!0})}attach(){this.graphicsView=new d({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new j(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([l((()=>[this.layer.telemetryDisplay?.frameCenter,this.layer.telemetryDisplay?.frameOutline,this.layer.telemetryDisplay?.sensorLocation,this.layer.telemetryDisplay?.sensorTrail,this.layer.telemetryDisplay?.lineOfSight]),(()=>this._updateVisibleTelemetryElements()),a),l((()=>[this.layer.telemetry,this.visibleTelemetryElements?.frameCenter,this.visibleTelemetryElements?.frameOutline,this.visibleTelemetryElements?.sensorLocation,this.visibleTelemetryElements?.sensorTrail,this.visibleTelemetryElements?.lineOfSight]),(()=>this._updateGraphicGeometries()),a)])}detach(){this.container.removeAllChildren(),this.graphicsView=r(this.graphicsView)}supportsSpatialReference(s){return!0}moveStart(){}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(s){this.graphicsView.processUpdate(s)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:s}=this.layer,{visibleTelemetryElements:t}=this;s&&t&&(t.frameOutline&&s.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,t.sensorTrail&&s.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,t.lineOfSight&&s.lineOfSight?this._lineOfSightGraphic.geometry=this.layer.telemetry.lineOfSight:this._lineOfSightGraphic.geometry=null,t.sensorLocation&&s.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,t.frameCenter&&s.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}};i([e()],y.prototype,"graphicsView",void 0),i([e()],y.prototype,"layer",void 0),i([e()],y.prototype,"symbolColor",void 0),i([e({type:b})],y.prototype,"visibleTelemetryElements",void 0),y=i([p("esri.views.2d.layers.VideoLayerView2D")],y);const v=y;export default v;
//# sourceMappingURL=p-2d95d886.js.map